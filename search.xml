<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo使用过中遇到的一个小问题]]></title>
    <url>%2Fhexo%E4%BD%BF%E7%94%A8%E8%BF%87%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[问题描述新博客搭建不久，突然hexo g报错， 12345678910111213$ hexo g(node:14620) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.INFO [hexo-math] Using engine &apos;mathjax&apos;INFO Start processingFATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlTemplate render error: (unknown path) [Line 12, Column 47] expected variable end at Object._prettifyError (D:\hexo\node_modules\nunjucks\src\lib.js:36:11) at Template.render (D:\hexo\node_modules\nunjucks\src\environment.js:542:21) at Environment.renderString (D:\hexo\node_modules\nunjucks\src\environment.js:380:17) at Promise.fromCallback.cb (D:\hexo\node_modules\hexo\lib\extend\tag.js:62:48) at tryCatcher (D:\hexo\node_modules\bluebird\js\release\util.js:16:23) at Function.Promise.fromNode.Promise.fromCallback (D:\hexo\node_modules\bluebird\js\release\promise.js:180:30) 删除新写的文章之后，问题消失了， 仔细检查发现文章中公式里出现了两个连续的中括号“{ {”，导致了异常 解决方案用空格给隔开就好了]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019年3月11日 暑期实习之腾讯面试]]></title>
    <url>%2F2019%E5%B9%B43%E6%9C%8811%E6%97%A5-%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0%E4%B9%8B%E8%85%BE%E8%AE%AF%E9%9D%A2%E8%AF%95%2F</url>
    <content type="text"><![CDATA[1. 基本情况2019年暑期实习提前批-腾讯安全云（内推自师姐的闺蜜） 2. 面试内容（30分钟） 自我介绍 介绍你的研究方向和项目 数据不平衡问题怎么解决的 如何降维，考虑用什么方法，为什么用这个方法 使用了什么算法， 哪一个效果好，为什么效果好 如何检测异常值，如何处理误判 如何处理过拟合问题 描述L1,L2，本质和区别 机器学习基本算法了解哪些 请介绍SVM SVM对偶问题 核函数有哪些 哪些可以成为核函数（半正定） 随机森林，gbdt，xgboost的区别与关系 深度学习算法了解哪些 描述CNN 计算卷积之后的矩阵大小，一共有多少个参数 SQL in join时如何解决数据不均衡的问题 3. 总结首次面试，电面不考算法题。主要问项目细节和基础知识。 只争取到两天复习时间，准备得很不充分 准备不充分（自我介绍，项目介绍，项目细节要自己过几遍） 基础不扎实，卷积怎么算都不记得了 很多时候，如果面试官问到一个比较基础的问题，你没答上来，那你就跪了，所以回答之前要三思熟虑，别急着回答，好好想一想。 好好准备吧，后面多投一投，至少面个15家公司再说 Offer = 0.3心态 + 0.5实力 + 0.2运气，缺一不可 越早开始准备越好，准备的越充分越好 切忌眼高手低。前期尽量多利用小公司的面试机会来锻炼自己，积累经验。 在面试的过程中找准自己的定位，并且适当的根据面试情况及时调整自己的定位和目标，保持信心，但不能盲目自信。不管是大公司还是小公司，尽早拿到第一个offer。]]></content>
      <tags>
        <tag>面经</tag>
        <tag>暑期实习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LR 机器学习复习笔记-1]]></title>
    <url>%2FLR-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0-1%2F</url>
    <content type="text"><![CDATA[1. 基本原理 逻辑斯特回归，Logistic Regression，二分类问题 算法性质：他的输出永远在0到1之间 适用情况：标签y取离散值 如何拟合参数的： 将根据参数得到的计算值映射到0-1区间 2. 推导公式训练集：$$ { ( x ^ { ( 1 ) } ,y ^ { ( 2 ) } ) , ( x ^ { ( 1 ) },y ^ { ( 2 ) } ),…,( x ^ { ( m ) },y ^ { ( m ) } ) } $ $ 数据范围：$ x \in [ x_0 , x_1 , … , x_n ] ^T , y \in { \{0,1\} } $ LR映射函数sigmoid : $ h_\theta(x) = \dfrac{ 1 } { 1+e^{ - \theta^T x} } $ 损失函数：$Cost(h_\theta(x),y) = -y \log(h_\theta( x ) ) - (1-y) \log(1-h_\theta(x) )$ PS:为什么不用线性模型的平方和（MSE） 答：将平方和带入 $ h_\theta(x) $ 会得到一个非凸函数（non-convexfunction），非凸函数影响梯度随机算法寻找全局最小值 代价函数：$ J(\theta)= \dfrac{ 1 } { m } \sum^m_{ i=1 } Cost(h_\theta(x^{ (i ) } ) - y ^ { ( i ) } ) $ 代价函数与损失函数关系：个体与总体的关系 3. 代价函数代码12345678import numpy as npdef cost(theta, X, y)： theta = np.matrix(theta) X = np.matrix(X) y = np.matrix(y) first = np.multiply(-y, np.log(sigmoid(X*theta.T))) second = np,multiply(1-y,np.log(1-sigmoid(X*theta.T))) return np.sum(first-second)/(len(X)) 4. 如何求得使代价函数最小的参数梯度下降算法: $repeat { \{ \theta_ j:= \theta_j - \alpha \frac { \partial } { \partial_{ \theta_j } } J (\theta) \} } ;​$ $ Want \min _\theta J(\theta) ​$: $repeat { \{ \theta_ j:= \theta_j - \alpha \frac{ 1 } { m } \sum_{ i=1 }^m (h_\theta( x ^ { i } ) - y^{ ( i ) } ) } x_j^ { ( i ) }$ 5. 如何理解梯度下降参考这篇文章：深入浅出—梯度下降法及其实现 复习的时候脑子一时短路，想不明白梯度下降的原理了 6. 面试常常问到的问题后面再补]]></content>
  </entry>
  <entry>
    <title><![CDATA[leetcode - 904 水果成篮]]></title>
    <url>%2Fleetcode-904-%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE%2F</url>
    <content type="text"><![CDATA[在一排树中，第 i 棵树产生 tree[i] 型的水果。你可以从你选择的任何树开始，然后重复执行以下步骤： 把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。移动到当前树右侧的下一棵树。如果右边没有树，就停下来。请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。 你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。用这个程序你能收集的水果总量是多少？ 示例 1： 输入：[1,2,1]输出：3解释：我们可以收集 [1,2,1]。示例 2： 输入：[0,1,2,2]输出：3解释：我们可以收集 [1,2,2].如果我们从第一棵树开始，我们将只能收集到 [0, 1]。示例 3： 输入：[1,2,3,2,2]输出：4解释：我们可以收集 [2,3,2,2].如果我们从第一棵树开始，我们将只能收集到 [1, 2]。示例 4： 输入：[3,3,3,1,2,1,1,2,3,3,4]输出：5解释：我们可以收集 [1,2,1,1,2].如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 个水果。 解题思路这题其实要求其实很简单，就是找出数组中长度最大的连续由2种元素构成的子数组，返回这个子数组的长度。但由于本题有时间限制，只是朴素的解法会出现超时的情况，需要对实现进行一定的优化。 参考花花酱的hashtable+ sliding windows 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071class Solution &#123;public:// 朴素解法 int totalFruit(vector&lt;int&gt;&amp; tree) &#123; int size = tree.size(); int fruit[size] = &#123;0&#125;; int max =0; for(int i = 0; i&lt; size;i++)&#123; int number = 1; int type1 = -1; // 第一种水果 type1 = tree[i]; int type2 = -1; for(int j = i+1; j&lt;size ;j++)&#123; // 第二种水果 if(tree[j]!=tree[i])&#123; // type2 is null if(type2 &lt; 0)&#123; type2 = tree[j]; number++; &#125;else&#123; // 出现第三种水果，跳出循环 if(tree[j] != type2)&#123; break; &#125;else&#123; number++; &#125; &#125; &#125;else&#123; number++; &#125; &#125; fruit[i] = number; if(number&gt; max) max = number; &#125; return max; &#125; public:// by [花花酱] (https://zxi.mytechroad.com/blog/hashtable/leetcode-904-fruit-into-baskets/) int totalFruit(vector&lt;int&gt;&amp; tree) &#123; map&lt;int, int&gt; idx; // &#123;fruit -&gt; last_index&#125; int ans = 0; int cur = 0; for (int i = 0; i &lt; tree.size(); ++i) &#123; int f = tree[i]; // 取一种水果 if (!idx.count(f)) &#123; // 返回值只有0或1 // !idx.count(f) == 1,即出现某种新水果时 if (idx.size() == 2) &#123; // 如果已经有了两种水果，再出现第三种水果的时候 auto it1 = begin(idx); auto it2 = next(it1); if (it1-&gt;second &gt; it2-&gt;second) swap(it1, it2); // 找到之前两种水果中，下标最小的水果，开始新的窗口 cur = i - it1-&gt;second - 1; // cur存新窗口的大小 idx.erase(it1); // 删除下标较小的水果 &#125; &#125; // 添加新水果的下标信息 idx[f] = i; // 比较新窗口和上一个窗口的大小 ans = max(++cur, ans); &#125; return ans; &#125;&#125;;]]></content>
      <tags>
        <tag>leetcode 刷题笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建hexo博客]]></title>
    <url>%2F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[1动机：看到别人有，羡慕，觉得好玩，实践了一下，前后大概两小时 相关软件安装 Git Node.js Hexo Hexo 环境配置1.Hexo主题 选一个自己喜欢的主题，我这里直接用了教程里的nexT，后面遇到喜欢的再改吧 Github 主页 12$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next 2.初始化博客 选一个空白的不需要管理员权限的文件夹，打开git bash，在终端输入下面的代码，初始化博客 123456#建立一个博客文件夹，并初始化博客，&lt;folder&gt;为文件夹的名称，可以随便起名字$ hexo init &lt;folder&gt;#进入博客文件夹，&lt;folder&gt;为文件夹的名称$ cd &lt;folder&gt;# node.js的命令，根据博客既定的dependencies配置安装所有的依赖包$ npm install 3.基本配置 比如博客名，个人介绍呀，参考了这篇文章简书:Hexo的Next主题详细配置 1.站点计数 可以直接在配置里将busuanzi的false改成true，参考文档 2.配置在线后台管理 hexo 有个插件可以在网页上对博客进行管理，但是我觉得使用起来并不流流畅，还不如使用本地markdown工具Typora，不过配不配和用不用又没什么直接关系。 3.Hexo-admin `$ nmp i hexo-admin --save` 这个时候，登录 http://localhost:4000/admin 即可查看所有文章内容，并可视化进行修改。 还可以添加配置后台账号密码，我没设置，哈哈。 4.通过域名访问博客 绑到了GitHub.io，具体教程可以看这里GitHub+Hexo 搭建个人网站详细教程不绑域名是因为买过，然后没怎么用就忘掉了。有机会再绑自己的域名吧 5.添加评论(2019年3月14添加) 也是超级方便几行代码，详细参考这个为你的Hexo加上评论系统-Valine 有个小bug就是，在添加appid和appkey的时候，记得删除leancloud占位符 6.给博客添加豆瓣插件 参考这里 看到人家博客还有豆瓣读书什么的，给自己也加了一个，但是好像得时长更新一下。 4.小问题busuanzi计数问题（未解决,本地依旧不太对） 主题语言设定问题，中文要使用 zh-CN 无需列表换行问题（未解决，可能是不同平台的问题） 数学公式无法渲染（未解决，19.3.14）]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>搭建环境</tag>
      </tags>
  </entry>
</search>
