{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/404.html","path":"404.html","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/icarus/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/favicon.svg","path":"img/favicon.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/favicon_hututu.png","path":"img/favicon_hututu.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/og_image.png","path":"img/og_image.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/thumbnail.svg","path":"img/thumbnail.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/default.styl","path":"css/default.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/wechet-tutu.jpg","path":"img/wechet-tutu.jpg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/alipay-tutu.jpg","path":"img/alipay-tutu.jpg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/default.css","path":"css/default.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/BTCQR.png","path":"img/BTCQR.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/donate/index.html","path":"donate/index.html","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/donate.css","path":"css/donate.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/AliPayQR.png","path":"img/AliPayQR.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/WeChatQR.png","path":"img/WeChatQR.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1594729066000},{"_id":"themes/icarus/.eslintrc.json","hash":"b6de6612836a7814bae9a51a5089609853cc44a2","modified":1594729066000},{"_id":"themes/icarus/LICENSE","hash":"bb9d587dd8b9073462ae10daf252ea3092a81b1b","modified":1594729066000},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"c5086f94020aa58e2a7d131806e0cf15e7b54854","modified":1594729066000},{"_id":"themes/icarus/.travis.yml","hash":"d7c64bd876f0af1288d855a6d61d691d27770560","modified":1594729066000},{"_id":"themes/icarus/_config.yml","hash":"c8ba23464d8db6d394aaa06aa01345a40eb1e21f","modified":1615019789381},{"_id":"themes/icarus/README.md","hash":"6ae64e63c2f6f9657a8932001a07f89fc7e87ea7","modified":1594729066000},{"_id":"themes/icarus/package.json","hash":"7d2f277cab1d25ddf8908b1f6429e20d475d9d6f","modified":1594729066000},{"_id":"themes/icarus/.gitignore","hash":"8ecd21ae1f2cdc3cf59b71a526564252c93b84df","modified":1594729066000},{"_id":"source/404.html","hash":"dc910ff033d6f3d55cec9e50a97230995a5d6923","modified":1550487430000},{"_id":"source/favicon.ico","hash":"29ec8d148be1e6e9e63dbf4a5bac4737dc88e4cd","modified":1552461548000},{"_id":"themes/icarus/include/dependency.js","hash":"121cb3c4946c1d0eab632b8e104bb8757539b33b","modified":1594729066000},{"_id":"themes/icarus/include/register.js","hash":"34f5a2a774ccbf50e18cb93cc7e2b8ea9c0b3a83","modified":1594729066000},{"_id":"themes/icarus/include/config.js","hash":"bd4b10b7ad360ac09912646c04efc021ff3d45ad","modified":1594729066000},{"_id":"themes/icarus/languages/es.yml","hash":"f0ea2c482a8bc5ed43452ecc7ebe601504e0cc54","modified":1594729066000},{"_id":"themes/icarus/languages/de.yml","hash":"ef43979c403b3a221585d5dd0b7205627437818e","modified":1594729066000},{"_id":"themes/icarus/languages/en.yml","hash":"9d14e90a3f3dde00b982fa56becd8e63925ff6cd","modified":1594729066000},{"_id":"themes/icarus/languages/fr.yml","hash":"b85a2d4fcc790a8b84326235850eb54532f6b75e","modified":1594729066000},{"_id":"themes/icarus/languages/id.yml","hash":"ee655e6a045eb28ea480a348bbefd10ef115494b","modified":1594729066000},{"_id":"themes/icarus/languages/ja.yml","hash":"3c921f24b19a797b2ae23cf621a35bb9b043ddf9","modified":1594729066000},{"_id":"themes/icarus/languages/pl.yml","hash":"a6dbd568cb18104685b20ab7b5767f455628f61c","modified":1594729066000},{"_id":"themes/icarus/languages/ko.yml","hash":"2d12f3975b576afb025df773e30521b58abd015e","modified":1594729066000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"28ae713d8d26ab875104684e604592f4c495b638","modified":1594729066000},{"_id":"themes/icarus/languages/ru.yml","hash":"62451109780acfe2db8630248005697c10a68a61","modified":1594729066000},{"_id":"themes/icarus/languages/tr.yml","hash":"2e334f0f98756256754f48d8dff3baa045700283","modified":1594729066000},{"_id":"themes/icarus/languages/vn.yml","hash":"cd2d57a3fe6389bdd76f193c6c662d242960ed02","modified":1594729066000},{"_id":"themes/icarus/scripts/index.js","hash":"6156ee1e29064e851aeef66305302103a379cae3","modified":1594729066000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"eaede43f04878974f43eff4d41cb28bf4c2908fe","modified":1594729066000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"915b3868a8fa5af2d4a81bebaec1fce9c160c530","modified":1594729066000},{"_id":"themes/icarus/layout/categories.jsx","hash":"50d81072a5b5508a906b2c96289982d081a59edd","modified":1594729066000},{"_id":"themes/icarus/.github/stale.yml","hash":"ee2ab70ba5da09a8c0d78097d68d0a809e91f2da","modified":1594729066000},{"_id":"themes/icarus/layout/archive.jsx","hash":"eef212d92edd1f10d3f0756cd153771ea925dbbc","modified":1594729066000},{"_id":"themes/icarus/layout/category.jsx","hash":"16c8cf03fd976d839242dcf9240ccaf59b843daa","modified":1594729066000},{"_id":"themes/icarus/layout/index.jsx","hash":"c2e7008020c4358f491c8e2ad871aa2274a427d0","modified":1594729066000},{"_id":"themes/icarus/layout/layout.jsx","hash":"4103d29daf78d4d36aef428ad57ed82f5f108d1a","modified":1594729066000},{"_id":"themes/icarus/layout/page.jsx","hash":"8a3cce132f7a4d52450cdcada54afeb5465fdc8d","modified":1594729066000},{"_id":"themes/icarus/layout/post.jsx","hash":"8a3cce132f7a4d52450cdcada54afeb5465fdc8d","modified":1594729066000},{"_id":"themes/icarus/layout/tag.jsx","hash":"49c04b040ba0ff138ad36d6478bd76e18edc8085","modified":1594729066000},{"_id":"themes/icarus/layout/tags.jsx","hash":"5bd27a87fc6e456beb3e56e1dcdbd1f7ac010ce1","modified":1594729066000},{"_id":"source/about/index.md","hash":"775bb12cb055ace4023c8905b813fd05d8cd6e1d","modified":1594732256000},{"_id":"source/_drafts/2019年阶段整理.md","hash":"5deca93a5c19eac6004a852fe9822a0beb7e6479","modified":1594733858000},{"_id":"source/_posts/2019年第一季度总结.md","hash":"87bf8392fa1a7917698f1fc8ca7c0cc1f6526b49","modified":1594785390000},{"_id":"source/_posts/2019年3月11日-暑期实习之腾讯面试.md","hash":"ca884e1391d3f26398291d2fd053cdbc3d5c61d3","modified":1553678084000},{"_id":"source/_posts/2019年阶段整理.md","hash":"ddd314ad6dac300544c70715a59021779863ff3d","modified":1594785198000},{"_id":"source/_posts/2020年新方向.md","hash":"0320000f6fc4dd6b0661afa7e062d6148ff8a946","modified":1594785732000},{"_id":"source/_posts/Leetcode-1-两数之和（Two-Sum）.md","hash":"e63b87227f254fbb4f59812375573fb1069bd05e","modified":1554098302000},{"_id":"source/_posts/LR-机器学习复习笔记-1.md","hash":"f0724ce2b861dd9f92eeada6b57857fc09b76879","modified":1553677940000},{"_id":"source/_posts/Leetcode-2-两数相加（Add-Two-Numbers）.md","hash":"c2eb07c54af4e666b1da7c13ba2e873c5e80b7ef","modified":1554170994000},{"_id":"source/_posts/leetcode-904-水果成篮.md","hash":"9c97e0e314a3f527d3cb7565ed899489ff5b9c5a","modified":1554084868000},{"_id":"source/_posts/依图科技机器学习算法测试工程师一面（19-3-28）.md","hash":"09079ffdea0443e1d8e47de912197bea25f03332","modified":1554084844000},{"_id":"source/_posts/hexo使用过中遇到的一个小问题.md","hash":"a91a07d410d0a58367872af45ce6391ff828d4ab","modified":1553678040000},{"_id":"source/_posts/Leetcode-3-无重复字符的最长子串-Python.md","hash":"2263ee12afdf8a7b461ef7e153c876f0607a894e","modified":1554172500000},{"_id":"source/_posts/剑指offer（第二版）学习记录卡.md","hash":"b0da390c4000b27ce09f5b67d6910e2fe3d1aebf","modified":1572610470000},{"_id":"source/_posts/和导师谈话后的整理.md","hash":"c98b7dabf1f86a0dc1adbed8cc9578a63d35bd19","modified":1594785366000},{"_id":"source/_posts/搭建hexo博客.md","hash":"353c91ff6ebb12109c4666296ebd8fba72ce1724","modified":1553677984000},{"_id":"source/_posts/给博客加了点趣味.md","hash":"e4fc82513b79a837977ba9e26f399108b06235ed","modified":1553677918000},{"_id":"source/_posts/阿里测试工程师一面（19-3-27）.md","hash":"323d122c99599b7b57f90b5c91713a95447a34e7","modified":1554084854000},{"_id":"source/bookmark/index.md","hash":"a4c690faf32ab9ecabd22607be407f580fffa4ad","modified":1550487430000},{"_id":"source/categories/index.md","hash":"5636c2d14d870c2662a7a811099981cdd7f272e6","modified":1552570600000},{"_id":"source/resume/index.md","hash":"eddbbf9bccf42b3aa08b09d7e536ed76e4a4f385","modified":1594733902000},{"_id":"source/top/index.md","hash":"c4b554ada89c93656997c5dae7d16dab518eeb44","modified":1553664330000},{"_id":"source/tags/index.md","hash":"fe3eed1e6ebcaec1aaa68a351d6c94ce18f8e8b6","modified":1594732536000},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/include/migration/head.js","hash":"c32df32ae70cd5e522de5481cde4e7c416b4dbec","modified":1594729066000},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"9426e6bc533d7c7ce6469f0e9af3116d16f8ebe5","modified":1594729066000},{"_id":"themes/icarus/include/schema/config.json","hash":"0b4810adae5ad713c535a5abe126bfb044c861e7","modified":1594729066000},{"_id":"themes/icarus/include/style/base.styl","hash":"ad8e20db748e299d7436e1ef8269a5c8029b3315","modified":1594729066000},{"_id":"themes/icarus/include/style/article.styl","hash":"5990348fe849fb8bb6801731be46fe0ad0c93c58","modified":1594729066000},{"_id":"themes/icarus/include/style/button.styl","hash":"f9e52370ee7801b35682d76071f98f7ce6126231","modified":1594729066000},{"_id":"themes/icarus/include/style/card.styl","hash":"6feb59420aa2fd67e52dd5b917623dc2fcb75bda","modified":1594729066000},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"62e452b7d7aa5ac6233798a690026b526cb245a7","modified":1594729066000},{"_id":"themes/icarus/include/style/donate.styl","hash":"41495808091511b475d35e3b3491e2d345584601","modified":1594729066000},{"_id":"themes/icarus/include/style/footer.styl","hash":"d90d5137f29841ca4dc48c62e344bebe0cd7aa76","modified":1594729066000},{"_id":"themes/icarus/include/style/helper.styl","hash":"113719489effa9529756c7763725dfe4f8591b8d","modified":1594729066000},{"_id":"themes/icarus/include/style/navbar.styl","hash":"ae0e3a559e4aed6bb33ccb81765677ac30d535da","modified":1594729066000},{"_id":"themes/icarus/include/style/pagination.styl","hash":"7e1aba7d4442b5ba39b82569341c4e939a8005cc","modified":1594729066000},{"_id":"themes/icarus/include/style/plugin.styl","hash":"f23c80665bcef81640eeb635f265418fa0f66ace","modified":1594729066000},{"_id":"themes/icarus/include/style/responsive.styl","hash":"9a481311478b788851d437b82a934fcfce758f9f","modified":1594729066000},{"_id":"themes/icarus/include/style/search.styl","hash":"ff947d107b57b5d8865680be1301f6c49abcc3e1","modified":1594729066000},{"_id":"themes/icarus/include/util/console.js","hash":"9bd6d4691b56012ea17146db577e27ae20e0c335","modified":1594729066000},{"_id":"themes/icarus/include/style/timeline.styl","hash":"0f15f648821abe412e2105e157c9810bb4834aa4","modified":1594729066000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"63d02fa86bdd6ff0c6d6a3717fc33187d6555dc5","modified":1594729066000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"53a4b20cf1f30c6d334918b646db6842c77e95ef","modified":1594729066000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/config.yml","hash":"3c91c27d3bde6d15e9c78c454c91ae414fe69d30","modified":1594729066000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"4c5fea047359feddc80f62d24b3cab284a8440fc","modified":1594729066000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/功能建议.md","hash":"144eb57d0e0d9121eb872195af5a42c8a6bbe9eb","modified":1594729066000},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"490a3717d4d18ddccb90f1fd14acf8b2fbb300dc","modified":1594729066000},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"0ab94bbc55bda6f3f284cbd208efa4ed8205481c","modified":1594729066000},{"_id":"themes/icarus/layout/common/article.jsx","hash":"139d104572ad54b9e737cf3f76d9c9a7b31e22d8","modified":1594729066000},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"c026449e4bc757fbd9edb5b870d56f7b7a349497","modified":1594729066000},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"583a29899f56f278caf3afbe019a17e1ec7fc027","modified":1594729066000},{"_id":"themes/icarus/layout/common/head.jsx","hash":"02a8772175167f67f5ef779e84dd57335ca9a965","modified":1594729066000},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"59786a8510709ff43f2af0e01ff9715cdebc26fd","modified":1594729066000},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"fedab3e147ae1ed2d730a559c29e72b2315db5c1","modified":1594729066000},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"a40608473a1674de2ed05c5dc5627ab1d7a12744","modified":1594729066000},{"_id":"themes/icarus/layout/common/search.jsx","hash":"82a0cf309dbe5257f30c95621dd4e6521b912cbc","modified":1594729066000},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"ec282a8d470b29cce2415c0a9bddcfb41cedafcf","modified":1594729066000},{"_id":"themes/icarus/layout/common/share.jsx","hash":"ed9aba6def6515df79b77e231f8620b0e209e30c","modified":1594729066000},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"bd2b9209051a03e5cb3bdf2c97e6c16d0d75cb8a","modified":1594729066000},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"efff826b01ac0f8fc2619b6c43660ef8d6de6c3f","modified":1594729066000},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"56c9c87f5b660f54d1b602b95281effe8878c4cb","modified":1594729066000},{"_id":"themes/icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1594729066000},{"_id":"themes/icarus/source/img/favicon.svg","hash":"50322629b1947588ff7a6e59fb07cb1b5bfb9f8c","modified":1594729066000},{"_id":"themes/icarus/source/img/favicon_hututu.png","hash":"29ec8d148be1e6e9e63dbf4a5bac4737dc88e4cd","modified":1552461548000},{"_id":"themes/icarus/source/img/logo.svg","hash":"f4a9aa50f9a732981ae79e3711a997fc7325a7db","modified":1594729066000},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1594729066000},{"_id":"themes/icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1594729066000},{"_id":"themes/icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1594729066000},{"_id":"themes/icarus/source/img/thumbnail.svg","hash":"38801ce6b2f60c660e1b8868da902c9ab553c82f","modified":1594729066000},{"_id":"themes/icarus/source/css/default.styl","hash":"b2d886eacd43ab395ae3221e92bc0a9d23eff3a0","modified":1594729066000},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"13b12c6024a67561a3678d1480113dfdf48f0269","modified":1594729066000},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"45c9014e02fbc516e257484487b4e29ddb5743e1","modified":1594729066000},{"_id":"themes/icarus/source/css/style.styl","hash":"4c1e1734d85fa68b3ebcb5347c32f79e443ddcba","modified":1594729066000},{"_id":"themes/icarus/source/js/animation.js","hash":"5bb98c8b7e6fdde902f61e40ddfb2a3fbdeb13bf","modified":1594729066000},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"6be1b206481d231ca93ff9b1ccb08c548618cfdf","modified":1594729066000},{"_id":"themes/icarus/source/js/main.js","hash":"34acf13d49dcca1d5e2393c4bfa459bcde40892a","modified":1594729066000},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594729066000},{"_id":"themes/icarus/source/img/wechet-tutu.jpg","hash":"eb5b728226cd42883e08dec47b7e61b78ae3abdd","modified":1594782670000},{"_id":"themes/icarus/source/img/alipay-tutu.jpg","hash":"b5d8397b0c4b5775b448c33eed631abdb04f067e","modified":1594782510000},{"_id":"themes/icarus/include/schema/common/article.json","hash":"e79bb7b210946d22bd3a9c710171c548de49a050","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"394665355c58e711ff9a739d1de047bb44588e72","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"8e2c3c2a89c47df841440598ab4e13504e7e37dc","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"b6036e21a11a5ed0455010ee668e43f165e55254","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/head.json","hash":"cf95b825bfca5f1c03d066a4067bd42a7467a423","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"52a7ae23ebcfb06e8c219be4da1506b824e17715","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"1b4de5817363ad969b444477cda28eb677a2c0f7","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"5453827e1c267c67102bc983c8d2313865aa64fd","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/search.json","hash":"dd34241b3776bc9aed8ef815c67f2fa622d0984b","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/share.json","hash":"da98300e9197fbc717082419652d54636fd118b9","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"5687b24e32bcff12ff7660ff5dc26d74f466a994","modified":1594729066000},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"43a9c4fccaf75418038537e2e49f2457727a21e7","modified":1594729066000},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"0b5c4a315c0d25f2b296eb44ed14a1d59ccb8613","modified":1594729066000},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"c8e0e97a61c3a02c9736f303c206dd406de95d9a","modified":1594729066000},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"994aff115d59827ad6f98d03adf55b1cf1245378","modified":1594729066000},{"_id":"public/baidu_urls.txt","hash":"cd88ca273e27021c5353a38e3a4e5e02bba12dff","modified":1594816129651},{"_id":"public/atom.xml","hash":"23f4ce4149c6f04b07f7e3e5f62675714fdd4017","modified":1594816129651},{"_id":"public/search.xml","hash":"6483ed107505de4231998342af95867a72f7c2ff","modified":1594816129651},{"_id":"public/js/algolia.js","hash":"cbfc4355b23d84d2f0dc622e069b3f06c0d10f70","modified":1594816129651},{"_id":"public/js/google_cse.js","hash":"55e7250f4a12bf15220ba5d1d49c91fda5fbd3b4","modified":1594816129651},{"_id":"public/js/insight.js","hash":"78b74ae77f1e854089ccabd871d581dc391fcc29","modified":1594816129651},{"_id":"public/content.json","hash":"fa0d1bb98323c1c0292bdd9197b5ec2c52082d83","modified":1594816129651},{"_id":"public/about/index.html","hash":"ce699c1ef1a9bde99ad4bfdbc9a0058ec76678d7","modified":1594816129651},{"_id":"public/categories/index.html","hash":"562d8db6071546a5abaf4c684c4dfcb78cac956a","modified":1594816129651},{"_id":"public/resume/index.html","hash":"e9b5c0b4cf23350917da450888ffd6c593eecba9","modified":1594816129651},{"_id":"public/bookmark/index.html","hash":"511ce26554f2c18f0934850fdaa086de3313bbca","modified":1594816129651},{"_id":"public/tags/index.html","hash":"4c0f9514e8be77a6830acacb47757fb7871983b9","modified":1594816129651},{"_id":"public/top/index.html","hash":"ed4cd169ccc507dcbc8b1eb573672b03a7fcb6fd","modified":1594816129651},{"_id":"public/2020/07/15/给博客加了点趣味.html","hash":"5d1ad69559a541a9653a2d3a2003284bd236aded","modified":1594816129651},{"_id":"public/2020/07/15/2020年新方向.html","hash":"cc6f2082ec31d41aed8632c4756577cb3a5c6480","modified":1594816129651},{"_id":"public/2019/11/01/2019年阶段整理.html","hash":"c322ba5baaef3ae50233f1cb8e6b0f54300ec2ef","modified":1594816129651},{"_id":"public/2019/04/02/Leetcode-3-无重复字符的最长子串-Python.html","hash":"cfbb1b746ec4b013ff77fcc15882106b7f444936","modified":1594816129651},{"_id":"public/2019/04/01/Leetcode-2-两数相加（Add-Two-Numbers）.html","hash":"23bc83b5ede09d50fb073631d0674f68c5423c2e","modified":1594816129651},{"_id":"public/2019/04/01/Leetcode-1-两数之和（Two-Sum）.html","hash":"c6a91f6b243eac5b29513f4f58c102a3d984b3c4","modified":1594816129651},{"_id":"public/2019/04/01/2019年第一季度总结.html","hash":"27197fc5f81459db3540c8539ff97d0bd7689e88","modified":1594816129651},{"_id":"public/2019/03/28/依图科技机器学习算法测试工程师一面（19-3-28）.html","hash":"207aecc5ca92792a442dedc498d5949d8d257b24","modified":1594816129651},{"_id":"public/2019/03/28/阿里测试工程师一面（19-3-27）.html","hash":"1e44e3682ad63635409ed2cb4face7a130b81492","modified":1594816129651},{"_id":"public/2019/03/27/和导师谈话后的整理.html","hash":"cc565d1e9f5d499d6074f1f41348321b1c4724f2","modified":1594816129651},{"_id":"public/2019/03/21/剑指offer（第二版）学习记录卡.html","hash":"4e43bfa4d2adc95c8562eeea5abc09d4ba2c2cfd","modified":1594816129651},{"_id":"public/2019/03/14/hexo使用过中遇到的一个小问题.html","hash":"34fad203f92a2383b4190072380753bc675a2ab0","modified":1594816129651},{"_id":"public/2019/03/14/2019年3月11日-暑期实习之腾讯面试.html","hash":"dd576a9e3db52d4c4696302a7e0dd9165b1ded28","modified":1594816129651},{"_id":"public/2019/03/14/LR-机器学习复习笔记-1.html","hash":"c30074a621f54ec1d97fde54f917d57ef5b46e2f","modified":1594816129651},{"_id":"public/2019/03/13/leetcode-904-水果成篮.html","hash":"b8b7484563ef4aa22aa1fccee6408af69c2719bf","modified":1594816129651},{"_id":"public/2019/03/13/搭建hexo博客.html","hash":"cced01ea48b9ad7478530654c1e09918f9e8220e","modified":1594816129651},{"_id":"public/categories/聊天/index.html","hash":"76b50b4a11df4b838289fe5dd008715589993907","modified":1594816129651},{"_id":"public/categories/生活/index.html","hash":"bf55e9ed21d82a975050dfbaa894d83e59adede5","modified":1594816129651},{"_id":"public/categories/学习/index.html","hash":"a7f64d48de6030b4994c1561a42c095cde67d7e2","modified":1594816129651},{"_id":"public/categories/工作/index.html","hash":"b20097c249afb03aa3a0cbdab06dc9aa8f95102b","modified":1594816129651},{"_id":"public/categories/博客/index.html","hash":"db530e5748d989131eee473936a0b22fc21ee7ba","modified":1594816129651},{"_id":"public/index.html","hash":"3451918552c24f15dd83e896976c8caa3f5953eb","modified":1594816129651},{"_id":"public/page/2/index.html","hash":"b8d4b5409de11a7e188c90b12bdd4ce64a45b15d","modified":1594816129651},{"_id":"public/page/3/index.html","hash":"250a529337771ef89c829b2d5cf3c88f8abc6f2a","modified":1594816129651},{"_id":"public/page/4/index.html","hash":"6057483f410b76fb40e9d40fc2500c8643ef4fee","modified":1594816129651},{"_id":"public/tags/总结/index.html","hash":"0b98085565200349d9c563c5ef953eb3bc8260ea","modified":1594816129651},{"_id":"public/tags/面经/index.html","hash":"cc87fa58ee12c066b719e70f624bdf4b6acbb4a6","modified":1594816129651},{"_id":"public/tags/实习/index.html","hash":"8334606626efe1a1746878613bae2852f791ba1a","modified":1594816129651},{"_id":"public/tags/生活/index.html","hash":"f95a9dab4c4e9d682a99f773d8b99424b18c50e8","modified":1594816129651},{"_id":"public/tags/生活，-闲聊/index.html","hash":"889cb27e12b4df91ae4c09629f39631c55809ddb","modified":1594816129651},{"_id":"public/tags/leetcode/index.html","hash":"e6a933458489092f8dc03456835234ff7303ba7f","modified":1594816129651},{"_id":"public/tags/机器学习/index.html","hash":"34657c7d5d26c5aa499ccf11f0e5b614b5de737d","modified":1594816129651},{"_id":"public/tags/面试复习/index.html","hash":"77720ee33da4cfba01d8ff9f3d73b90d8c1352b8","modified":1594816129651},{"_id":"public/tags/刷题笔记/index.html","hash":"dab421f1fa0a103caccfba7187551677c2166650","modified":1594816129651},{"_id":"public/tags/hexo/index.html","hash":"bc38f07a89d2220f9b6e18e0572f030075c17e20","modified":1594816129651},{"_id":"public/tags/剑指offer/index.html","hash":"ab9f31dd091b8438ea6bfc8ca80a60ced19fb2f0","modified":1594816129651},{"_id":"public/tags/刷题/index.html","hash":"84426cb321709884b0bdd5ff53d342d5d3c208f9","modified":1594816129651},{"_id":"public/tags/思考/index.html","hash":"2c1c08f76fc45f06e037e9134f8fdb2f6cc43d29","modified":1594816129651},{"_id":"public/tags/闲聊/index.html","hash":"820128d04a4d45e6171bed64711cb7aa98cb358a","modified":1594816129651},{"_id":"public/tags/搭建环境/index.html","hash":"4322263e51c9ccba70221bb09609ad618e6db24d","modified":1594816129651},{"_id":"public/archives/index.html","hash":"0e1085d31bf17fe25a039000d4bc7e113a9abe4f","modified":1594816129651},{"_id":"public/archives/page/2/index.html","hash":"2cb8b2ab9f68f25b8ffb7f79000bb110e8dd3fc1","modified":1594816129651},{"_id":"public/archives/2019/index.html","hash":"875e626145ce3bc0f5ca8eb9de272910810176ef","modified":1594816129651},{"_id":"public/archives/2019/page/2/index.html","hash":"9120f0f21c59b300aedcf6f855acfe6578b8f01b","modified":1594816129651},{"_id":"public/archives/2019/03/index.html","hash":"562e2cedf41d33d8936e84187f8a6c903f7111eb","modified":1594816129651},{"_id":"public/archives/2019/04/index.html","hash":"26b53e683d3033529d187f434c70fcbd309dfcca","modified":1594816129651},{"_id":"public/archives/2019/11/index.html","hash":"90e2d95e1e6e92c7f11ff75102f0245442a1af02","modified":1594816129651},{"_id":"public/archives/2020/index.html","hash":"30e45ce902b7487be7a9d011537c574929fd87a3","modified":1594816129651},{"_id":"public/archives/2020/07/index.html","hash":"cd6d0ba4e35615d6c44ecbbed63b9d650f20b455","modified":1594816129651},{"_id":"public/404.html","hash":"dc910ff033d6f3d55cec9e50a97230995a5d6923","modified":1594816129651},{"_id":"public/favicon.ico","hash":"29ec8d148be1e6e9e63dbf4a5bac4737dc88e4cd","modified":1594816129651},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1594816129651},{"_id":"public/img/favicon.svg","hash":"50322629b1947588ff7a6e59fb07cb1b5bfb9f8c","modified":1594816129651},{"_id":"public/img/favicon_hututu.png","hash":"29ec8d148be1e6e9e63dbf4a5bac4737dc88e4cd","modified":1594816129651},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1594816129651},{"_id":"public/img/logo.svg","hash":"f4a9aa50f9a732981ae79e3711a997fc7325a7db","modified":1594816129651},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1594816129651},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1594816129651},{"_id":"public/css/default.styl","hash":"b2d886eacd43ab395ae3221e92bc0a9d23eff3a0","modified":1594816129651},{"_id":"public/img/thumbnail.svg","hash":"38801ce6b2f60c660e1b8868da902c9ab553c82f","modified":1594816129651},{"_id":"public/css/style.styl","hash":"4c1e1734d85fa68b3ebcb5347c32f79e443ddcba","modified":1594816129651},{"_id":"public/css/cyberpunk.styl","hash":"13b12c6024a67561a3678d1480113dfdf48f0269","modified":1594816129651},{"_id":"public/css/blog-encrypt.css","hash":"22e25b0d16ea053d25eb971e038c817a4c9cb584","modified":1594816129651},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1594816129651},{"_id":"public/lib/blog-encrypt.js","hash":"91fda12d550323056762c5408623eb8a1d201ecc","modified":1594816129651},{"_id":"public/live2dw/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1594816129651},{"_id":"public/live2dw/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1594816129651},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1594816129651},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1594816129651},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1594816129651},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1594816129651},{"_id":"public/img/wechet-tutu.jpg","hash":"eb5b728226cd42883e08dec47b7e61b78ae3abdd","modified":1594816129651},{"_id":"public/img/alipay-tutu.jpg","hash":"b5d8397b0c4b5775b448c33eed631abdb04f067e","modified":1594816129651},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1594816129651},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1594816129651},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1594816129651},{"_id":"public/js/animation.js","hash":"59a05568fd5718513792b0d48bcb4bcf7eaa20e8","modified":1594816129651},{"_id":"public/js/back_to_top.js","hash":"0f071e2331e39043529041322c4812bb13a3990d","modified":1594816129651},{"_id":"public/js/main.js","hash":"3fb6be34945798cd400825e021c4267856fff2df","modified":1594816129651},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1594816129651},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1594816129651},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1594816129651},{"_id":"public/live2dw/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1594816129651},{"_id":"public/live2dw/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1594816129651},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1594816129651},{"_id":"themes/icarus/.npmignore","hash":"42242c8da7a020a3295e7dd3d18bf022cb08b661","modified":1615017628827},{"_id":"themes/icarus/.github/dependabot.yml","hash":"d532d0db30e42211f35823b9885f3ed1b2d51777","modified":1615017628825},{"_id":"themes/icarus/languages/tk.yml","hash":"e5b9b369bbcf90c199a65a877eb75fba05cd7f90","modified":1615017628840},{"_id":"themes/icarus/.github/workflows/github-release.yml","hash":"48b6bd2cc567687a7b1648c55c8f9de9d44fa9e1","modified":1615017628826},{"_id":"themes/icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1615017628828},{"_id":"themes/icarus/.github/workflows/lint.yml","hash":"71f04b66e48f065285ba109939999876ef411598","modified":1615017628826},{"_id":"themes/icarus/.github/workflows/test.yml","hash":"f816a5970f4ad4fcf6c8350dbcd4c300c6986cb4","modified":1615017628826},{"_id":"themes/icarus/include/style/widget.styl","hash":"0720a70448ffd78800f7556a7d67300eac19aa87","modified":1615017628837},{"_id":"themes/icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1615017628849},{"_id":"themes/icarus/.github/workflows/npm-publish.yml","hash":"4eabc0c60cb7102fdd5e4b0fbd8c0ac4c17cc8d0","modified":1615017628826},{"_id":"themes/maupassant/.travis.yml","hash":"f8da426b97088e4caa5226cff219a5d95087961f","modified":1553580710000},{"_id":"themes/maupassant/.gitignore","hash":"d7d27e5a9bcffe7f90dc2f4f0752e19020e40f40","modified":1553580710000},{"_id":"themes/maupassant/LICENSE","hash":"0663fd3a7ea9fc4f4c634b4d73e2da426b536f86","modified":1553580710000},{"_id":"themes/maupassant/README.md","hash":"1c8631bc25c0f616e2dbd01c7fc224fa19eefdf3","modified":1553580710000},{"_id":"themes/maupassant/package.json","hash":"5328c4c435cd4a5fe47caae31b9975013cdca5bb","modified":1553580710000},{"_id":"themes/maupassant/_config.yml","hash":"305e9255209af5348d48dd70dd4aef4a26394220","modified":1553583290000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"25d1d8cd8113045a7603c14af1ea1539fc6456ed","modified":1553580710000},{"_id":"themes/maupassant/languages/en.yml","hash":"518beaa8538a772ca697122264d667059797e458","modified":1553580710000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"3cc9312fbdba4a8f8e8254804121e4724c719bcc","modified":1553580710000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"3a50568f200b9c1258415b53727e42c6b6c7ea0b","modified":1553580710000},{"_id":"themes/maupassant/languages/ru.yml","hash":"36edc014c6aaef367d58929089bf7915375e71a6","modified":1553580710000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"34dba7ac67aeb316f629ca73e546fa143cc362d5","modified":1553580710000},{"_id":"themes/maupassant/languages/ko.yml","hash":"a454bcec60113507bc1d593a699849822386c196","modified":1553580710000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"a1a9888b6cd0fd3dc45ffed3490f4ca8ce1abfd7","modified":1553580710000},{"_id":"themes/maupassant/layout/base-without-sidebar.pug","hash":"b0a0ec63ee0225eaa0996d72164202bc9a28a225","modified":1553580710000},{"_id":"themes/maupassant/layout/archive.pug","hash":"05f751cb766616ff96ff22ad0790d9cd28777270","modified":1553580710000},{"_id":"themes/maupassant/layout/base.pug","hash":"7451a590db6943edc099dc0e13b317c38686e8fc","modified":1553580710000},{"_id":"themes/maupassant/layout/single-column.pug","hash":"8b4b731cdf86379d526821a1fa950bf15ed61f15","modified":1553580710000},{"_id":"themes/maupassant/layout/index.pug","hash":"d1d56fa62f1293cd0cbefe96dbbde2d35b557a0a","modified":1553580710000},{"_id":"themes/maupassant/layout/timeline.pug","hash":"04f7efdc45acda1faff409d0f80fa5a0dd2309d0","modified":1553580710000},{"_id":"themes/maupassant/layout/post.pug","hash":"b112011fbb6a32b33e341be7edf043bc4ad5f97e","modified":1553580710000},{"_id":"themes/maupassant/layout/page.pug","hash":"a21e638d5459120d88e45e8f18a23dc072d9ca07","modified":1553580710000},{"_id":"themes/maupassant/layout/_widget/category.pug","hash":"7707b4c718a935882ee986d0bb0078e50cdbea64","modified":1553580710000},{"_id":"themes/maupassant/layout/_widget/recent_comments.pug","hash":"68bae3eb2f80e6127e03faa7ee1b78fb2e70aafc","modified":1553580710000},{"_id":"themes/maupassant/layout/_widget/links.pug","hash":"7bc7c17cfd498c3e0c3371cef78f08f1dc25db36","modified":1553580710000},{"_id":"themes/maupassant/layout/_widget/recent_posts.pug","hash":"770b6c41cbf7969ed33adf87eec3be6f50a0911b","modified":1553580710000},{"_id":"themes/maupassant/layout/_widget/search.pug","hash":"6aa743486f282545f553a4fad6aae037afe26108","modified":1553580710000},{"_id":"themes/maupassant/layout/_widget/tag.pug","hash":"37f236365b153fc40324391e5a602d6d50014e18","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/after_footer.pug","hash":"9b4f833039606798f90a85013cbfbc7b735234a2","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/comments.pug","hash":"efaf0788b6b70aa03c928137cd13b28afa706f75","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/head.pug","hash":"b3c96f55afaeaeb010daeb96014f911db10c7f99","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/footer.pug","hash":"98ab9c1f990ea44b59ec0ef1910ade637ce68f35","modified":1553581812000},{"_id":"themes/maupassant/layout/_partial/mathjax.pug","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/mathjax2.pug","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/helpers.pug","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/paginator.pug","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/post_nav.pug","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/tag.pug","hash":"6145b483b271bba05ad1db7c039fe352a768215b","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/wordcount.pug","hash":"6fb1d8ee09cfc4fd31e8ae53736e4f479d45e31e","modified":1553580710000},{"_id":"themes/maupassant/layout/_partial/totop.pug","hash":"eb91a3baf9411188c7c8130f63a674f541ca9c81","modified":1553580710000},{"_id":"themes/maupassant/source/css/default.css","hash":"b41d95120f9e64fd4530ae00ceaef09c7ea20818","modified":1553580710000},{"_id":"themes/maupassant/source/css/style.scss","hash":"dc1246e4327de62abeb97c1963d80d8a18a85a45","modified":1553574104000},{"_id":"themes/maupassant/source/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1553580710000},{"_id":"themes/maupassant/source/donate/index.html","hash":"e6c9cbaf77300787329201cdf1ca663b2ea1bd15","modified":1553580710000},{"_id":"themes/maupassant/source/css/donate.css","hash":"ca39d14a598e1de5c51db4170ceb399c6a7131fe","modified":1553580710000},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"292ea040e865c1d0be259703ff850570b3bdfc97","modified":1553580710000},{"_id":"themes/maupassant/source/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1553580710000},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"eeb2ee8cf44ba5c298baeed84bb90866f4814955","modified":1553580710000},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"e916dea1c1bba1bc935510310f65b2c9328a401a","modified":1553580710000},{"_id":"themes/maupassant/source/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1553580710000},{"_id":"themes/maupassant/source/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1553580710000},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"30418295bed44bcc4b29076eb7deed49cf4d6c1c","modified":1553580710000},{"_id":"themes/maupassant/source/js/donate.js","hash":"780beaaf44b1e6c057752bdbc085b1048937e5e7","modified":1553580710000},{"_id":"themes/maupassant/source/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1553580710000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"c77270e684a60babc1abb7353e700ecdc5a66d30","modified":1553580710000},{"_id":"themes/maupassant/source/js/share.js","hash":"514e726c1efae9f6566600fa0e945b4b9e620f2e","modified":1553580710000},{"_id":"themes/maupassant/source/js/search.js","hash":"dbda07a03e6edc73f1dc28a068c24a6037b97b56","modified":1553580710000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"8a993c1c4ad40789d2960b682cb2130382a0f26a","modified":1553580710000},{"_id":"themes/maupassant/source/js/totop.js","hash":"15de186b089c245fe60766d509b587919f05ff23","modified":1553580710000},{"_id":"themes/maupassant/source/js/gitment.browser.js","hash":"b15998a45d5f386d30905cfbfbb1658336acbb5b","modified":1553580710000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"150ab1cad40d7ae081b0896b13f7d7cbac4e6338","modified":1553580710000}],"Category":[{"name":"聊天","_id":"ckcncclkc00046y2h4ti035id"},{"name":"生活","_id":"ckcncclkk000b6y2h41m739n1"},{"name":"学习","_id":"ckcncclkp000h6y2hcgcg607n"},{"name":"工作","_id":"ckcnccll500106y2h0te67fr4"},{"name":"博客","_id":"ckcncclla00186y2h2eaigxvr"}],"Data":[],"Page":[{"title":"","comments":0,"date":"2019-03-13T06:24:21.000Z","_content":"\n# 关于我\n\n95后程序媛，读书ing，坐标合肥，喜欢电影，做有趣的事情。\n\n\n\n# 关于本站\n\nHola\n\n这是图图试着玩的小空间\n\n看到别人满满的博客也很羡慕呢\n\n也想给自己留下的什么。\n\n欢迎你来玩\n\n\n\n---\n\n其他工具:\n\n- [Hexo](https://hexo.io/zh-cn/): 基础博客框架\n- [Next](https://github.com/theme-next/hexo-theme-next): 基于Hexo的博客主题\n- [LeanCloud](https://leancloud.cn/): 数据云存储与后端支持\n- [Valine](https://valine.js.org/): 文章评论组件\n\n友情链接\n\n\n1. [yearito](http://yearito.cn/archives/) ：博客深度优化都是参考了这位博主\n\n\n\n","source":"about/index.md","raw":"---\ntitle: \ncomments: false\ndate: 2019-03-13 14:24:21\n---\n\n# 关于我\n\n95后程序媛，读书ing，坐标合肥，喜欢电影，做有趣的事情。\n\n\n\n# 关于本站\n\nHola\n\n这是图图试着玩的小空间\n\n看到别人满满的博客也很羡慕呢\n\n也想给自己留下的什么。\n\n欢迎你来玩\n\n\n\n---\n\n其他工具:\n\n- [Hexo](https://hexo.io/zh-cn/): 基础博客框架\n- [Next](https://github.com/theme-next/hexo-theme-next): 基于Hexo的博客主题\n- [LeanCloud](https://leancloud.cn/): 数据云存储与后端支持\n- [Valine](https://valine.js.org/): 文章评论组件\n\n友情链接\n\n\n1. [yearito](http://yearito.cn/archives/) ：博客深度优化都是参考了这位博主\n\n\n\n","updated":"2020-07-14T13:10:56.000Z","path":"about/index.html","layout":"page","_id":"ckcncclk200006y2hc6m93lyk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"关于我\"><a class=\"markdownIt-Anchor\" href=\"#关于我\"></a> 关于我</h1>\n<p>95后程序媛，读书ing，坐标合肥，喜欢电影，做有趣的事情。</p>\n<h1 id=\"关于本站\"><a class=\"markdownIt-Anchor\" href=\"#关于本站\"></a> 关于本站</h1>\n<p>Hola</p>\n<p>这是图图试着玩的小空间</p>\n<p>看到别人满满的博客也很羡慕呢</p>\n<p>也想给自己留下的什么。</p>\n<p>欢迎你来玩</p>\n<hr />\n<p>其他工具:</p>\n<ul>\n<li><a href=\"https://hexo.io/zh-cn/\">Hexo</a>: 基础博客框架</li>\n<li><a href=\"https://github.com/theme-next/hexo-theme-next\">Next</a>: 基于Hexo的博客主题</li>\n<li><a href=\"https://leancloud.cn/\">LeanCloud</a>: 数据云存储与后端支持</li>\n<li><a href=\"https://valine.js.org/\">Valine</a>: 文章评论组件</li>\n</ul>\n<p>友情链接</p>\n<ol>\n<li><a href=\"http://yearito.cn/archives/\">yearito</a> ：博客深度优化都是参考了这位博主</li>\n</ol>\n","site":{"data":{}},"length":174,"excerpt":"","more":"<h1 id=\"关于我\"><a class=\"markdownIt-Anchor\" href=\"#关于我\"></a> 关于我</h1>\n<p>95后程序媛，读书ing，坐标合肥，喜欢电影，做有趣的事情。</p>\n<h1 id=\"关于本站\"><a class=\"markdownIt-Anchor\" href=\"#关于本站\"></a> 关于本站</h1>\n<p>Hola</p>\n<p>这是图图试着玩的小空间</p>\n<p>看到别人满满的博客也很羡慕呢</p>\n<p>也想给自己留下的什么。</p>\n<p>欢迎你来玩</p>\n<hr />\n<p>其他工具:</p>\n<ul>\n<li><a href=\"https://hexo.io/zh-cn/\">Hexo</a>: 基础博客框架</li>\n<li><a href=\"https://github.com/theme-next/hexo-theme-next\">Next</a>: 基于Hexo的博客主题</li>\n<li><a href=\"https://leancloud.cn/\">LeanCloud</a>: 数据云存储与后端支持</li>\n<li><a href=\"https://valine.js.org/\">Valine</a>: 文章评论组件</li>\n</ul>\n<p>友情链接</p>\n<ol>\n<li><a href=\"http://yearito.cn/archives/\">yearito</a> ：博客深度优化都是参考了这位博主</li>\n</ol>\n"},{"title":"分类","date":"2019-03-13T07:16:19.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-03-13 15:16:19\ntype: \"categories\"\n---\n","updated":"2019-03-14T13:36:40.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckcncclk800026y2hhxdv0m8x","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"resume","copyright":true,"date":"2019-04-02T02:48:45.000Z","categories":null,"_content":"","source":"resume/index.md","raw":"---\ntitle: resume\ncopyright: true\ndate: 2019-04-02 10:48:45\ncategories:\n---\n","updated":"2020-07-14T13:38:22.000Z","path":"resume/index.html","comments":1,"layout":"page","_id":"ckcncclkd00056y2hfjny25vb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"收录精品链接","comments":1,"date":"2018-11-26T10:57:51.000Z","_content":"\n# 设计\n\n- [Iconfont](http://iconfont.cn/): 大而全的矢量图标库\n- [TemplateMonster](https://www.templatemonster.com/): 网站模板与主题\n- [Behance](https://www.behance.net/): 全球最大的设计社区\n\n# 编程学习\n\n- [CSS-Tricks](https://css-tricks.com): 优质的开发者文章，不仅仅是CSS\n- [Linux 命令手册](http://man.linuxde.net/): Linux命令查询与学习资料\n\n# 工具\n\n- [Send Anywhere](https://send-anywhere.com/): 远程发送文件\n","source":"bookmark/index.md","raw":"---\ntitle: 收录精品链接\ncomments: true\ndate: 2018-11-26 18:57:51\n---\n\n# 设计\n\n- [Iconfont](http://iconfont.cn/): 大而全的矢量图标库\n- [TemplateMonster](https://www.templatemonster.com/): 网站模板与主题\n- [Behance](https://www.behance.net/): 全球最大的设计社区\n\n# 编程学习\n\n- [CSS-Tricks](https://css-tricks.com): 优质的开发者文章，不仅仅是CSS\n- [Linux 命令手册](http://man.linuxde.net/): Linux命令查询与学习资料\n\n# 工具\n\n- [Send Anywhere](https://send-anywhere.com/): 远程发送文件\n","updated":"2019-02-18T10:57:10.000Z","path":"bookmark/index.html","layout":"page","_id":"ckcncclkh00086y2hdlci098z","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"设计\"><a class=\"markdownIt-Anchor\" href=\"#设计\"></a> 设计</h1>\n<ul>\n<li><a href=\"http://iconfont.cn/\">Iconfont</a>: 大而全的矢量图标库</li>\n<li><a href=\"https://www.templatemonster.com/\">TemplateMonster</a>: 网站模板与主题</li>\n<li><a href=\"https://www.behance.net/\">Behance</a>: 全球最大的设计社区</li>\n</ul>\n<h1 id=\"编程学习\"><a class=\"markdownIt-Anchor\" href=\"#编程学习\"></a> 编程学习</h1>\n<ul>\n<li><a href=\"https://css-tricks.com\">CSS-Tricks</a>: 优质的开发者文章，不仅仅是CSS</li>\n<li><a href=\"http://man.linuxde.net/\">Linux 命令手册</a>: Linux命令查询与学习资料</li>\n</ul>\n<h1 id=\"工具\"><a class=\"markdownIt-Anchor\" href=\"#工具\"></a> 工具</h1>\n<ul>\n<li><a href=\"https://send-anywhere.com/\">Send Anywhere</a>: 远程发送文件</li>\n</ul>\n","site":{"data":{}},"length":136,"excerpt":"","more":"<h1 id=\"设计\"><a class=\"markdownIt-Anchor\" href=\"#设计\"></a> 设计</h1>\n<ul>\n<li><a href=\"http://iconfont.cn/\">Iconfont</a>: 大而全的矢量图标库</li>\n<li><a href=\"https://www.templatemonster.com/\">TemplateMonster</a>: 网站模板与主题</li>\n<li><a href=\"https://www.behance.net/\">Behance</a>: 全球最大的设计社区</li>\n</ul>\n<h1 id=\"编程学习\"><a class=\"markdownIt-Anchor\" href=\"#编程学习\"></a> 编程学习</h1>\n<ul>\n<li><a href=\"https://css-tricks.com\">CSS-Tricks</a>: 优质的开发者文章，不仅仅是CSS</li>\n<li><a href=\"http://man.linuxde.net/\">Linux 命令手册</a>: Linux命令查询与学习资料</li>\n</ul>\n<h1 id=\"工具\"><a class=\"markdownIt-Anchor\" href=\"#工具\"></a> 工具</h1>\n<ul>\n<li><a href=\"https://send-anywhere.com/\">Send Anywhere</a>: 远程发送文件</li>\n</ul>\n"},{"title":"标签","date":"2019-03-13T06:22:50.000Z","type":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-03-13 14:22:50\ntype: \"tags\"\n---\n\n","updated":"2020-07-14T13:15:36.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckcncclln002g6y2hapy4g2q3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"热门文章Top 10","comments":0,"date":"2019-03-12T16:54:50.000Z","_content":"\n<div id=\"post-rank\"></div>\n\n<script src=\"//cdn.jsdelivr.net/npm/leancloud-storage@3.10.0/dist/av-min.js\"></script>\n<!-- <script src=\"https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js\"></script> -->\n<script type=\"text/javascript\">\n  var APP_ID = 'SQW06Bm5E8mze0RqXbF4MsOR-gzGzoHsz';\n  var APP_KEY = 'IRsxQuHl1rFJmjrdlwHsN1iE';\n  //AV.initialize(APP_ID, APP_KEY);\n  AV.init({\n    appId: APP_ID,\n    appKey: APP_KEY\n  });\n\n\n  var query = new AV.Query('Counter');//表名\n  query.descending('time'); //结果按阅读次数降序排序\n  query.limit(10);  //最终只返回10条结果\n  query.find().then( response => {\n    var content = response.reduce( (accum, {attributes}) => {\n      accum += `<p><div class=\"prefix\">热度 ${attributes.time} ℃</div><div><a href=\"${attributes.url}\">${attributes.title}</a></div></p>`\n      return accum;\n    },\"\")\n    document.querySelector(\"#post-rank\").innerHTML = content;\n  })\n  .catch( error => {\n    console.log(error);\n  });\n</script>\n\n<style type=\"text/css\">\n  #post-rank {\n    text-align: center;\n  }\n  #post-rank .prefix {\n    color: #ff4d4f;\n  }\n</style>\n","source":"top/index.md","raw":"---\ntitle: 热门文章Top 10\ncomments: false\ndate: 2019-3-13 00:54:50\n---\n\n<div id=\"post-rank\"></div>\n\n<script src=\"//cdn.jsdelivr.net/npm/leancloud-storage@3.10.0/dist/av-min.js\"></script>\n<!-- <script src=\"https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js\"></script> -->\n<script type=\"text/javascript\">\n  var APP_ID = 'SQW06Bm5E8mze0RqXbF4MsOR-gzGzoHsz';\n  var APP_KEY = 'IRsxQuHl1rFJmjrdlwHsN1iE';\n  //AV.initialize(APP_ID, APP_KEY);\n  AV.init({\n    appId: APP_ID,\n    appKey: APP_KEY\n  });\n\n\n  var query = new AV.Query('Counter');//表名\n  query.descending('time'); //结果按阅读次数降序排序\n  query.limit(10);  //最终只返回10条结果\n  query.find().then( response => {\n    var content = response.reduce( (accum, {attributes}) => {\n      accum += `<p><div class=\"prefix\">热度 ${attributes.time} ℃</div><div><a href=\"${attributes.url}\">${attributes.title}</a></div></p>`\n      return accum;\n    },\"\")\n    document.querySelector(\"#post-rank\").innerHTML = content;\n  })\n  .catch( error => {\n    console.log(error);\n  });\n</script>\n\n<style type=\"text/css\">\n  #post-rank {\n    text-align: center;\n  }\n  #post-rank .prefix {\n    color: #ff4d4f;\n  }\n</style>\n","updated":"2019-03-27T05:25:30.000Z","path":"top/index.html","layout":"page","_id":"ckcnccllo002h6y2h8sbcb893","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div id=\"post-rank\"></div>\n<script src=\"//cdn.jsdelivr.net/npm/leancloud-storage@3.10.0/dist/av-min.js\"></script>\n<!-- <script src=\"https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js\"></script> -->\n<script type=\"text/javascript\">\n  var APP_ID = 'SQW06Bm5E8mze0RqXbF4MsOR-gzGzoHsz';\n  var APP_KEY = 'IRsxQuHl1rFJmjrdlwHsN1iE';\n  //AV.initialize(APP_ID, APP_KEY);\n  AV.init({\n    appId: APP_ID,\n    appKey: APP_KEY\n  });\n\n\n  var query = new AV.Query('Counter');//表名\n  query.descending('time'); //结果按阅读次数降序排序\n  query.limit(10);  //最终只返回10条结果\n  query.find().then( response => {\n    var content = response.reduce( (accum, {attributes}) => {\n      accum += `<p><div class=\"prefix\">热度 ${attributes.time} ℃</div><div><a href=\"${attributes.url}\">${attributes.title}</a></div></p>`\n      return accum;\n    },\"\")\n    document.querySelector(\"#post-rank\").innerHTML = content;\n  })\n  .catch( error => {\n    console.log(error);\n  });\n</script>\n<style type=\"text/css\">\n  #post-rank {\n    text-align: center;\n  }\n  #post-rank .prefix {\n    color: #ff4d4f;\n  }\n</style>\n","site":{"data":{}},"length":559,"excerpt":"","more":"<div id=\"post-rank\"></div>\n<script src=\"//cdn.jsdelivr.net/npm/leancloud-storage@3.10.0/dist/av-min.js\"></script>\n<!-- <script src=\"https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js\"></script> -->\n<script type=\"text/javascript\">\n  var APP_ID = 'SQW06Bm5E8mze0RqXbF4MsOR-gzGzoHsz';\n  var APP_KEY = 'IRsxQuHl1rFJmjrdlwHsN1iE';\n  //AV.initialize(APP_ID, APP_KEY);\n  AV.init({\n    appId: APP_ID,\n    appKey: APP_KEY\n  });\n\n\n  var query = new AV.Query('Counter');//表名\n  query.descending('time'); //结果按阅读次数降序排序\n  query.limit(10);  //最终只返回10条结果\n  query.find().then( response => {\n    var content = response.reduce( (accum, {attributes}) => {\n      accum += `<p><div class=\"prefix\">热度 ${attributes.time} ℃</div><div><a href=\"${attributes.url}\">${attributes.title}</a></div></p>`\n      return accum;\n    },\"\")\n    document.querySelector(\"#post-rank\").innerHTML = content;\n  })\n  .catch( error => {\n    console.log(error);\n  });\n</script>\n<style type=\"text/css\">\n  #post-rank {\n    text-align: center;\n  }\n  #post-rank .prefix {\n    color: #ff4d4f;\n  }\n</style>\n"}],"Post":[{"title":"2019年阶段整理","copyright":true,"date":"2019-11-01T11:40:44.000Z","_content":"\n​    时间真快，一晃，生日也过了许久，2019年已经只剩下2个月了。2019年，真是人生的岔路口，往前一看，做了几个影响未来三五十年的决定。\n\n  \n\n   不清楚自己到底想要什么，即贪心又糊涂。\n\n   想要实习经历，却花了三个月时间做了一个不疼不痒，技能树点偏了的项目，谈不上什么成长。\n\n   想要学位，想要title，却不明白为此要付出的代价和是否真的适合自己。错误的决定，一直在做错误的决定。\n\n   实习也没能做有价值的事情，现在读书也是，未来几年感觉还是。读到一篇博客，说，为什么要读研究生\n\n>在微软实习的时候就在犹豫是要转正还是回来继续读研，还记得当时问mentor这个问题，他的回答大意是这样的：\n\n>> 我不能帮你做决定，这个问题只有你自己去思考权衡然后自己去选择。可是我可以跟你说说我的经历（以下省略他的读研经历若干，差不多就是写代码做项目）。如果你能跟一个好的导师，能接触到更多实际的科研和项目，那么这样的读研就是值得的。但是如果只是再过两年大学生活的话，那么还不如留下来，在这边同样可以学习。\n\n“如果只是再过两年大学生活的话”，这句话明晃晃得刺中心脏。\n\n怎么看来，4月的决定，只是强行给自己找理由，很大成分是在逃避呀。强行续命，必然惨烈收场啊。\n\n可以预见未来的大环境是收窄的，目前程序员高工资也是不合理的。现在去工作还能占坑，再晚就没有机会了。如果有能力还好，没有能力也就是自寻死路啊。\n\n自己的选择，自己要付出代价。时间太快了。心态非常不好，放养式的培训需要自己强大的内在驱动，可是我没有啊。\n\n​    又贪心又愚蠢。\n\n​    安慰自己事已至此也是没有用的，不撞南墙是回不了头的。只能看着自己惨烈地撞死在南墙了。\n\n\n\n能做什么改变嘛？\n\n​     生活的惰性拖着我，使得没有什么能够刺激我做出改变了。熬夜，不好好吃饭，不在乎，甚至有可以伤害来报复自己的想法。越是熬夜越是熬得更厉害，越是胃疼越是不想好好吃饭，就像现在，越是找不到方向，越不想找方向。\n\n​    我是想要给社会带来贡献吗？我能给别人带来什么，觉得自己浪费了社会宝贵资源，什么也没有做出来啊。\n\n\n\nso？从现在开始改变么，踏实一点\n\n> 不高估一年能做的事情，不低估一天能做的事情","source":"_drafts/2019年阶段整理.md","raw":"---\ntitle: 2019年阶段整理\ncopyright: true\ndate: 2019-11-01 19:40:44\ncategories: 聊天 \n---\n\n​    时间真快，一晃，生日也过了许久，2019年已经只剩下2个月了。2019年，真是人生的岔路口，往前一看，做了几个影响未来三五十年的决定。\n\n  \n\n   不清楚自己到底想要什么，即贪心又糊涂。\n\n   想要实习经历，却花了三个月时间做了一个不疼不痒，技能树点偏了的项目，谈不上什么成长。\n\n   想要学位，想要title，却不明白为此要付出的代价和是否真的适合自己。错误的决定，一直在做错误的决定。\n\n   实习也没能做有价值的事情，现在读书也是，未来几年感觉还是。读到一篇博客，说，为什么要读研究生\n\n>在微软实习的时候就在犹豫是要转正还是回来继续读研，还记得当时问mentor这个问题，他的回答大意是这样的：\n\n>> 我不能帮你做决定，这个问题只有你自己去思考权衡然后自己去选择。可是我可以跟你说说我的经历（以下省略他的读研经历若干，差不多就是写代码做项目）。如果你能跟一个好的导师，能接触到更多实际的科研和项目，那么这样的读研就是值得的。但是如果只是再过两年大学生活的话，那么还不如留下来，在这边同样可以学习。\n\n“如果只是再过两年大学生活的话”，这句话明晃晃得刺中心脏。\n\n怎么看来，4月的决定，只是强行给自己找理由，很大成分是在逃避呀。强行续命，必然惨烈收场啊。\n\n可以预见未来的大环境是收窄的，目前程序员高工资也是不合理的。现在去工作还能占坑，再晚就没有机会了。如果有能力还好，没有能力也就是自寻死路啊。\n\n自己的选择，自己要付出代价。时间太快了。心态非常不好，放养式的培训需要自己强大的内在驱动，可是我没有啊。\n\n​    又贪心又愚蠢。\n\n​    安慰自己事已至此也是没有用的，不撞南墙是回不了头的。只能看着自己惨烈地撞死在南墙了。\n\n\n\n能做什么改变嘛？\n\n​     生活的惰性拖着我，使得没有什么能够刺激我做出改变了。熬夜，不好好吃饭，不在乎，甚至有可以伤害来报复自己的想法。越是熬夜越是熬得更厉害，越是胃疼越是不想好好吃饭，就像现在，越是找不到方向，越不想找方向。\n\n​    我是想要给社会带来贡献吗？我能给别人带来什么，觉得自己浪费了社会宝贵资源，什么也没有做出来啊。\n\n\n\nso？从现在开始改变么，踏实一点\n\n> 不高估一年能做的事情，不低估一天能做的事情","slug":"2019年阶段整理","published":0,"updated":"2020-07-14T13:37:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclk400016y2hf39d4xx5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>​    时间真快，一晃，生日也过了许久，2019年已经只剩下2个月了。2019年，真是人生的岔路口，往前一看，做了几个影响未来三五十年的决定。</p>\n<p>不清楚自己到底想要什么，即贪心又糊涂。</p>\n<p>想要实习经历，却花了三个月时间做了一个不疼不痒，技能树点偏了的项目，谈不上什么成长。</p>\n<p>想要学位，想要title，却不明白为此要付出的代价和是否真的适合自己。错误的决定，一直在做错误的决定。</p>\n<p>实习也没能做有价值的事情，现在读书也是，未来几年感觉还是。读到一篇博客，说，为什么要读研究生</p>\n<blockquote>\n<p>在微软实习的时候就在犹豫是要转正还是回来继续读研，还记得当时问mentor这个问题，他的回答大意是这样的：</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>我不能帮你做决定，这个问题只有你自己去思考权衡然后自己去选择。可是我可以跟你说说我的经历（以下省略他的读研经历若干，差不多就是写代码做项目）。如果你能跟一个好的导师，能接触到更多实际的科研和项目，那么这样的读研就是值得的。但是如果只是再过两年大学生活的话，那么还不如留下来，在这边同样可以学习。</p>\n</blockquote>\n</blockquote>\n<p>“如果只是再过两年大学生活的话”，这句话明晃晃得刺中心脏。</p>\n<p>怎么看来，4月的决定，只是强行给自己找理由，很大成分是在逃避呀。强行续命，必然惨烈收场啊。</p>\n<p>可以预见未来的大环境是收窄的，目前程序员高工资也是不合理的。现在去工作还能占坑，再晚就没有机会了。如果有能力还好，没有能力也就是自寻死路啊。</p>\n<p>自己的选择，自己要付出代价。时间太快了。心态非常不好，放养式的培训需要自己强大的内在驱动，可是我没有啊。</p>\n<p>​    又贪心又愚蠢。</p>\n<p>​    安慰自己事已至此也是没有用的，不撞南墙是回不了头的。只能看着自己惨烈地撞死在南墙了。</p>\n<p>能做什么改变嘛？</p>\n<p>​     生活的惰性拖着我，使得没有什么能够刺激我做出改变了。熬夜，不好好吃饭，不在乎，甚至有可以伤害来报复自己的想法。越是熬夜越是熬得更厉害，越是胃疼越是不想好好吃饭，就像现在，越是找不到方向，越不想找方向。</p>\n<p>​    我是想要给社会带来贡献吗？我能给别人带来什么，觉得自己浪费了社会宝贵资源，什么也没有做出来啊。</p>\n<p>so？从现在开始改变么，踏实一点</p>\n<blockquote>\n<p>不高估一年能做的事情，不低估一天能做的事情</p>\n</blockquote>\n","site":{"data":{}},"length":867,"excerpt":"","more":"<p>​    时间真快，一晃，生日也过了许久，2019年已经只剩下2个月了。2019年，真是人生的岔路口，往前一看，做了几个影响未来三五十年的决定。</p>\n<p>不清楚自己到底想要什么，即贪心又糊涂。</p>\n<p>想要实习经历，却花了三个月时间做了一个不疼不痒，技能树点偏了的项目，谈不上什么成长。</p>\n<p>想要学位，想要title，却不明白为此要付出的代价和是否真的适合自己。错误的决定，一直在做错误的决定。</p>\n<p>实习也没能做有价值的事情，现在读书也是，未来几年感觉还是。读到一篇博客，说，为什么要读研究生</p>\n<blockquote>\n<p>在微软实习的时候就在犹豫是要转正还是回来继续读研，还记得当时问mentor这个问题，他的回答大意是这样的：</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>我不能帮你做决定，这个问题只有你自己去思考权衡然后自己去选择。可是我可以跟你说说我的经历（以下省略他的读研经历若干，差不多就是写代码做项目）。如果你能跟一个好的导师，能接触到更多实际的科研和项目，那么这样的读研就是值得的。但是如果只是再过两年大学生活的话，那么还不如留下来，在这边同样可以学习。</p>\n</blockquote>\n</blockquote>\n<p>“如果只是再过两年大学生活的话”，这句话明晃晃得刺中心脏。</p>\n<p>怎么看来，4月的决定，只是强行给自己找理由，很大成分是在逃避呀。强行续命，必然惨烈收场啊。</p>\n<p>可以预见未来的大环境是收窄的，目前程序员高工资也是不合理的。现在去工作还能占坑，再晚就没有机会了。如果有能力还好，没有能力也就是自寻死路啊。</p>\n<p>自己的选择，自己要付出代价。时间太快了。心态非常不好，放养式的培训需要自己强大的内在驱动，可是我没有啊。</p>\n<p>​    又贪心又愚蠢。</p>\n<p>​    安慰自己事已至此也是没有用的，不撞南墙是回不了头的。只能看着自己惨烈地撞死在南墙了。</p>\n<p>能做什么改变嘛？</p>\n<p>​     生活的惰性拖着我，使得没有什么能够刺激我做出改变了。熬夜，不好好吃饭，不在乎，甚至有可以伤害来报复自己的想法。越是熬夜越是熬得更厉害，越是胃疼越是不想好好吃饭，就像现在，越是找不到方向，越不想找方向。</p>\n<p>​    我是想要给社会带来贡献吗？我能给别人带来什么，觉得自己浪费了社会宝贵资源，什么也没有做出来啊。</p>\n<p>so？从现在开始改变么，踏实一点</p>\n<blockquote>\n<p>不高估一年能做的事情，不低估一天能做的事情</p>\n</blockquote>\n"},{"title":"2019年第一季度总结","copyright":true,"date":"2019-04-01T02:05:14.000Z","password":"test","_content":"\n2019年过的飞快，\n第一个月：\n前半段是写开题报告，然后答辩\n后半段是无心做任何事，回家过年，买iPad\n\n第二个月：\n前半个月：专心过年，每天吃喝玩乐，见朋友；\n后半个月：开学前一个星期回实验室，什么都不想做；\n\n第三个月：\n写了简历，开始投简历的一个月\n实在是菜呀；\n好的机会都被我浪费了；\n第二周的腾讯；\n第三四周的阿里；\n第四周的远景，旷视；\n第五周的依图科技；\n\n算法题不会做；\n技术知识也不了解；\n口才也需要提升；\n科研也没做出什么来；\n\n读博：\n经历了，想读，找工作，还是想读的心理历程；\n没人看好我，自己还眼高手低，真是没救啊；\n\n悟以往之不谏，只来者之可追。\n吾将上下求索。","source":"_posts/2019年第一季度总结.md","raw":"---\ntitle: 2019年第一季度总结\ncopyright: true\ndate: 2019-04-01 10:05:14\ntags: \n - 总结\ncategories: [生活]\npassword: test\n---\n\n2019年过的飞快，\n第一个月：\n前半段是写开题报告，然后答辩\n后半段是无心做任何事，回家过年，买iPad\n\n第二个月：\n前半个月：专心过年，每天吃喝玩乐，见朋友；\n后半个月：开学前一个星期回实验室，什么都不想做；\n\n第三个月：\n写了简历，开始投简历的一个月\n实在是菜呀；\n好的机会都被我浪费了；\n第二周的腾讯；\n第三四周的阿里；\n第四周的远景，旷视；\n第五周的依图科技；\n\n算法题不会做；\n技术知识也不了解；\n口才也需要提升；\n科研也没做出什么来；\n\n读博：\n经历了，想读，找工作，还是想读的心理历程；\n没人看好我，自己还眼高手低，真是没救啊；\n\n悟以往之不谏，只来者之可追。\n吾将上下求索。","slug":"2019年第一季度总结","published":1,"updated":"2020-07-15T03:56:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclk900036y2hhxk57ga2","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">请输入密码以阅读这篇私密文章。</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"14740dff56148025df17c25767fe5dae58ee5961dd1db6bcf545a3fe8ebac43e\">9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daebc77ada890a2096ca17d30fc9e3ed8773cc199813d3e4e48c5c6fb3395ae0699ad1813f14667644ed4f377d78dd9df7c17f88c5bcf6b7cbd5efebecb95a094441886f47fe984846690aac0250cd679d726eaca7dc7cf590c15352d01c28bde7fd8953efb54cc33aeb8937397ff53767048621cc73df1ee0dd8227c76887ec234a4a7a5a28088ff67911742f007382d97a379abe7b1fdb5944473cba39b5f2bcfe35fe0d410b15a91b649546aa956de247420f8e8dd7dc972062875e36269b2567d1ebe4ed7a56fcfcf4e74a4c4be03f07ee7eeef2661d40eac883fe98660fc750b4b4abdb8e05fcaec8a3da8e7f2e64d0ec9f5901c004392899c3be04ed4a6b0e9e7e2204a5581a2c6c7eedc0f8a438a82551ec689eeb9e0dd316f2cb9822d5c78f610cca6ffc30cc36a62d928aeea7cea862887be66967f7177d179b546a2f56df8d6ace2813f665bc14fba6b0acea45eacec927158967cd8f2e3f576fb719eeb3d846b0ac20ae329a34f7f4dc2cf053af463b4286eccb6d0e8235537212792cad461759c391244050b18e03720f201f60468d6a1fb7e98804a4ff3f3ddac1a9746debc2651862893b18466eda3c3e7bfe601c19fde0042c3a35848394c9bc4ded030a9bdd31c6f24d346be11b9aa92103b186d1e486600582d71059d6df3d1e1b08ba4246f9a29f2341bab782643ecbeb5a1bfa006d40cf3d060467ba7576115ea9e5d51acdfe6c7b352c32fafd101199dbebd74939f7b630db75891d2260b88c7618a2932a23c0b261831e1b9e655b965629077747cf5f08f264d0f3f97568c2b0ec417504b61be8b74b6d7abd8dff3b6e3f839ecdb4770f89657d194dca9bf5201fae93cea248e07276619383f1c10b536fed3eb57f72127d3188f6afef758746061d23b339fa5114421daa031c965c108fd2b59d0b921e11605dab2b77e6c2fcd296aa359bfd506d5540823e7b9334a2620cf5c29959a5339af06173ac85c9c587153e439fe17c39822300fdbac49fffd45ba9c468c4b2bc2a7eba759a6989fffcab9d0b3d48a2ad973bb8096d598fa6c2dc63c6cddd8deeb9025b26ce2e91f086f97f954ced69f0437086b057b512b76b17df3b28dbff87a80df0d1cd557841a1dae44e65632fbbbde20da950a45c985c308c5ee88f20e71d8849b5766280dba68dccd30d80bb601f3e71acd2685f2775262613674a88832672347e49d100bacb03e899a4d299a16a0b3448222f8b4cae7f94a2307251aa16ea4b1217a5764b30ec62895f29f237d4be35a4692a3b1fcfe9b40f24ca46881000b8dca418afcfbc65f397a21758b44179a78e7b56e4447780d51bd3307a9087156c56707789436a44d35085569b3b528bdc93694cb52817761d86e560299de410af3119d1ffc3dfd228a8952f1ed21ace4021c356c28978e63d2cf01ef5c0bddc39fa656d13766a8585a452d9de9ff1c5afee51f6c24737422c825ce5652c1dd2fec14e4d5d3d0ba620135850fc7a25636319f701c73354b9f2e90ae6ea8cbd3d40bc36e2</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"length":269,"excerpt":"此文章已被加密，需要输入密码访问。","more":"此文章已被加密，需要输入密码访问。","origin":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>2019年过的飞快，<br />\n第一个月：<br />\n前半段是写开题报告，然后答辩<br />\n后半段是无心做任何事，回家过年，买iPad</p>\n<p>第二个月：<br />\n前半个月：专心过年，每天吃喝玩乐，见朋友；<br />\n后半个月：开学前一个星期回实验室，什么都不想做；</p>\n<p>第三个月：<br />\n写了简历，开始投简历的一个月<br />\n实在是菜呀；<br />\n好的机会都被我浪费了；<br />\n第二周的腾讯；<br />\n第三四周的阿里；<br />\n第四周的远景，旷视；<br />\n第五周的依图科技；</p>\n<p>算法题不会做；<br />\n技术知识也不了解；<br />\n口才也需要提升；<br />\n科研也没做出什么来；</p>\n<p>读博：<br />\n经历了，想读，找工作，还是想读的心理历程；<br />\n没人看好我，自己还眼高手低，真是没救啊；</p>\n<p>悟以往之不谏，只来者之可追。<br />\n吾将上下求索。</p>\n","encrypt":true},{"title":"2019年3月11日 暑期实习之腾讯面试","date":"2019-03-14T05:49:11.000Z","_content":"\n#### 1. 基本情况\n\n2019年暑期实习提前批-腾讯安全云（内推自师姐的闺蜜）\n\n<!--more-->\n\n#### 2. 面试内容（30分钟）\n\n1. 自我介绍\n2. 介绍你的研究方向和项目\n   1. 数据不平衡问题怎么解决的\n   2. 如何降维，考虑用什么方法，为什么用这个方法\n   3. 使用了什么算法， 哪一个效果好，为什么效果好\n   4. 如何检测异常值，如何处理误判\n   5. 如何处理过拟合问题\n   6. 描述L1,L2，本质和区别\n3. 机器学习基本算法了解哪些\n   1. 请介绍SVM\n   2. SVM对偶问题\n   3. 核函数有哪些\n   4. 哪些可以成为核函数（半正定）\n   5. 随机森林，gbdt，xgboost的区别与关系\n4. 深度学习算法了解哪些\n   1. 描述CNN\n   2. 计算卷积之后的矩阵大小，一共有多少个参数\n5. SQL\n   1. in join时如何解决数据不均衡的问题\n\n\n\n#### 3. 总结\n\n首次面试，电面不考算法题。主要问项目细节和基础知识。\n\n只争取到两天复习时间，准备得很不充分\n\n+ 准备不充分（自我介绍，项目介绍，项目细节要自己过几遍）\n+ 基础不扎实，卷积怎么算都不记得了\n\n**很多时候，如果面试官问到一个比较基础的问题，你没答上来，那你就跪了，所以回答之前要三思熟虑，别急着回答，好好想一想。**\n\n\n\n![image.png](http://upload-images.jianshu.io/upload_images/1234352-afe83d6ce0d8472f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n好好准备吧，后面多投一投，至少面个15家公司再说\n\n- Offer = 0.3心态 + 0.5实力 + 0.2运气，缺一不可\n- 越早开始准备越好，准备的越充分越好\n- 切忌眼高手低。前期尽量多利用小公司的面试机会来锻炼自己，积累经验。\n- 在面试的过程中找准自己的定位，并且适当的根据面试情况及时调整自己的定位和目标，保持信心，但不能盲目自信。不管是大公司还是小公司，尽早拿到第一个offer。","source":"_posts/2019年3月11日-暑期实习之腾讯面试.md","raw":"---\ntitle: 2019年3月11日 暑期实习之腾讯面试\ndate: 2019-03-14 13:49:11\ntags: \n- 面经\n- 实习\ncategories: 学习\n---\n\n#### 1. 基本情况\n\n2019年暑期实习提前批-腾讯安全云（内推自师姐的闺蜜）\n\n<!--more-->\n\n#### 2. 面试内容（30分钟）\n\n1. 自我介绍\n2. 介绍你的研究方向和项目\n   1. 数据不平衡问题怎么解决的\n   2. 如何降维，考虑用什么方法，为什么用这个方法\n   3. 使用了什么算法， 哪一个效果好，为什么效果好\n   4. 如何检测异常值，如何处理误判\n   5. 如何处理过拟合问题\n   6. 描述L1,L2，本质和区别\n3. 机器学习基本算法了解哪些\n   1. 请介绍SVM\n   2. SVM对偶问题\n   3. 核函数有哪些\n   4. 哪些可以成为核函数（半正定）\n   5. 随机森林，gbdt，xgboost的区别与关系\n4. 深度学习算法了解哪些\n   1. 描述CNN\n   2. 计算卷积之后的矩阵大小，一共有多少个参数\n5. SQL\n   1. in join时如何解决数据不均衡的问题\n\n\n\n#### 3. 总结\n\n首次面试，电面不考算法题。主要问项目细节和基础知识。\n\n只争取到两天复习时间，准备得很不充分\n\n+ 准备不充分（自我介绍，项目介绍，项目细节要自己过几遍）\n+ 基础不扎实，卷积怎么算都不记得了\n\n**很多时候，如果面试官问到一个比较基础的问题，你没答上来，那你就跪了，所以回答之前要三思熟虑，别急着回答，好好想一想。**\n\n\n\n![image.png](http://upload-images.jianshu.io/upload_images/1234352-afe83d6ce0d8472f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n好好准备吧，后面多投一投，至少面个15家公司再说\n\n- Offer = 0.3心态 + 0.5实力 + 0.2运气，缺一不可\n- 越早开始准备越好，准备的越充分越好\n- 切忌眼高手低。前期尽量多利用小公司的面试机会来锻炼自己，积累经验。\n- 在面试的过程中找准自己的定位，并且适当的根据面试情况及时调整自己的定位和目标，保持信心，但不能盲目自信。不管是大公司还是小公司，尽早拿到第一个offer。","slug":"2019年3月11日-暑期实习之腾讯面试","published":1,"updated":"2019-03-27T09:14:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclke00066y2h4vr35byo","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h4 id=\"1-基本情况\"><a class=\"markdownIt-Anchor\" href=\"#1-基本情况\"></a> 1. 基本情况</h4>\n<p>2019年暑期实习提前批-腾讯安全云（内推自师姐的闺蜜）</p>\n<a id=\"more\"></a>\n<h4 id=\"2-面试内容30分钟\"><a class=\"markdownIt-Anchor\" href=\"#2-面试内容30分钟\"></a> 2. 面试内容（30分钟）</h4>\n<ol>\n<li>自我介绍</li>\n<li>介绍你的研究方向和项目\n<ol>\n<li>数据不平衡问题怎么解决的</li>\n<li>如何降维，考虑用什么方法，为什么用这个方法</li>\n<li>使用了什么算法， 哪一个效果好，为什么效果好</li>\n<li>如何检测异常值，如何处理误判</li>\n<li>如何处理过拟合问题</li>\n<li>描述L1,L2，本质和区别</li>\n</ol>\n</li>\n<li>机器学习基本算法了解哪些\n<ol>\n<li>请介绍SVM</li>\n<li>SVM对偶问题</li>\n<li>核函数有哪些</li>\n<li>哪些可以成为核函数（半正定）</li>\n<li>随机森林，gbdt，xgboost的区别与关系</li>\n</ol>\n</li>\n<li>深度学习算法了解哪些\n<ol>\n<li>描述CNN</li>\n<li>计算卷积之后的矩阵大小，一共有多少个参数</li>\n</ol>\n</li>\n<li>SQL\n<ol>\n<li>in join时如何解决数据不均衡的问题</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"3-总结\"><a class=\"markdownIt-Anchor\" href=\"#3-总结\"></a> 3. 总结</h4>\n<p>首次面试，电面不考算法题。主要问项目细节和基础知识。</p>\n<p>只争取到两天复习时间，准备得很不充分</p>\n<ul>\n<li>准备不充分（自我介绍，项目介绍，项目细节要自己过几遍）</li>\n<li>基础不扎实，卷积怎么算都不记得了</li>\n</ul>\n<p><strong>很多时候，如果面试官问到一个比较基础的问题，你没答上来，那你就跪了，所以回答之前要三思熟虑，别急着回答，好好想一想。</strong></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1234352-afe83d6ce0d8472f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\" /></p>\n<p>好好准备吧，后面多投一投，至少面个15家公司再说</p>\n<ul>\n<li>Offer = 0.3心态 + 0.5实力 + 0.2运气，缺一不可</li>\n<li>越早开始准备越好，准备的越充分越好</li>\n<li>切忌眼高手低。前期尽量多利用小公司的面试机会来锻炼自己，积累经验。</li>\n<li>在面试的过程中找准自己的定位，并且适当的根据面试情况及时调整自己的定位和目标，保持信心，但不能盲目自信。不管是大公司还是小公司，尽早拿到第一个offer。</li>\n</ul>\n","site":{"data":{}},"length":604,"excerpt":"<h4 id=\"1-基本情况\"><a class=\"markdownIt-Anchor\" href=\"#1-基本情况\"></a> 1. 基本情况</h4>\n<p>2019年暑期实习提前批-腾讯安全云（内推自师姐的闺蜜）</p>","more":"<h4 id=\"2-面试内容30分钟\"><a class=\"markdownIt-Anchor\" href=\"#2-面试内容30分钟\"></a> 2. 面试内容（30分钟）</h4>\n<ol>\n<li>自我介绍</li>\n<li>介绍你的研究方向和项目\n<ol>\n<li>数据不平衡问题怎么解决的</li>\n<li>如何降维，考虑用什么方法，为什么用这个方法</li>\n<li>使用了什么算法， 哪一个效果好，为什么效果好</li>\n<li>如何检测异常值，如何处理误判</li>\n<li>如何处理过拟合问题</li>\n<li>描述L1,L2，本质和区别</li>\n</ol>\n</li>\n<li>机器学习基本算法了解哪些\n<ol>\n<li>请介绍SVM</li>\n<li>SVM对偶问题</li>\n<li>核函数有哪些</li>\n<li>哪些可以成为核函数（半正定）</li>\n<li>随机森林，gbdt，xgboost的区别与关系</li>\n</ol>\n</li>\n<li>深度学习算法了解哪些\n<ol>\n<li>描述CNN</li>\n<li>计算卷积之后的矩阵大小，一共有多少个参数</li>\n</ol>\n</li>\n<li>SQL\n<ol>\n<li>in join时如何解决数据不均衡的问题</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"3-总结\"><a class=\"markdownIt-Anchor\" href=\"#3-总结\"></a> 3. 总结</h4>\n<p>首次面试，电面不考算法题。主要问项目细节和基础知识。</p>\n<p>只争取到两天复习时间，准备得很不充分</p>\n<ul>\n<li>准备不充分（自我介绍，项目介绍，项目细节要自己过几遍）</li>\n<li>基础不扎实，卷积怎么算都不记得了</li>\n</ul>\n<p><strong>很多时候，如果面试官问到一个比较基础的问题，你没答上来，那你就跪了，所以回答之前要三思熟虑，别急着回答，好好想一想。</strong></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1234352-afe83d6ce0d8472f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\" /></p>\n<p>好好准备吧，后面多投一投，至少面个15家公司再说</p>\n<ul>\n<li>Offer = 0.3心态 + 0.5实力 + 0.2运气，缺一不可</li>\n<li>越早开始准备越好，准备的越充分越好</li>\n<li>切忌眼高手低。前期尽量多利用小公司的面试机会来锻炼自己，积累经验。</li>\n<li>在面试的过程中找准自己的定位，并且适当的根据面试情况及时调整自己的定位和目标，保持信心，但不能盲目自信。不管是大公司还是小公司，尽早拿到第一个offer。</li>\n</ul>"},{"title":"2019年阶段整理","copyright":true,"date":"2019-11-01T11:40:44.000Z","mathjax":false,"password":"test","toc":null,"_content":"\n\n​    时间真快，一晃，生日也过了许久，2019年已经只剩下2个月了。2019年，真是人生的岔路口，往前一看，做了几个影响未来三五十年的决定。\n\n  \n\n   不清楚自己到底想要什么，即贪心又糊涂。\n\n   想要实习经历，却花了三个月时间做了一个不疼不痒，技能树点偏了的项目，谈不上什么成长。\n\n   想要学位，想要title，却不明白为此要付出的代价和是否真的适合自己。错误的决定，一直在做错误的决定。\n\n   实习也没能做有价值的事情，现在读书也是，未来几年感觉还是。读到一篇博客，说，为什么要读研究生\n\n>在微软实习的时候就在犹豫是要转正还是回来继续读研，还记得当时问mentor这个问题，他的回答大意是这样的：\n\n>> 我不能帮你做决定，这个问题只有你自己去思考权衡然后自己去选择。可是我可以跟你说说我的经历（以下省略他的读研经历若干，差不多就是写代码做项目）。如果你能跟一个好的导师，能接触到更多实际的科研和项目，那么这样的读研就是值得的。但是如果只是再过两年大学生活的话，那么还不如留下来，在这边同样可以学习。\n\n“如果只是再过两年大学生活的话”，这句话明晃晃得刺中心脏。\n\n怎么看来，4月的决定，只是强行给自己找理由，很大成分是在逃避呀。强行续命，必然惨烈收场啊。\n\n可以预见未来的大环境是收窄的，目前程序员高工资也是不合理的。现在去工作还能占坑，再晚就没有机会了。如果有能力还好，没有能力也就是自寻死路啊。\n\n自己的选择，自己要付出代价。时间太快了。心态非常不好，放养式的培训需要自己强大的内在驱动，可是我没有啊。\n\n​    又贪心又愚蠢。\n\n​    安慰自己事已至此也是没有用的，不撞南墙是回不了头的。只能看着自己惨烈地撞死在南墙了。\n\n\n\n能做什么改变嘛？\n\n​     生活的惰性拖着我，使得没有什么能够刺激我做出改变了。熬夜，不好好吃饭，不在乎，甚至有可以伤害来报复自己的想法。越是熬夜越是熬得更厉害，越是胃疼越是不想好好吃饭，就像现在，越是找不到方向，越不想找方向。\n\n​    我是想要给社会带来贡献吗？我能给别人带来什么，觉得自己浪费了社会宝贵资源，什么也没有做出来啊。\n\n\n\nso？从现在开始改变么，踏实一点\n\n> 不高估一年能做的事情，不低估一天能做的事情","source":"_posts/2019年阶段整理.md","raw":"---\ntitle: 2019年阶段整理\ntags: 生活\ncategories: 聊天\ncopyright: true\ndate: 2019-11-01 19:40:44\nmathjax: false\npassword: test\ntoc:\n---\n\n\n​    时间真快，一晃，生日也过了许久，2019年已经只剩下2个月了。2019年，真是人生的岔路口，往前一看，做了几个影响未来三五十年的决定。\n\n  \n\n   不清楚自己到底想要什么，即贪心又糊涂。\n\n   想要实习经历，却花了三个月时间做了一个不疼不痒，技能树点偏了的项目，谈不上什么成长。\n\n   想要学位，想要title，却不明白为此要付出的代价和是否真的适合自己。错误的决定，一直在做错误的决定。\n\n   实习也没能做有价值的事情，现在读书也是，未来几年感觉还是。读到一篇博客，说，为什么要读研究生\n\n>在微软实习的时候就在犹豫是要转正还是回来继续读研，还记得当时问mentor这个问题，他的回答大意是这样的：\n\n>> 我不能帮你做决定，这个问题只有你自己去思考权衡然后自己去选择。可是我可以跟你说说我的经历（以下省略他的读研经历若干，差不多就是写代码做项目）。如果你能跟一个好的导师，能接触到更多实际的科研和项目，那么这样的读研就是值得的。但是如果只是再过两年大学生活的话，那么还不如留下来，在这边同样可以学习。\n\n“如果只是再过两年大学生活的话”，这句话明晃晃得刺中心脏。\n\n怎么看来，4月的决定，只是强行给自己找理由，很大成分是在逃避呀。强行续命，必然惨烈收场啊。\n\n可以预见未来的大环境是收窄的，目前程序员高工资也是不合理的。现在去工作还能占坑，再晚就没有机会了。如果有能力还好，没有能力也就是自寻死路啊。\n\n自己的选择，自己要付出代价。时间太快了。心态非常不好，放养式的培训需要自己强大的内在驱动，可是我没有啊。\n\n​    又贪心又愚蠢。\n\n​    安慰自己事已至此也是没有用的，不撞南墙是回不了头的。只能看着自己惨烈地撞死在南墙了。\n\n\n\n能做什么改变嘛？\n\n​     生活的惰性拖着我，使得没有什么能够刺激我做出改变了。熬夜，不好好吃饭，不在乎，甚至有可以伤害来报复自己的想法。越是熬夜越是熬得更厉害，越是胃疼越是不想好好吃饭，就像现在，越是找不到方向，越不想找方向。\n\n​    我是想要给社会带来贡献吗？我能给别人带来什么，觉得自己浪费了社会宝贵资源，什么也没有做出来啊。\n\n\n\nso？从现在开始改变么，踏实一点\n\n> 不高估一年能做的事情，不低估一天能做的事情","slug":"2019年阶段整理","published":1,"updated":"2020-07-15T03:53:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclki00096y2had4z6m5k","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">请输入密码以阅读这篇私密文章。</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"1bf805b318f9e367943b7b31f8372d785ffe2b7b3524ba78b7f4666514fc1fbe\">9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daebc77ada890a2096ca17d30fc9e3ed8773cc199813d3e4e48c5c6fb3395ae0699ad1813f14667644ed4f377d78dd9df7c17f88c5bcf6b7cbd5efebecb95a094441886f47fe984846690aac0250cd679d726eaca7dc7cf590c15352d01c28bde7fd8953efb54cc33aeb8937397ff5376704a8827a9039290b0718ff9a728c8607d5430dea71b4510d8c3ff7ce7fcda3530a01c9edb65d1cf28e6832b9e749888950f03f12c34274e9325b08948f22f791c33a42f98d0d539fbbdf25e226a6f2ffe1a33a73e4bbf1cf9576fc34918456b4bd139b1d0b4f4d631b5ef010e9f6017a440c3c4fb0048cb54ea1b3d1c7af8d89a00fb27abb37af7aa70696fba93eadfa13058d379dc6b16525f603ef81df74784f9afd7bd0c2b7ffca8df54881efc0726e7afc1f6e37563d96675bbb00fe2d635fde06b4d29b45972eb18cfc6223a0cdbfaa33ccbec44ce7c3fc29b3b8dfd700764e600e02b4e146ca681f5456293f835934c6ad344e4466306b2f39a4b15d93f7fa2053ae3596016f241420ca2a340defc081dc3ccd694e9295f7dc28926d65494c2c2aebc4acb1b8a3aee6896336a6bb58ae6910e22cc9aaddc67d2328f2e091429794445f0b3db225d6ed82228dc95d5b9cb89140de29c6f0a5e321f6d6177efa85f1f3d0ab5e0c665f6119572cd22d3bc2f67648103468b502090dfbe1b5e1efac231cc29de6c8c62e050c0ac1bbe3aa9acd03b967ea4e4f86bf3cd783261f7ed518d9aeba4672df37c5879190dac9d1358aa21f12bbfcd2a5f4223841503e5337b79916d284f1a34d3a6ee76e08150a3aa80a7ced46f40c723904f6f382a8dfb1ed7ca3434030dcbd0396ce76870820e9d4d8fce1992152d83f93395ec9551f7ef0600ca0a4a52cbaf5dd68a1e8267426459b9974cd4dd69ac25c1d404b1e58693a55cfe944eb882d76e5e2b29c32dbab672b66951f6d1f6b4f988192fd4754bbce024525a6bd61a4392927d3c8196ee354dcad0a1fd23a3a75feba8cc0efb64d3b312cdc325af87ece37bd7ea99143b1ac36b159b766dc4c6a8190b0c29cfd2493a1c9e12c1cca299fabcb991a7e744d0349123b99c38d009a9ad9b8285933450eec3410ccbc6932d932575ad6e3d1a439c46bd409f76f69c86023bc5a3d14825d6918bb83015c11a5ded4bc8d3c20cb292b6f12abec35505649542f3f193ff80d6ccaf3f0d02166b33254cba8c1419e338aed11dd46bf6113fd02090a0f618dba0e05329f3bafecb3b50260ca89d886ff79f0113b24d6d56ab0160cded8fc2b455c36335a241d64777b9ad33aa741d592c9ddf1effc9d401f925c8c8898cf752ad7ba8f816f055a8632726c8c72145597fe745cdbf5947820c2060d2c95318fe91b578578967c082afb76fa1e0f47f1e1ad841d4567a60e790be6951a3302fbbb4fed4c2ba67877ff7f8f85372a84524ebb87bf66e7034cb597642b70f49a3a6ca201d10ca823c6a6e6ff287e853c4367e2f57eb9db744f77b4abb59b1bab6ae1c6aa332e67afd4d54f3008e5224034cc81a023ea27c505cdf153bb8fad48d44a0bb5b067f0a816d2bcb6411c9210c73b74345be5b8d121357950e075982aff7104b48d5fe497b96d8a458d101d785cf538199480a9ade08ca1df42876ffacd7abeec58aeb33a3057906fccb11ece1d520e3c8f4ad10513c5dbcbc9718a0903b736c9dfae81244f28ad8c7cc71b7dfe2217be0363f43110ad52fb7e9e9f28ffb226b942bf0a56546997ef4ae2f526cbff9babdebba1ec30f1fb06ece34ec9659402c2a0cb3f4d959adac7937a220be652d942a73f79b8a5544b575cea0754fdc2f1b1872fc29359751003220df77b6089b15fa98d7a980f29ffb673ad72c9827cb072932f93b7142ba73c6750c3fe89123ce88d4ea87287cb6a67cd1d9679172711908409315562c61633ef9214d29bdd58700de7ad7f35b2dd5d01b9a22c1052a097f79a58a633b15424f997b86a8c1e12b8974d9d5cb2f30e83e846d06b65f3967e22324e2a2d947129a20420640dd77e21a7f90a13ea3138579222df164273c55599a37045ae37b95de59e1108bad49a89744c5955a508efa9d679f706929f29923cdcc1e966809585b769206ff9d0b9ac604df63193f1a63ca1d02ebb18a30b7e11214f0e0d3dfe073530df09853694750af6b7cb971d798e4324667838270b3158731b00f3214bdf3e2699c11c434d50cb9e150f76840b49de9fe6c8000520d7e07d89e17daf0d95ba3dcb802fc3ca54803af0fbaa19b2b999ddb062cf01a88f5c9543ba173935437d32dfdc9afc8f5aa9280076790f27424a2efb4aa91c525ecb90c9ab89679d69ae407299e8b33952ce7418113f0e4f773bb327ce34ff24ae259fa6b61c75bcd3211f7a1b9124f2d31d5cff7695fead290580e2e344cb497e9e184b41ac6a79139759a9ac7fdc2ff58d9b1b30b7b2579b7849ede5995a288ca191072208272125d2ccb754d1ecbc1f9f0d7cc3e550db3170d646e983846837f55f62c22bab8fe6ba50e241aff1af44a1e2034f8a3d9f304e178953c649225018a68bb714e1bf36f2bd15b1dd5d80ecd594fbd704782299f082d5885e4d17a8ca1ca5d4e6d5e567fa4c5a9610e79135942b0675b009805ae2df4e80a1b01da65592509e983941fe59099366ace363cd5366111bd771f5ff20893dbc93ce5bdb0de7b584b4d8dc1c58b2265282c4648c630983fb1d06e3705095736648346c37a052adb6a43395c18e9746f23e70ee924c38da595f4d3efd93db97f8da911c527da0c7752b3da36a43b8e003c9ac659a8eb58e730cf5ee10bc3161fdd04ebd79f6037ec19f10348bb2c18a78f917b35d9ef259e102fc275accee6565a1477ddb6b94896b57d661aacca3db5ba17b1bb8fa054877609d5cf4946363c03363fc779482f223b9a785d51c8fa4ad34f7f976a728e6d9805ec3e3ecb5eae42e2ec7326d576d42fddc94631b5330e32e14240098b6869843cdd69582f675d3816ad5d6df440c04d9338aecfe0265d126a439525dce85dbd6179d3a766201c7084bd723f23acf26ac6ab2bbd26863776bc180f25116b43b2a56253c16ee7d2104c8278f6c54f91817332f7d9793b8f6d31705bf2f72cd91c0e008ec65b51bd61716ce6c9f9c45c1be58cf41e08a1df802ed2fad25936aba2edcf247b283810cb5de2cbeb34fb3cc16ada3ea46e6e4628f173985f060d0febc0737a65f6065d02505699d042f1152ef73b55c1f9e322916f22dbcbc132eb2d872395231683b92b010ea9eca1db69fffd93f628e6c66626492f4ebb2f61c4d05346e8303d2a9af6afd680878d6fc6849d394d28573da80dc3f42e3be33ad3db92aa1186785549d6825a6e01f0c8b9f00b1035bf8357c72085f536ad61332df4a53071e0edc6025cf21e0215ff339a43f340f96c8f920a9d2a7cf53e1309acdd3e2c3b3984c3324d06dd3440f8c995a00ce8a31c1dd08308b71b2758b4459a75a877d16a9ff8ae319c3dc93bdd513881abe42616b6f9abe703421bf8b337c467688c73c6bd2a450f0645f353194fc4b4d2ffc8cdcd4df873da578cddc6ea863312d02decf9bbc28ef740cfdf25d0c4f41c6c2d3b53640d411e244041d7b971e3e1c19d4ab32c0bd02b4e9dc86a573732cbef837433a62d482a0e2aea1759e8a19303844bc4d709a05124c0ec3ad8ea2e8116f4c221d5550e6ff092074d0112465765d4adbbc354a640459ec4c25e0f49821c56b5c1e254a87985978cb66f77d83a85388a8f05d64382c6a5bb719381c3e13ad7e5c49d7e5afd72f7d0399d8e2c07347d2c0765ae94935dab8c70e17f42d5d2c8f19eb4568805c2e1bb551eae1c6842a80d98b96294e0fe92533a4f612a398eb163f331a484c74adfec69f95e762dac39310aedee9f13d94433e4e96c743664dadc0f57865af47265e636cc08eb258393619e1a5a0504abd464f2f2eb4f11c61653cf732e0da4059c5dba0099b76a7e0b969e1548562a11482d554c6b8c4484228f8b04ac2e814a45a034b49c23dbf0133761a1d3a429a82f44f400d7466c183749beb449a163da531414dad01f0901d46d62448c94de1c6a5e6d5b96dac91d977a3c58fe98735e9340532863e3b01da93952d87665d7442887e5470fec30834744948d4c59019ebf7ee7ae3f22953ffb7c6dbb7</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"length":867,"excerpt":"此文章已被加密，需要输入密码访问。","more":"此文章已被加密，需要输入密码访问。","origin":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>​    时间真快，一晃，生日也过了许久，2019年已经只剩下2个月了。2019年，真是人生的岔路口，往前一看，做了几个影响未来三五十年的决定。</p>\n<p>不清楚自己到底想要什么，即贪心又糊涂。</p>\n<p>想要实习经历，却花了三个月时间做了一个不疼不痒，技能树点偏了的项目，谈不上什么成长。</p>\n<p>想要学位，想要title，却不明白为此要付出的代价和是否真的适合自己。错误的决定，一直在做错误的决定。</p>\n<p>实习也没能做有价值的事情，现在读书也是，未来几年感觉还是。读到一篇博客，说，为什么要读研究生</p>\n<blockquote>\n<p>在微软实习的时候就在犹豫是要转正还是回来继续读研，还记得当时问mentor这个问题，他的回答大意是这样的：</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>我不能帮你做决定，这个问题只有你自己去思考权衡然后自己去选择。可是我可以跟你说说我的经历（以下省略他的读研经历若干，差不多就是写代码做项目）。如果你能跟一个好的导师，能接触到更多实际的科研和项目，那么这样的读研就是值得的。但是如果只是再过两年大学生活的话，那么还不如留下来，在这边同样可以学习。</p>\n</blockquote>\n</blockquote>\n<p>“如果只是再过两年大学生活的话”，这句话明晃晃得刺中心脏。</p>\n<p>怎么看来，4月的决定，只是强行给自己找理由，很大成分是在逃避呀。强行续命，必然惨烈收场啊。</p>\n<p>可以预见未来的大环境是收窄的，目前程序员高工资也是不合理的。现在去工作还能占坑，再晚就没有机会了。如果有能力还好，没有能力也就是自寻死路啊。</p>\n<p>自己的选择，自己要付出代价。时间太快了。心态非常不好，放养式的培训需要自己强大的内在驱动，可是我没有啊。</p>\n<p>​    又贪心又愚蠢。</p>\n<p>​    安慰自己事已至此也是没有用的，不撞南墙是回不了头的。只能看着自己惨烈地撞死在南墙了。</p>\n<p>能做什么改变嘛？</p>\n<p>​     生活的惰性拖着我，使得没有什么能够刺激我做出改变了。熬夜，不好好吃饭，不在乎，甚至有可以伤害来报复自己的想法。越是熬夜越是熬得更厉害，越是胃疼越是不想好好吃饭，就像现在，越是找不到方向，越不想找方向。</p>\n<p>​    我是想要给社会带来贡献吗？我能给别人带来什么，觉得自己浪费了社会宝贵资源，什么也没有做出来啊。</p>\n<p>so？从现在开始改变么，踏实一点</p>\n<blockquote>\n<p>不高估一年能做的事情，不低估一天能做的事情</p>\n</blockquote>\n","encrypt":true},{"title":"2020年过去一半了","copyright":true,"date":"2020-07-15T03:59:58.000Z","mathjax":null,"password":"test","toc":null,"_content":"\n\n\n在实验室这么久，突然，要换方向了，前三年学的东西完全抛弃了换了一个新方向；难度又大，可行性也不知道；\n\n不开心呀。\n\n","source":"_posts/2020年新方向.md","raw":"---\ntitle: 2020年过去一半了\ncopyright: true\ndate: 2020-07-15 11:59:58\ntags: 生活， 闲聊\ncategories:\nmathjax:\npassword: test\ntoc:\n---\n\n\n\n在实验室这么久，突然，要换方向了，前三年学的东西完全抛弃了换了一个新方向；难度又大，可行性也不知道；\n\n不开心呀。\n\n","slug":"2020年新方向","published":1,"updated":"2020-07-15T04:02:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclkj000a6y2hd7kzdz47","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">请输入密码以阅读这篇私密文章。</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"a0fad1b4ac722a9c5f6b3000f5a6c11bb9020283536b79bb909e9d8af76da793\">9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daebc77ada890a2096ca17d30fc9e3ed8773cc199813d3e4e48c5c6fb3395ae0699ad1813f14667644ed4f377d78dd9df7c17f88c5bcf6b7cbd5efebecb95a094441886f47fe984846690aac0250cd679d726eaca7dc7cf590c15352d01c28bde7fd8953efb54cc33aeb8937397ff5376704d5b76a9ddfc6e39b74045d6cebcd615004468f0684966e05599e8ea53d71687cb577e840ffd9a1919480de94c88fdc4143a8ecd4ee5f21af541c45dcefe4988514f4b899db56be6ce61170b58e9197d971eb4155d9357f14c54c7e72d60f2c638f56c1eeb1d959ce44571ebadbb776d2232ce2d7b0e9892e73b12134899f1c9f892ae59cbea7374c10debfe0445cda28809ca754533fbda638388ee616f2bd7b7f4de8ed85d242918b7fb96943c8134c6d3cd75bda75606a37e3f0312e6175ad</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"length":55,"excerpt":"此文章已被加密，需要输入密码访问。","more":"此文章已被加密，需要输入密码访问。","origin":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>在实验室这么久，突然，要换方向了，前三年学的东西完全抛弃了换了一个新方向；难度又大，可行性也不知道；</p>\n<p>不开心呀。</p>\n","encrypt":true},{"title":"Leetcode -1 两数之和（Two Sum）","copyright":true,"date":"2019-04-01T05:57:26.000Z","_content":"\n#### 1. [题目](https://leetcode-cn.com/problems/two-sum/)\n> 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。\n> 你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。\n> 示例:\n> 给定 nums = [2, 7, 11, 15], target = 9\n> 因为 nums[0] + nums[1] = 2 + 7 = 9\n> 所以返回 [0, 1]\n\n#### 2. 解题思路\n##### 2.1 朴素解法（暴力遍历）\n通过两次循环，每次循环遍历列表，这种算法的时间复杂度是 `O(n^2)`\n\n##### 2.2 哈希存储\n思路：利用hash表，key：当前值，value：索引\n解题方法：遍历数组时，查询hash表中，是否存在target - nums[i]。\n若有，返回当前索引和存在的key的value；\n若不存在，则将当前值和索引存入hash表中\npython中的字典就是天然hash表；c++中的unorder_map；\nJava中`HashMap<Integer,Integer> hm = new HashMap<Integer,Integer>(); `\n\n代码如下：\n``` python\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        nums_hash = {}\n        for each in range(len(nums)):\n            dif = target - nums[each]\n            if dif in nums_hash:\n                return [nums_hash[dif], each]\n            else:\n                nums_hash[nums[each]] = each\n```\n\n#### 3. 总结/分类\n数据结构的巧妙利用","source":"_posts/Leetcode-1-两数之和（Two-Sum）.md","raw":"---\ntitle: Leetcode -1 两数之和（Two Sum）\ncopyright: true\ndate: 2019-04-01 13:57:26\ntags:\n - leetcode\ncategories: 学习\n---\n\n#### 1. [题目](https://leetcode-cn.com/problems/two-sum/)\n> 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。\n> 你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。\n> 示例:\n> 给定 nums = [2, 7, 11, 15], target = 9\n> 因为 nums[0] + nums[1] = 2 + 7 = 9\n> 所以返回 [0, 1]\n\n#### 2. 解题思路\n##### 2.1 朴素解法（暴力遍历）\n通过两次循环，每次循环遍历列表，这种算法的时间复杂度是 `O(n^2)`\n\n##### 2.2 哈希存储\n思路：利用hash表，key：当前值，value：索引\n解题方法：遍历数组时，查询hash表中，是否存在target - nums[i]。\n若有，返回当前索引和存在的key的value；\n若不存在，则将当前值和索引存入hash表中\npython中的字典就是天然hash表；c++中的unorder_map；\nJava中`HashMap<Integer,Integer> hm = new HashMap<Integer,Integer>(); `\n\n代码如下：\n``` python\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        nums_hash = {}\n        for each in range(len(nums)):\n            dif = target - nums[each]\n            if dif in nums_hash:\n                return [nums_hash[dif], each]\n            else:\n                nums_hash[nums[each]] = each\n```\n\n#### 3. 总结/分类\n数据结构的巧妙利用","slug":"Leetcode-1-两数之和（Two-Sum）","published":1,"updated":"2019-04-01T05:58:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclkl000c6y2h7igb6ey2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h4 id=\"1-题目\"><a class=\"markdownIt-Anchor\" href=\"#1-题目\"></a> 1. <a href=\"https://leetcode-cn.com/problems/two-sum/\">题目</a></h4>\n<blockquote>\n<p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。<br />\n你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。<br />\n示例:<br />\n给定 nums = [2, 7, 11, 15], target = 9<br />\n因为 nums[0] + nums[1] = 2 + 7 = 9<br />\n所以返回 [0, 1]</p>\n</blockquote>\n<h4 id=\"2-解题思路\"><a class=\"markdownIt-Anchor\" href=\"#2-解题思路\"></a> 2. 解题思路</h4>\n<h5 id=\"21-朴素解法暴力遍历\"><a class=\"markdownIt-Anchor\" href=\"#21-朴素解法暴力遍历\"></a> 2.1 朴素解法（暴力遍历）</h5>\n<p>通过两次循环，每次循环遍历列表，这种算法的时间复杂度是 <code>O(n^2)</code></p>\n<h5 id=\"22-哈希存储\"><a class=\"markdownIt-Anchor\" href=\"#22-哈希存储\"></a> 2.2 哈希存储</h5>\n<p>思路：利用hash表，key：当前值，value：索引<br />\n解题方法：遍历数组时，查询hash表中，是否存在target - nums[i]。<br />\n若有，返回当前索引和存在的key的value；<br />\n若不存在，则将当前值和索引存入hash表中<br />\npython中的字典就是天然hash表；c++中的unorder_map；<br />\nJava中<code>HashMap&lt;Integer,Integer&gt; hm = new HashMap&lt;Integer,Integer&gt;();</code></p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">twoSum</span><span class=\"params\">(self, nums: List[int], target: int)</span> -&gt; List[int]:</span></span><br><span class=\"line\">        nums_hash = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> range(len(nums)):</span><br><span class=\"line\">            dif = target - nums[each]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dif <span class=\"keyword\">in</span> nums_hash:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [nums_hash[dif], each]</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                nums_hash[nums[each]] = each</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-总结分类\"><a class=\"markdownIt-Anchor\" href=\"#3-总结分类\"></a> 3. 总结/分类</h4>\n<p>数据结构的巧妙利用</p>\n","site":{"data":{}},"length":686,"excerpt":"","more":"<h4 id=\"1-题目\"><a class=\"markdownIt-Anchor\" href=\"#1-题目\"></a> 1. <a href=\"https://leetcode-cn.com/problems/two-sum/\">题目</a></h4>\n<blockquote>\n<p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。<br />\n你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。<br />\n示例:<br />\n给定 nums = [2, 7, 11, 15], target = 9<br />\n因为 nums[0] + nums[1] = 2 + 7 = 9<br />\n所以返回 [0, 1]</p>\n</blockquote>\n<h4 id=\"2-解题思路\"><a class=\"markdownIt-Anchor\" href=\"#2-解题思路\"></a> 2. 解题思路</h4>\n<h5 id=\"21-朴素解法暴力遍历\"><a class=\"markdownIt-Anchor\" href=\"#21-朴素解法暴力遍历\"></a> 2.1 朴素解法（暴力遍历）</h5>\n<p>通过两次循环，每次循环遍历列表，这种算法的时间复杂度是 <code>O(n^2)</code></p>\n<h5 id=\"22-哈希存储\"><a class=\"markdownIt-Anchor\" href=\"#22-哈希存储\"></a> 2.2 哈希存储</h5>\n<p>思路：利用hash表，key：当前值，value：索引<br />\n解题方法：遍历数组时，查询hash表中，是否存在target - nums[i]。<br />\n若有，返回当前索引和存在的key的value；<br />\n若不存在，则将当前值和索引存入hash表中<br />\npython中的字典就是天然hash表；c++中的unorder_map；<br />\nJava中<code>HashMap&lt;Integer,Integer&gt; hm = new HashMap&lt;Integer,Integer&gt;();</code></p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">twoSum</span><span class=\"params\">(self, nums: List[int], target: int)</span> -&gt; List[int]:</span></span><br><span class=\"line\">        nums_hash = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> range(len(nums)):</span><br><span class=\"line\">            dif = target - nums[each]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dif <span class=\"keyword\">in</span> nums_hash:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [nums_hash[dif], each]</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                nums_hash[nums[each]] = each</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-总结分类\"><a class=\"markdownIt-Anchor\" href=\"#3-总结分类\"></a> 3. 总结/分类</h4>\n<p>数据结构的巧妙利用</p>\n"},{"title":"LR 机器学习复习笔记-1","mathjax":true,"toc":true,"date":"2019-03-14T02:39:00.000Z","_content":"\n\n\n#### 1. 基本原理\n\n<!--more-->\n\n逻辑斯特回归，Logistic Regression，二分类问题\n\n+ 算法性质：他的输出永远在0到1之间\n+ 适用情况：标签y取离散值\n+ 如何拟合参数的：\n  + 将根据参数得到的计算值映射到0-1区间\n\n#### 2. 推导公式\n\n训练集：$ { ( x ^ {  ( 1 )  } ,y ^ { ( 2 )  } ) , ( x ^ { ( 1 ) },y ^ { ( 2 ) } ),...,( x ^ { ( m ) },y ^ { ( m ) } ) } $\n\n数据范围：$  x \\in [ x_0 , x_1 , ... , x_n ] ^T , y \\in { \\{0,1\\} } ​$ \n\nLR映射函数 sigmoid :  $    h_\\theta(x) = \\dfrac{ 1 } { 1+e^{ - \\theta^T x} } ​$ \n\n损失函数：$Cost(h_\\theta(x),y) = -y \\log(h_\\theta( x ) )  - (1-y) \\log(1-h_\\theta(x)  )$ \n\n> PS:为什么不用线性模型的平方和（MSE）\n>\n> 答：将平方和带入 $ h_\\theta(x) $  会得到一个非凸函数（non-convexfunction），非凸函数影响梯度随机算法寻找全局最小值\n\n代价函数：$ J(\\theta)= \\dfrac{ 1 } { m } \\sum^m_{ i=1 }  Cost(h_\\theta(x^{ (i ) } ) - y ^ { ( i ) } ) $\n\n> 代价函数与损失函数关系：个体与总体的关系\n\n\n\n#### 3. 代价函数代码\n\n```python\nimport numpy as np\ndef cost(theta, X, y)：\n\ttheta = np.matrix(theta)\n    X = np.matrix(X)\n    y = np.matrix(y)\n    first = np.multiply(-y, np.log(sigmoid(X*theta.T)))\n    second = np,multiply(1-y,np.log(1-sigmoid(X*theta.T)))\n    return np.sum(first-second)/(len(X))\n    \n```\n\n\n\n#### 4. 如何求得使代价函数最小的参数\n\n**梯度下降算法**: $repeat  { \\{  \\theta_ j:= \\theta_j - \\alpha \\frac { \\partial } { \\partial_{ \\theta_j } } J (\\theta) \\}  } ;​ $\n\n$ Want \\min _\\theta J(\\theta) ​ $:\n\n$ repeat  { \\{  \\theta_ j:= \\theta_j - \\alpha \\frac{ 1 } { m } \\sum_{ i=1 }^m  (h_\\theta( x ^ { i } )  - y^{ ( i ) } ) }  x_j^ { ( i ) } $\n\n\n\n\n\n#### 5. 如何理解梯度下降\n\n参考这篇文章：[深入浅出--梯度下降法及其实现](https://www.jianshu.com/p/c7e642877b0e)\n\n复习的时候脑子一时短路，想不明白梯度下降的原理了\n\n\n\n#### 6. 面试常常问到的问题\n\n后面再补","source":"_posts/LR-机器学习复习笔记-1.md","raw":"---\ntitle: LR 机器学习复习笔记-1\ntags: \n- 机器学习\n- 面试复习\ncategories: [学习]\nmathjax:  true\ntoc: true\ndate: 2019-03-14 10:39:00\n---\n\n\n\n#### 1. 基本原理\n\n<!--more-->\n\n逻辑斯特回归，Logistic Regression，二分类问题\n\n+ 算法性质：他的输出永远在0到1之间\n+ 适用情况：标签y取离散值\n+ 如何拟合参数的：\n  + 将根据参数得到的计算值映射到0-1区间\n\n#### 2. 推导公式\n\n训练集：$ { ( x ^ {  ( 1 )  } ,y ^ { ( 2 )  } ) , ( x ^ { ( 1 ) },y ^ { ( 2 ) } ),...,( x ^ { ( m ) },y ^ { ( m ) } ) } $\n\n数据范围：$  x \\in [ x_0 , x_1 , ... , x_n ] ^T , y \\in { \\{0,1\\} } ​$ \n\nLR映射函数 sigmoid :  $    h_\\theta(x) = \\dfrac{ 1 } { 1+e^{ - \\theta^T x} } ​$ \n\n损失函数：$Cost(h_\\theta(x),y) = -y \\log(h_\\theta( x ) )  - (1-y) \\log(1-h_\\theta(x)  )$ \n\n> PS:为什么不用线性模型的平方和（MSE）\n>\n> 答：将平方和带入 $ h_\\theta(x) $  会得到一个非凸函数（non-convexfunction），非凸函数影响梯度随机算法寻找全局最小值\n\n代价函数：$ J(\\theta)= \\dfrac{ 1 } { m } \\sum^m_{ i=1 }  Cost(h_\\theta(x^{ (i ) } ) - y ^ { ( i ) } ) $\n\n> 代价函数与损失函数关系：个体与总体的关系\n\n\n\n#### 3. 代价函数代码\n\n```python\nimport numpy as np\ndef cost(theta, X, y)：\n\ttheta = np.matrix(theta)\n    X = np.matrix(X)\n    y = np.matrix(y)\n    first = np.multiply(-y, np.log(sigmoid(X*theta.T)))\n    second = np,multiply(1-y,np.log(1-sigmoid(X*theta.T)))\n    return np.sum(first-second)/(len(X))\n    \n```\n\n\n\n#### 4. 如何求得使代价函数最小的参数\n\n**梯度下降算法**: $repeat  { \\{  \\theta_ j:= \\theta_j - \\alpha \\frac { \\partial } { \\partial_{ \\theta_j } } J (\\theta) \\}  } ;​ $\n\n$ Want \\min _\\theta J(\\theta) ​ $:\n\n$ repeat  { \\{  \\theta_ j:= \\theta_j - \\alpha \\frac{ 1 } { m } \\sum_{ i=1 }^m  (h_\\theta( x ^ { i } )  - y^{ ( i ) } ) }  x_j^ { ( i ) } $\n\n\n\n\n\n#### 5. 如何理解梯度下降\n\n参考这篇文章：[深入浅出--梯度下降法及其实现](https://www.jianshu.com/p/c7e642877b0e)\n\n复习的时候脑子一时短路，想不明白梯度下降的原理了\n\n\n\n#### 6. 面试常常问到的问题\n\n后面再补","slug":"LR-机器学习复习笔记-1","published":1,"updated":"2019-03-27T09:12:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclkn000f6y2h71bm58m2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h4 id=\"1-基本原理\"><a class=\"markdownIt-Anchor\" href=\"#1-基本原理\"></a> 1. 基本原理</h4>\n<a id=\"more\"></a>\n<p>逻辑斯特回归，Logistic Regression，二分类问题</p>\n<ul>\n<li>算法性质：他的输出永远在0到1之间</li>\n<li>适用情况：标签y取离散值</li>\n<li>如何拟合参数的：\n<ul>\n<li>将根据参数得到的计算值映射到0-1区间</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-推导公式\"><a class=\"markdownIt-Anchor\" href=\"#2-推导公式\"></a> 2. 推导公式</h4>\n<p>训练集：$ { ( x ^ {  ( 1 )  } ,y ^ { ( 2 )  } ) , ( x ^ { ( 1 ) },y ^ { ( 2 ) } ),…,( x ^ { ( m ) },y ^ { ( m ) } ) } $</p>\n<p>数据范围：$  x \\in [ x_0 , x_1 , … , x_n ] ^T , y \\in { {0,1} } ​$</p>\n<p>LR映射函数 sigmoid :  $    h_\\theta(x) = \\dfrac{ 1 } { 1+e^{ - \\theta^T x} } ​$</p>\n<p>损失函数：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo stretchy=\"false\">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Cost(h_\\theta(x),y) = -y \\log(h_\\theta( x ) )  - (1-y) \\log(1-h_\\theta(x)  )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></p>\n<blockquote>\n<p>PS:为什么不用线性模型的平方和（MSE）</p>\n<p>答：将平方和带入 $ h_\\theta(x) $  会得到一个非凸函数（non-convexfunction），非凸函数影响梯度随机算法寻找全局最小值</p>\n</blockquote>\n<p>代价函数：$ J(\\theta)= \\dfrac{ 1 } { m } \\sum^m_{ i=1 }  Cost(h_\\theta(x^{ (i ) } ) - y ^ { ( i ) } ) $</p>\n<blockquote>\n<p>代价函数与损失函数关系：个体与总体的关系</p>\n</blockquote>\n<h4 id=\"3-代价函数代码\"><a class=\"markdownIt-Anchor\" href=\"#3-代价函数代码\"></a> 3. 代价函数代码</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cost</span><span class=\"params\">(theta, X, y)</span>：</span></span><br><span class=\"line\">\ttheta = np.matrix(theta)</span><br><span class=\"line\">    X = np.matrix(X)</span><br><span class=\"line\">    y = np.matrix(y)</span><br><span class=\"line\">    first = np.multiply(-y, np.log(sigmoid(X*theta.T)))</span><br><span class=\"line\">    second = np,multiply(<span class=\"number\">1</span>-y,np.log(<span class=\"number\">1</span>-sigmoid(X*theta.T)))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.sum(first-second)/(len(X))</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-如何求得使代价函数最小的参数\"><a class=\"markdownIt-Anchor\" href=\"#4-如何求得使代价函数最小的参数\"></a> 4. 如何求得使代价函数最小的参数</h4>\n<p><strong>梯度下降算法</strong>: $repeat  { {  \\theta_ j:= \\theta_j - \\alpha \\frac { \\partial } { \\partial_{ \\theta_j } } J (\\theta) }  } ;​ $</p>\n<p>$ Want \\min _\\theta J(\\theta) ​ $:</p>\n<p>$ repeat  { {  \\theta_ j:= \\theta_j - \\alpha \\frac{ 1 } { m } \\sum_{ i=1 }^m  (h_\\theta( x ^ { i } )  - y^{ ( i ) } ) }  x_j^ { ( i ) } $</p>\n<h4 id=\"5-如何理解梯度下降\"><a class=\"markdownIt-Anchor\" href=\"#5-如何理解梯度下降\"></a> 5. 如何理解梯度下降</h4>\n<p>参考这篇文章：<a href=\"https://www.jianshu.com/p/c7e642877b0e\">深入浅出–梯度下降法及其实现</a></p>\n<p>复习的时候脑子一时短路，想不明白梯度下降的原理了</p>\n<h4 id=\"6-面试常常问到的问题\"><a class=\"markdownIt-Anchor\" href=\"#6-面试常常问到的问题\"></a> 6. 面试常常问到的问题</h4>\n<p>后面再补</p>\n","site":{"data":{}},"length":1137,"excerpt":"<h4 id=\"1-基本原理\"><a class=\"markdownIt-Anchor\" href=\"#1-基本原理\"></a> 1. 基本原理</h4>","more":"<p>逻辑斯特回归，Logistic Regression，二分类问题</p>\n<ul>\n<li>算法性质：他的输出永远在0到1之间</li>\n<li>适用情况：标签y取离散值</li>\n<li>如何拟合参数的：\n<ul>\n<li>将根据参数得到的计算值映射到0-1区间</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-推导公式\"><a class=\"markdownIt-Anchor\" href=\"#2-推导公式\"></a> 2. 推导公式</h4>\n<p>训练集：$ { ( x ^ {  ( 1 )  } ,y ^ { ( 2 )  } ) , ( x ^ { ( 1 ) },y ^ { ( 2 ) } ),…,( x ^ { ( m ) },y ^ { ( m ) } ) } $</p>\n<p>数据范围：$  x \\in [ x_0 , x_1 , … , x_n ] ^T , y \\in { {0,1} } ​$</p>\n<p>LR映射函数 sigmoid :  $    h_\\theta(x) = \\dfrac{ 1 } { 1+e^{ - \\theta^T x} } ​$</p>\n<p>损失函数：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo stretchy=\"false\">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Cost(h_\\theta(x),y) = -y \\log(h_\\theta( x ) )  - (1-y) \\log(1-h_\\theta(x)  )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></p>\n<blockquote>\n<p>PS:为什么不用线性模型的平方和（MSE）</p>\n<p>答：将平方和带入 $ h_\\theta(x) $  会得到一个非凸函数（non-convexfunction），非凸函数影响梯度随机算法寻找全局最小值</p>\n</blockquote>\n<p>代价函数：$ J(\\theta)= \\dfrac{ 1 } { m } \\sum^m_{ i=1 }  Cost(h_\\theta(x^{ (i ) } ) - y ^ { ( i ) } ) $</p>\n<blockquote>\n<p>代价函数与损失函数关系：个体与总体的关系</p>\n</blockquote>\n<h4 id=\"3-代价函数代码\"><a class=\"markdownIt-Anchor\" href=\"#3-代价函数代码\"></a> 3. 代价函数代码</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cost</span><span class=\"params\">(theta, X, y)</span>：</span></span><br><span class=\"line\">\ttheta = np.matrix(theta)</span><br><span class=\"line\">    X = np.matrix(X)</span><br><span class=\"line\">    y = np.matrix(y)</span><br><span class=\"line\">    first = np.multiply(-y, np.log(sigmoid(X*theta.T)))</span><br><span class=\"line\">    second = np,multiply(<span class=\"number\">1</span>-y,np.log(<span class=\"number\">1</span>-sigmoid(X*theta.T)))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.sum(first-second)/(len(X))</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-如何求得使代价函数最小的参数\"><a class=\"markdownIt-Anchor\" href=\"#4-如何求得使代价函数最小的参数\"></a> 4. 如何求得使代价函数最小的参数</h4>\n<p><strong>梯度下降算法</strong>: $repeat  { {  \\theta_ j:= \\theta_j - \\alpha \\frac { \\partial } { \\partial_{ \\theta_j } } J (\\theta) }  } ;​ $</p>\n<p>$ Want \\min _\\theta J(\\theta) ​ $:</p>\n<p>$ repeat  { {  \\theta_ j:= \\theta_j - \\alpha \\frac{ 1 } { m } \\sum_{ i=1 }^m  (h_\\theta( x ^ { i } )  - y^{ ( i ) } ) }  x_j^ { ( i ) } $</p>\n<h4 id=\"5-如何理解梯度下降\"><a class=\"markdownIt-Anchor\" href=\"#5-如何理解梯度下降\"></a> 5. 如何理解梯度下降</h4>\n<p>参考这篇文章：<a href=\"https://www.jianshu.com/p/c7e642877b0e\">深入浅出–梯度下降法及其实现</a></p>\n<p>复习的时候脑子一时短路，想不明白梯度下降的原理了</p>\n<h4 id=\"6-面试常常问到的问题\"><a class=\"markdownIt-Anchor\" href=\"#6-面试常常问到的问题\"></a> 6. 面试常常问到的问题</h4>\n<p>后面再补</p>"},{"title":"Leetcode-2 两数相加（Add Two Numbers）","copyright":true,"date":"2019-04-01T07:11:42.000Z","_content":"\n#### 1. [题目](https://leetcode-cn.com/problems/add-two-numbers/submissions/)\n>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</br>  \n>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</br>  \n>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。\n>示例：\n>输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n>输出：7 -> 0 -> 8\n>原因：342 + 465 = 807\n\n\n#### 2. 解题思路\n&nbsp; &nbsp; &nbsp; &emsp; 简单题，注意链表操作和进位即可\n``` python\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:\n\n        head = ans = ListNode(0)\n        is_carry = False\n        while l1 != None and l2 != None:\n\n            num = l1.val + l2.val\n            if is_carry:\n                num = num + 1\n            if num >= 10:\n                num = num % 10\n                is_carry = True\n            else:\n                is_carry = False\n            ans.next = ListNode(num)\n            ans = ans.next\n            l1 = l1.next\n            l2 = l2.next\n\n        while l1 != None:\n            if is_carry:\n                if l1.val + 1 >= 10:\n                    ans.next = ListNode((l1.val + 1) % 10)\n                    is_carry = True\n                else:\n                    ans.next = ListNode(l1.val + 1)\n                    is_carry = False\n\n            else:\n                ans.next = ListNode(l1.val)\n            l1 = l1.next\n            ans = ans.next\n\n        while l2 != None:\n            if is_carry:\n                if l2.val + 1 >= 10:\n                    ans.next = ListNode((l2.val + 1) % 10)\n                    is_carry = True\n                else:\n                    ans.next = ListNode(l2.val + 1)\n                    is_carry = False\n            else:\n                ans.next = ListNode(l2.val)\n            l2 = l2.next\n            ans = ans.next\n\n        if is_carry:\n            ans.next = ListNode(1)\n            is_carry = False\n            ans = ans.next\n\n        res = []\n        while head != None:\n            res.append(head.val)\n            head = head.next\n\n        # return \"\".join([\"\"+str(each) for each in res])[:-1]\n        return res[1:]\n            \n            \n            \n```\n#### 3. 总结/分类\n&emsp; 链表操作","source":"_posts/Leetcode-2-两数相加（Add-Two-Numbers）.md","raw":"---\ntitle: Leetcode-2 两数相加（Add Two Numbers）\ncopyright: true\ndate: 2019-04-01 15:11:42\ntags: leetcode\ncategories: 学习\n---\n\n#### 1. [题目](https://leetcode-cn.com/problems/add-two-numbers/submissions/)\n>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</br>  \n>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</br>  \n>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。\n>示例：\n>输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n>输出：7 -> 0 -> 8\n>原因：342 + 465 = 807\n\n\n#### 2. 解题思路\n&nbsp; &nbsp; &nbsp; &emsp; 简单题，注意链表操作和进位即可\n``` python\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:\n\n        head = ans = ListNode(0)\n        is_carry = False\n        while l1 != None and l2 != None:\n\n            num = l1.val + l2.val\n            if is_carry:\n                num = num + 1\n            if num >= 10:\n                num = num % 10\n                is_carry = True\n            else:\n                is_carry = False\n            ans.next = ListNode(num)\n            ans = ans.next\n            l1 = l1.next\n            l2 = l2.next\n\n        while l1 != None:\n            if is_carry:\n                if l1.val + 1 >= 10:\n                    ans.next = ListNode((l1.val + 1) % 10)\n                    is_carry = True\n                else:\n                    ans.next = ListNode(l1.val + 1)\n                    is_carry = False\n\n            else:\n                ans.next = ListNode(l1.val)\n            l1 = l1.next\n            ans = ans.next\n\n        while l2 != None:\n            if is_carry:\n                if l2.val + 1 >= 10:\n                    ans.next = ListNode((l2.val + 1) % 10)\n                    is_carry = True\n                else:\n                    ans.next = ListNode(l2.val + 1)\n                    is_carry = False\n            else:\n                ans.next = ListNode(l2.val)\n            l2 = l2.next\n            ans = ans.next\n\n        if is_carry:\n            ans.next = ListNode(1)\n            is_carry = False\n            ans = ans.next\n\n        res = []\n        while head != None:\n            res.append(head.val)\n            head = head.next\n\n        # return \"\".join([\"\"+str(each) for each in res])[:-1]\n        return res[1:]\n            \n            \n            \n```\n#### 3. 总结/分类\n&emsp; 链表操作","slug":"Leetcode-2-两数相加（Add-Two-Numbers）","published":1,"updated":"2019-04-02T02:09:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclkp000i6y2he0s88dvt","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h4 id=\"1-题目\"><a class=\"markdownIt-Anchor\" href=\"#1-题目\"></a> 1. <a href=\"https://leetcode-cn.com/problems/add-two-numbers/submissions/\">题目</a></h4>\n<blockquote>\n<p>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</br><br />\n如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</br><br />\n您可以假设除了数字 0 之外，这两个数都不会以 0 开头。<br />\n示例：<br />\n输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br />\n输出：7 -&gt; 0 -&gt; 8<br />\n原因：342 + 465 = 807</p>\n</blockquote>\n<h4 id=\"2-解题思路\"><a class=\"markdownIt-Anchor\" href=\"#2-解题思路\"></a> 2. 解题思路</h4>\n<p>        简单题，注意链表操作和进位即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"># class ListNode:</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, x):</span></span><br><span class=\"line\"><span class=\"comment\">#         self.val = x</span></span><br><span class=\"line\"><span class=\"comment\">#         self.next = None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addTwoNumbers</span><span class=\"params\">(self, l1: ListNode, l2: ListNode)</span> -&gt; ListNode:</span></span><br><span class=\"line\"></span><br><span class=\"line\">        head = ans = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">        is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> l1 != <span class=\"literal\">None</span> <span class=\"keyword\">and</span> l2 != <span class=\"literal\">None</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">            num = l1.val + l2.val</span><br><span class=\"line\">            <span class=\"keyword\">if</span> is_carry:</span><br><span class=\"line\">                num = num + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> num &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                num = num % <span class=\"number\">10</span></span><br><span class=\"line\">                is_carry = <span class=\"literal\">True</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\">            ans.next = ListNode(num)</span><br><span class=\"line\">            ans = ans.next</span><br><span class=\"line\">            l1 = l1.next</span><br><span class=\"line\">            l2 = l2.next</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> l1 != <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> is_carry:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> l1.val + <span class=\"number\">1</span> &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    ans.next = ListNode((l1.val + <span class=\"number\">1</span>) % <span class=\"number\">10</span>)</span><br><span class=\"line\">                    is_carry = <span class=\"literal\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    ans.next = ListNode(l1.val + <span class=\"number\">1</span>)</span><br><span class=\"line\">                    is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                ans.next = ListNode(l1.val)</span><br><span class=\"line\">            l1 = l1.next</span><br><span class=\"line\">            ans = ans.next</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> l2 != <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> is_carry:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> l2.val + <span class=\"number\">1</span> &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    ans.next = ListNode((l2.val + <span class=\"number\">1</span>) % <span class=\"number\">10</span>)</span><br><span class=\"line\">                    is_carry = <span class=\"literal\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    ans.next = ListNode(l2.val + <span class=\"number\">1</span>)</span><br><span class=\"line\">                    is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                ans.next = ListNode(l2.val)</span><br><span class=\"line\">            l2 = l2.next</span><br><span class=\"line\">            ans = ans.next</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> is_carry:</span><br><span class=\"line\">            ans.next = ListNode(<span class=\"number\">1</span>)</span><br><span class=\"line\">            is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\">            ans = ans.next</span><br><span class=\"line\"></span><br><span class=\"line\">        res = []</span><br><span class=\"line\">        <span class=\"keyword\">while</span> head != <span class=\"literal\">None</span>:</span><br><span class=\"line\">            res.append(head.val)</span><br><span class=\"line\">            head = head.next</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># return \"\".join([\"\"+str(each) for each in res])[:-1]</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[<span class=\"number\">1</span>:]</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-总结分类\"><a class=\"markdownIt-Anchor\" href=\"#3-总结分类\"></a> 3. 总结/分类</h4>\n<p>  链表操作</p>\n","site":{"data":{}},"length":1261,"excerpt":"","more":"<h4 id=\"1-题目\"><a class=\"markdownIt-Anchor\" href=\"#1-题目\"></a> 1. <a href=\"https://leetcode-cn.com/problems/add-two-numbers/submissions/\">题目</a></h4>\n<blockquote>\n<p>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</br><br />\n如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</br><br />\n您可以假设除了数字 0 之外，这两个数都不会以 0 开头。<br />\n示例：<br />\n输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br />\n输出：7 -&gt; 0 -&gt; 8<br />\n原因：342 + 465 = 807</p>\n</blockquote>\n<h4 id=\"2-解题思路\"><a class=\"markdownIt-Anchor\" href=\"#2-解题思路\"></a> 2. 解题思路</h4>\n<p>        简单题，注意链表操作和进位即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"># class ListNode:</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, x):</span></span><br><span class=\"line\"><span class=\"comment\">#         self.val = x</span></span><br><span class=\"line\"><span class=\"comment\">#         self.next = None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addTwoNumbers</span><span class=\"params\">(self, l1: ListNode, l2: ListNode)</span> -&gt; ListNode:</span></span><br><span class=\"line\"></span><br><span class=\"line\">        head = ans = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">        is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> l1 != <span class=\"literal\">None</span> <span class=\"keyword\">and</span> l2 != <span class=\"literal\">None</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">            num = l1.val + l2.val</span><br><span class=\"line\">            <span class=\"keyword\">if</span> is_carry:</span><br><span class=\"line\">                num = num + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> num &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                num = num % <span class=\"number\">10</span></span><br><span class=\"line\">                is_carry = <span class=\"literal\">True</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\">            ans.next = ListNode(num)</span><br><span class=\"line\">            ans = ans.next</span><br><span class=\"line\">            l1 = l1.next</span><br><span class=\"line\">            l2 = l2.next</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> l1 != <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> is_carry:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> l1.val + <span class=\"number\">1</span> &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    ans.next = ListNode((l1.val + <span class=\"number\">1</span>) % <span class=\"number\">10</span>)</span><br><span class=\"line\">                    is_carry = <span class=\"literal\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    ans.next = ListNode(l1.val + <span class=\"number\">1</span>)</span><br><span class=\"line\">                    is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                ans.next = ListNode(l1.val)</span><br><span class=\"line\">            l1 = l1.next</span><br><span class=\"line\">            ans = ans.next</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> l2 != <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> is_carry:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> l2.val + <span class=\"number\">1</span> &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    ans.next = ListNode((l2.val + <span class=\"number\">1</span>) % <span class=\"number\">10</span>)</span><br><span class=\"line\">                    is_carry = <span class=\"literal\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    ans.next = ListNode(l2.val + <span class=\"number\">1</span>)</span><br><span class=\"line\">                    is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                ans.next = ListNode(l2.val)</span><br><span class=\"line\">            l2 = l2.next</span><br><span class=\"line\">            ans = ans.next</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> is_carry:</span><br><span class=\"line\">            ans.next = ListNode(<span class=\"number\">1</span>)</span><br><span class=\"line\">            is_carry = <span class=\"literal\">False</span></span><br><span class=\"line\">            ans = ans.next</span><br><span class=\"line\"></span><br><span class=\"line\">        res = []</span><br><span class=\"line\">        <span class=\"keyword\">while</span> head != <span class=\"literal\">None</span>:</span><br><span class=\"line\">            res.append(head.val)</span><br><span class=\"line\">            head = head.next</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># return \"\".join([\"\"+str(each) for each in res])[:-1]</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[<span class=\"number\">1</span>:]</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-总结分类\"><a class=\"markdownIt-Anchor\" href=\"#3-总结分类\"></a> 3. 总结/分类</h4>\n<p>  链表操作</p>\n"},{"title":"leetcode - 904 水果成篮","date":"2019-03-13T06:56:44.000Z","_content":"\n\n\n---\n\n>在一排树中，第 i 棵树产生 tree[i] 型的水果。\n>你可以从你选择的任何树开始，然后重复执行以下步骤：\n>\n<!--more-->\n>把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。\n>移动到当前树右侧的下一棵树。如果右边没有树，就停下来。\n>请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。\n>\n>你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。\n>用这个程序你能收集的水果总量是多少？\n>\n>>示例 1：\n>>\n>>输入：[1,2,1]\n>>输出：3\n>>解释：我们可以收集 [1,2,1]。\n>>示例 2：\n>\n>>输入：[0,1,2,2]\n>>输出：3\n>>解释：我们可以收集 [1,2,2].\n>>如果我们从第一棵树开始，我们将只能收集到 [0, 1]。\n>>示例 3：\n>\n>>输入：[1,2,3,2,2]\n>>输出：4\n>>解释：我们可以收集 [2,3,2,2].\n>>如果我们从第一棵树开始，我们将只能收集到 [1, 2]。\n>>示例 4：\n>\n>>输入：[3,3,3,1,2,1,1,2,3,3,4]\n>>输出：5\n>>解释：我们可以收集 [1,2,1,1,2].\n>>如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 个水果。\n\n### 解题思路\n这题其实要求其实很简单，就是找出数组中长度最大的连续由2种元素构成的子数组，返回这个子数组的长度。但由于本题有时间限制，只是朴素的解法会出现超时的情况，需要对实现进行一定的优化。\n\n参考花花酱的hashtable+ sliding windows\n![花花酱解法](https://upload-images.jianshu.io/upload_images/1016401-daaa3408bc498df7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620)\n\n```c++\nclass Solution {\npublic:\n// 朴素解法\n    int totalFruit(vector<int>& tree) {\n        int size = tree.size();\n        int fruit[size] = {0};\n        int max =0;\n        \n        for(int i = 0; i< size;i++){\n            int number = 1;\n            int type1 = -1;\n            // 第一种水果\n            type1 = tree[i];\n            int type2 = -1;\n            for(int j = i+1; j<size ;j++){\n                // 第二种水果\n                if(tree[j]!=tree[i]){\n                    // type2 is null\n                    if(type2 < 0){\n                        type2 = tree[j];\n                        number++;\n                    }else{\n                        // 出现第三种水果，跳出循环\n                        if(tree[j] != type2){\n                            break;\n                        }else{\n                            number++;\n                        }\n                    }\n                    \n                }else{\n                    number++;\n                }\n            }\n            fruit[i] = number;\n            if(number> max)\n                max = number;\n        }\n        return max;\n    }\n    \n   \npublic:\n// by [花花酱] (https://zxi.mytechroad.com/blog/hashtable/leetcode-904-fruit-into-baskets/)\n\n  int totalFruit(vector<int>& tree) {        \n    map<int, int> idx; // {fruit -> last_index}\n    int ans = 0;\n    int cur = 0;\n    for (int i = 0; i < tree.size(); ++i) {\n      int f = tree[i]; // 取一种水果\n      if (!idx.count(f)) { // 返回值只有0或1\n         // !idx.count(f) ==  1,即出现某种新水果时\n        if (idx.size() == 2) { // 如果已经有了两种水果，再出现第三种水果的时候\n          auto it1 = begin(idx); \n          auto it2 = next(it1);\n          if (it1->second > it2->second) swap(it1, it2);\n          // 找到之前两种水果中，下标最小的水果，开始新的窗口\n          cur = i - it1->second - 1; // cur存新窗口的大小       \n          idx.erase(it1); // 删除下标较小的水果\n        }       \n      }   \n      // 添加新水果的下标信息\n      idx[f] = i;  \n      // 比较新窗口和上一个窗口的大小\n      ans = max(++cur, ans);\n    }\n    return ans;\n  }\n\n};\n```\n\n","source":"_posts/leetcode-904-水果成篮.md","raw":"---\ntitle: leetcode - 904 水果成篮\ntags:\n- leetcode \n- 刷题笔记\ndate: 2019-03-13 14:56:44\n---\n\n\n\n---\n\n>在一排树中，第 i 棵树产生 tree[i] 型的水果。\n>你可以从你选择的任何树开始，然后重复执行以下步骤：\n>\n<!--more-->\n>把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。\n>移动到当前树右侧的下一棵树。如果右边没有树，就停下来。\n>请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。\n>\n>你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。\n>用这个程序你能收集的水果总量是多少？\n>\n>>示例 1：\n>>\n>>输入：[1,2,1]\n>>输出：3\n>>解释：我们可以收集 [1,2,1]。\n>>示例 2：\n>\n>>输入：[0,1,2,2]\n>>输出：3\n>>解释：我们可以收集 [1,2,2].\n>>如果我们从第一棵树开始，我们将只能收集到 [0, 1]。\n>>示例 3：\n>\n>>输入：[1,2,3,2,2]\n>>输出：4\n>>解释：我们可以收集 [2,3,2,2].\n>>如果我们从第一棵树开始，我们将只能收集到 [1, 2]。\n>>示例 4：\n>\n>>输入：[3,3,3,1,2,1,1,2,3,3,4]\n>>输出：5\n>>解释：我们可以收集 [1,2,1,1,2].\n>>如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 个水果。\n\n### 解题思路\n这题其实要求其实很简单，就是找出数组中长度最大的连续由2种元素构成的子数组，返回这个子数组的长度。但由于本题有时间限制，只是朴素的解法会出现超时的情况，需要对实现进行一定的优化。\n\n参考花花酱的hashtable+ sliding windows\n![花花酱解法](https://upload-images.jianshu.io/upload_images/1016401-daaa3408bc498df7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620)\n\n```c++\nclass Solution {\npublic:\n// 朴素解法\n    int totalFruit(vector<int>& tree) {\n        int size = tree.size();\n        int fruit[size] = {0};\n        int max =0;\n        \n        for(int i = 0; i< size;i++){\n            int number = 1;\n            int type1 = -1;\n            // 第一种水果\n            type1 = tree[i];\n            int type2 = -1;\n            for(int j = i+1; j<size ;j++){\n                // 第二种水果\n                if(tree[j]!=tree[i]){\n                    // type2 is null\n                    if(type2 < 0){\n                        type2 = tree[j];\n                        number++;\n                    }else{\n                        // 出现第三种水果，跳出循环\n                        if(tree[j] != type2){\n                            break;\n                        }else{\n                            number++;\n                        }\n                    }\n                    \n                }else{\n                    number++;\n                }\n            }\n            fruit[i] = number;\n            if(number> max)\n                max = number;\n        }\n        return max;\n    }\n    \n   \npublic:\n// by [花花酱] (https://zxi.mytechroad.com/blog/hashtable/leetcode-904-fruit-into-baskets/)\n\n  int totalFruit(vector<int>& tree) {        \n    map<int, int> idx; // {fruit -> last_index}\n    int ans = 0;\n    int cur = 0;\n    for (int i = 0; i < tree.size(); ++i) {\n      int f = tree[i]; // 取一种水果\n      if (!idx.count(f)) { // 返回值只有0或1\n         // !idx.count(f) ==  1,即出现某种新水果时\n        if (idx.size() == 2) { // 如果已经有了两种水果，再出现第三种水果的时候\n          auto it1 = begin(idx); \n          auto it2 = next(it1);\n          if (it1->second > it2->second) swap(it1, it2);\n          // 找到之前两种水果中，下标最小的水果，开始新的窗口\n          cur = i - it1->second - 1; // cur存新窗口的大小       \n          idx.erase(it1); // 删除下标较小的水果\n        }       \n      }   \n      // 添加新水果的下标信息\n      idx[f] = i;  \n      // 比较新窗口和上一个窗口的大小\n      ans = max(++cur, ans);\n    }\n    return ans;\n  }\n\n};\n```\n\n","slug":"leetcode-904-水果成篮","published":1,"updated":"2019-04-01T02:14:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclkr000l6y2h4p5wcsgx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><hr />\n<blockquote>\n<p>在一排树中，第 i 棵树产生 tree[i] 型的水果。<br />\n你可以从你选择的任何树开始，然后重复执行以下步骤：</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。<br />\n移动到当前树右侧的下一棵树。如果右边没有树，就停下来。<br />\n请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。</p>\n<p>你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。<br />\n用这个程序你能收集的水果总量是多少？</p>\n<blockquote>\n<p>示例 1：</p>\n<p>输入：[1,2,1]<br />\n输出：3<br />\n解释：我们可以收集 [1,2,1]。<br />\n示例 2：</p>\n</blockquote>\n<blockquote>\n<p>输入：[0,1,2,2]<br />\n输出：3<br />\n解释：我们可以收集 [1,2,2].<br />\n如果我们从第一棵树开始，我们将只能收集到 [0, 1]。<br />\n示例 3：</p>\n</blockquote>\n<blockquote>\n<p>输入：[1,2,3,2,2]<br />\n输出：4<br />\n解释：我们可以收集 [2,3,2,2].<br />\n如果我们从第一棵树开始，我们将只能收集到 [1, 2]。<br />\n示例 4：</p>\n</blockquote>\n<blockquote>\n<p>输入：[3,3,3,1,2,1,1,2,3,3,4]<br />\n输出：5<br />\n解释：我们可以收集 [1,2,1,1,2].<br />\n如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 个水果。</p>\n</blockquote>\n</blockquote>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\"></a> 解题思路</h3>\n<p>这题其实要求其实很简单，就是找出数组中长度最大的连续由2种元素构成的子数组，返回这个子数组的长度。但由于本题有时间限制，只是朴素的解法会出现超时的情况，需要对实现进行一定的优化。</p>\n<p>参考花花酱的hashtable+ sliding windows<br />\n<img src=\"https://upload-images.jianshu.io/upload_images/1016401-daaa3408bc498df7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620\" alt=\"花花酱解法\" /></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"><span class=\"comment\">// 朴素解法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">totalFruit</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&amp; tree)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> <span class=\"built_in\">size</span> = tree.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> fruit[<span class=\"built_in\">size</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> <span class=\"built_in\">max</span> =<span class=\"number\">0</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt; <span class=\"built_in\">size</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> number = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> type1 = <span class=\"number\">-1</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 第一种水果</span></span><br><span class=\"line\">            type1 = tree[i];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> type2 = <span class=\"number\">-1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span>; j&lt;<span class=\"built_in\">size</span> ;j++)&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 第二种水果</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tree[j]!=tree[i])&#123;</span><br><span class=\"line\">                    <span class=\"comment\">// type2 is null</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(type2 &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                        type2 = tree[j];</span><br><span class=\"line\">                        number++;</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 出现第三种水果，跳出循环</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tree[j] != type2)&#123;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                            number++;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    number++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            fruit[i] = number;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(number&gt; <span class=\"built_in\">max</span>)</span><br><span class=\"line\">                <span class=\"built_in\">max</span> = number;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">max</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"><span class=\"comment\">// by [花花酱] (https://zxi.mytechroad.com/blog/hashtable/leetcode-904-fruit-into-baskets/)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">totalFruit</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&amp; tree)</span> </span>&#123;        </span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt; idx; <span class=\"comment\">// &#123;fruit -&gt; last_index&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cur = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; tree.<span class=\"built_in\">size</span>(); ++i) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> f = tree[i]; <span class=\"comment\">// 取一种水果</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!idx.count(f)) &#123; <span class=\"comment\">// 返回值只有0或1</span></span><br><span class=\"line\">         <span class=\"comment\">// !idx.count(f) ==  1,即出现某种新水果时</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (idx.<span class=\"built_in\">size</span>() == <span class=\"number\">2</span>) &#123; <span class=\"comment\">// 如果已经有了两种水果，再出现第三种水果的时候</span></span><br><span class=\"line\">          <span class=\"keyword\">auto</span> it1 = <span class=\"built_in\">begin</span>(idx); </span><br><span class=\"line\">          <span class=\"keyword\">auto</span> it2 = next(it1);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (it1-&gt;second &gt; it2-&gt;second) swap(it1, it2);</span><br><span class=\"line\">          <span class=\"comment\">// 找到之前两种水果中，下标最小的水果，开始新的窗口</span></span><br><span class=\"line\">          cur = i - it1-&gt;second - <span class=\"number\">1</span>; <span class=\"comment\">// cur存新窗口的大小       </span></span><br><span class=\"line\">          idx.erase(it1); <span class=\"comment\">// 删除下标较小的水果</span></span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\">      &#125;   </span><br><span class=\"line\">      <span class=\"comment\">// 添加新水果的下标信息</span></span><br><span class=\"line\">      idx[f] = i;  </span><br><span class=\"line\">      <span class=\"comment\">// 比较新窗口和上一个窗口的大小</span></span><br><span class=\"line\">      ans = <span class=\"built_in\">max</span>(++cur, ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":1930,"excerpt":"<hr />\n<blockquote>\n<p>在一排树中，第 i 棵树产生 tree[i] 型的水果。<br />\n你可以从你选择的任何树开始，然后重复执行以下步骤：</p>\n</blockquote>","more":"<blockquote>\n<p>把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。<br />\n移动到当前树右侧的下一棵树。如果右边没有树，就停下来。<br />\n请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。</p>\n<p>你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。<br />\n用这个程序你能收集的水果总量是多少？</p>\n<blockquote>\n<p>示例 1：</p>\n<p>输入：[1,2,1]<br />\n输出：3<br />\n解释：我们可以收集 [1,2,1]。<br />\n示例 2：</p>\n</blockquote>\n<blockquote>\n<p>输入：[0,1,2,2]<br />\n输出：3<br />\n解释：我们可以收集 [1,2,2].<br />\n如果我们从第一棵树开始，我们将只能收集到 [0, 1]。<br />\n示例 3：</p>\n</blockquote>\n<blockquote>\n<p>输入：[1,2,3,2,2]<br />\n输出：4<br />\n解释：我们可以收集 [2,3,2,2].<br />\n如果我们从第一棵树开始，我们将只能收集到 [1, 2]。<br />\n示例 4：</p>\n</blockquote>\n<blockquote>\n<p>输入：[3,3,3,1,2,1,1,2,3,3,4]<br />\n输出：5<br />\n解释：我们可以收集 [1,2,1,1,2].<br />\n如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 个水果。</p>\n</blockquote>\n</blockquote>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\"></a> 解题思路</h3>\n<p>这题其实要求其实很简单，就是找出数组中长度最大的连续由2种元素构成的子数组，返回这个子数组的长度。但由于本题有时间限制，只是朴素的解法会出现超时的情况，需要对实现进行一定的优化。</p>\n<p>参考花花酱的hashtable+ sliding windows<br />\n<img src=\"https://upload-images.jianshu.io/upload_images/1016401-daaa3408bc498df7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620\" alt=\"花花酱解法\" /></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"><span class=\"comment\">// 朴素解法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">totalFruit</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&amp; tree)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> <span class=\"built_in\">size</span> = tree.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> fruit[<span class=\"built_in\">size</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> <span class=\"built_in\">max</span> =<span class=\"number\">0</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt; <span class=\"built_in\">size</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> number = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> type1 = <span class=\"number\">-1</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 第一种水果</span></span><br><span class=\"line\">            type1 = tree[i];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> type2 = <span class=\"number\">-1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span>; j&lt;<span class=\"built_in\">size</span> ;j++)&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 第二种水果</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tree[j]!=tree[i])&#123;</span><br><span class=\"line\">                    <span class=\"comment\">// type2 is null</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(type2 &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                        type2 = tree[j];</span><br><span class=\"line\">                        number++;</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 出现第三种水果，跳出循环</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tree[j] != type2)&#123;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                            number++;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    number++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            fruit[i] = number;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(number&gt; <span class=\"built_in\">max</span>)</span><br><span class=\"line\">                <span class=\"built_in\">max</span> = number;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">max</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"><span class=\"comment\">// by [花花酱] (https://zxi.mytechroad.com/blog/hashtable/leetcode-904-fruit-into-baskets/)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">totalFruit</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&amp; tree)</span> </span>&#123;        </span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt; idx; <span class=\"comment\">// &#123;fruit -&gt; last_index&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cur = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; tree.<span class=\"built_in\">size</span>(); ++i) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> f = tree[i]; <span class=\"comment\">// 取一种水果</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!idx.count(f)) &#123; <span class=\"comment\">// 返回值只有0或1</span></span><br><span class=\"line\">         <span class=\"comment\">// !idx.count(f) ==  1,即出现某种新水果时</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (idx.<span class=\"built_in\">size</span>() == <span class=\"number\">2</span>) &#123; <span class=\"comment\">// 如果已经有了两种水果，再出现第三种水果的时候</span></span><br><span class=\"line\">          <span class=\"keyword\">auto</span> it1 = <span class=\"built_in\">begin</span>(idx); </span><br><span class=\"line\">          <span class=\"keyword\">auto</span> it2 = next(it1);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (it1-&gt;second &gt; it2-&gt;second) swap(it1, it2);</span><br><span class=\"line\">          <span class=\"comment\">// 找到之前两种水果中，下标最小的水果，开始新的窗口</span></span><br><span class=\"line\">          cur = i - it1-&gt;second - <span class=\"number\">1</span>; <span class=\"comment\">// cur存新窗口的大小       </span></span><br><span class=\"line\">          idx.erase(it1); <span class=\"comment\">// 删除下标较小的水果</span></span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\">      &#125;   </span><br><span class=\"line\">      <span class=\"comment\">// 添加新水果的下标信息</span></span><br><span class=\"line\">      idx[f] = i;  </span><br><span class=\"line\">      <span class=\"comment\">// 比较新窗口和上一个窗口的大小</span></span><br><span class=\"line\">      ans = <span class=\"built_in\">max</span>(++cur, ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"依图科技机器学习算法测试工程师一面（19.3.28）","copyright":true,"date":"2019-03-28T10:01:11.000Z","mathjax":false,"toc":true,"_content":"\n依图科技也算是四大视觉算法独角兽之一了，在牛客网上看到招聘信息，投递了一份简历。\n\n3月28日上午11点视频面试。\n\n##### 1. 自我介绍\n\n##### 2. 项目细节\n\n##### 3. 了解java么（我错了！）\n\n​     3.1 请介绍JVM\n\n​     3.2  了解GC吗？\n\n##### 4. 编程能力\n\n​\t4.1 写一个java多线程（我是真的不会啊，再也不敢说自己会java了）\n\n```java\n// {1,2,3}\n// {4,5,6}\n// 请用多线程同时读取两个队列求和，最后汇总\n\n```\n\n​       4.2 括号计算（没写出来，完全没懂面试官的提示，= =）\n\n```python\n# ()-->1\n# AB--> A+B\n# (A)--> A*2\n# 分三种情况考虑，将左括号入栈，遇到右括号出站栈。\n# 判断栈顶是左括号的时候，push(1)\n# 判断栈顶是数字时，判断栈顶前一个是数字，累加，是左括号，累乘\ndef sum(s) -> int:\n    result = []\n    for each in s:\n        if each == '(':\n            result.append(each)\n        elif each == ')':\n            if result[-1] == '(':\n                result[-1] = 1\n            elif isinstance(result[-1], int):\n                ans = result[-1]\n                result = result[:-1]\n                while isinstance(result[-1], int):\n                    result[-1] = result[-1] + ans\n                    ans = result[-1]\n                    result = result[:-1]\n\n                result[-1] = ans * 2\n    return result\n\n\n# print(sum(\"(()(()))\"))\nprint(sum(\"(()()())\"))\n\n```\n\n##### 5. 有什么要问面试官\n\n你们主要的工作是什么：\n\n算法框架等的深度测评，未来可能会做深度学习框架的东西\n\n比较偏向底层，基本没有业务方面的内容\n\n---\n\n##### 总结\n\n简历真的要改一改，投岗位也不能胡乱来了，不同的方向内容真的差很多；\n\n基础知识，比如写代码的能力还是要加强，基本的算法题要多看看，掌握基本的套路；\n\n对自己的项目介绍要再多联系，要自己想明白自己做了什么。\n\n---\n\n##### 彩蛋\n\n实验室小伙伴面试时的算法题：leetcode 754 reach a number\n\n","source":"_posts/依图科技机器学习算法测试工程师一面（19-3-28）.md","raw":"---\ntitle: 依图科技机器学习算法测试工程师一面（19.3.28）\ncopyright: true\ndate: 2019-03-28 18:01:11\ntags: \n - 面经\n - 实习\ncategories: 工作\nmathjax: false\ntoc: true\n---\n\n依图科技也算是四大视觉算法独角兽之一了，在牛客网上看到招聘信息，投递了一份简历。\n\n3月28日上午11点视频面试。\n\n##### 1. 自我介绍\n\n##### 2. 项目细节\n\n##### 3. 了解java么（我错了！）\n\n​     3.1 请介绍JVM\n\n​     3.2  了解GC吗？\n\n##### 4. 编程能力\n\n​\t4.1 写一个java多线程（我是真的不会啊，再也不敢说自己会java了）\n\n```java\n// {1,2,3}\n// {4,5,6}\n// 请用多线程同时读取两个队列求和，最后汇总\n\n```\n\n​       4.2 括号计算（没写出来，完全没懂面试官的提示，= =）\n\n```python\n# ()-->1\n# AB--> A+B\n# (A)--> A*2\n# 分三种情况考虑，将左括号入栈，遇到右括号出站栈。\n# 判断栈顶是左括号的时候，push(1)\n# 判断栈顶是数字时，判断栈顶前一个是数字，累加，是左括号，累乘\ndef sum(s) -> int:\n    result = []\n    for each in s:\n        if each == '(':\n            result.append(each)\n        elif each == ')':\n            if result[-1] == '(':\n                result[-1] = 1\n            elif isinstance(result[-1], int):\n                ans = result[-1]\n                result = result[:-1]\n                while isinstance(result[-1], int):\n                    result[-1] = result[-1] + ans\n                    ans = result[-1]\n                    result = result[:-1]\n\n                result[-1] = ans * 2\n    return result\n\n\n# print(sum(\"(()(()))\"))\nprint(sum(\"(()()())\"))\n\n```\n\n##### 5. 有什么要问面试官\n\n你们主要的工作是什么：\n\n算法框架等的深度测评，未来可能会做深度学习框架的东西\n\n比较偏向底层，基本没有业务方面的内容\n\n---\n\n##### 总结\n\n简历真的要改一改，投岗位也不能胡乱来了，不同的方向内容真的差很多；\n\n基础知识，比如写代码的能力还是要加强，基本的算法题要多看看，掌握基本的套路；\n\n对自己的项目介绍要再多联系，要自己想明白自己做了什么。\n\n---\n\n##### 彩蛋\n\n实验室小伙伴面试时的算法题：leetcode 754 reach a number\n\n","slug":"依图科技机器学习算法测试工程师一面（19-3-28）","published":1,"updated":"2019-04-01T02:14:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclkv000o6y2h4el3e504","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>依图科技也算是四大视觉算法独角兽之一了，在牛客网上看到招聘信息，投递了一份简历。</p>\n<p>3月28日上午11点视频面试。</p>\n<h5 id=\"1-自我介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-自我介绍\"></a> 1. 自我介绍</h5>\n<h5 id=\"2-项目细节\"><a class=\"markdownIt-Anchor\" href=\"#2-项目细节\"></a> 2. 项目细节</h5>\n<h5 id=\"3-了解java么我错了\"><a class=\"markdownIt-Anchor\" href=\"#3-了解java么我错了\"></a> 3. 了解java么（我错了！）</h5>\n<p>​     3.1 请介绍JVM</p>\n<p>​     3.2  了解GC吗？</p>\n<h5 id=\"4-编程能力\"><a class=\"markdownIt-Anchor\" href=\"#4-编程能力\"></a> 4. 编程能力</h5>\n<p>​\t4.1 写一个java多线程（我是真的不会啊，再也不敢说自己会java了）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &#123;1,2,3&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#123;4,5,6&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 请用多线程同时读取两个队列求和，最后汇总</span></span><br></pre></td></tr></table></figure>\n<p>​       4.2 括号计算（没写出来，完全没懂面试官的提示，= =）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ()--&gt;1</span></span><br><span class=\"line\"><span class=\"comment\"># AB--&gt; A+B</span></span><br><span class=\"line\"><span class=\"comment\"># (A)--&gt; A*2</span></span><br><span class=\"line\"><span class=\"comment\"># 分三种情况考虑，将左括号入栈，遇到右括号出站栈。</span></span><br><span class=\"line\"><span class=\"comment\"># 判断栈顶是左括号的时候，push(1)</span></span><br><span class=\"line\"><span class=\"comment\"># 判断栈顶是数字时，判断栈顶前一个是数字，累加，是左括号，累乘</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sum</span><span class=\"params\">(s)</span> -&gt; int:</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> each == <span class=\"string\">'('</span>:</span><br><span class=\"line\">            result.append(each)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> each == <span class=\"string\">')'</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result[<span class=\"number\">-1</span>] == <span class=\"string\">'('</span>:</span><br><span class=\"line\">                result[<span class=\"number\">-1</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> isinstance(result[<span class=\"number\">-1</span>], int):</span><br><span class=\"line\">                ans = result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">                result = result[:<span class=\"number\">-1</span>]</span><br><span class=\"line\">                <span class=\"keyword\">while</span> isinstance(result[<span class=\"number\">-1</span>], int):</span><br><span class=\"line\">                    result[<span class=\"number\">-1</span>] = result[<span class=\"number\">-1</span>] + ans</span><br><span class=\"line\">                    ans = result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">                    result = result[:<span class=\"number\">-1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">                result[<span class=\"number\">-1</span>] = ans * <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(sum(\"(()(()))\"))</span></span><br><span class=\"line\">print(sum(<span class=\"string\">\"(()()())\"</span>))</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-有什么要问面试官\"><a class=\"markdownIt-Anchor\" href=\"#5-有什么要问面试官\"></a> 5. 有什么要问面试官</h5>\n<p>你们主要的工作是什么：</p>\n<p>算法框架等的深度测评，未来可能会做深度学习框架的东西</p>\n<p>比较偏向底层，基本没有业务方面的内容</p>\n<hr />\n<h5 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h5>\n<p>简历真的要改一改，投岗位也不能胡乱来了，不同的方向内容真的差很多；</p>\n<p>基础知识，比如写代码的能力还是要加强，基本的算法题要多看看，掌握基本的套路；</p>\n<p>对自己的项目介绍要再多联系，要自己想明白自己做了什么。</p>\n<hr />\n<h5 id=\"彩蛋\"><a class=\"markdownIt-Anchor\" href=\"#彩蛋\"></a> 彩蛋</h5>\n<p>实验室小伙伴面试时的算法题：leetcode 754 reach a number</p>\n","site":{"data":{}},"length":936,"excerpt":"","more":"<p>依图科技也算是四大视觉算法独角兽之一了，在牛客网上看到招聘信息，投递了一份简历。</p>\n<p>3月28日上午11点视频面试。</p>\n<h5 id=\"1-自我介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-自我介绍\"></a> 1. 自我介绍</h5>\n<h5 id=\"2-项目细节\"><a class=\"markdownIt-Anchor\" href=\"#2-项目细节\"></a> 2. 项目细节</h5>\n<h5 id=\"3-了解java么我错了\"><a class=\"markdownIt-Anchor\" href=\"#3-了解java么我错了\"></a> 3. 了解java么（我错了！）</h5>\n<p>​     3.1 请介绍JVM</p>\n<p>​     3.2  了解GC吗？</p>\n<h5 id=\"4-编程能力\"><a class=\"markdownIt-Anchor\" href=\"#4-编程能力\"></a> 4. 编程能力</h5>\n<p>​\t4.1 写一个java多线程（我是真的不会啊，再也不敢说自己会java了）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &#123;1,2,3&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#123;4,5,6&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 请用多线程同时读取两个队列求和，最后汇总</span></span><br></pre></td></tr></table></figure>\n<p>​       4.2 括号计算（没写出来，完全没懂面试官的提示，= =）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ()--&gt;1</span></span><br><span class=\"line\"><span class=\"comment\"># AB--&gt; A+B</span></span><br><span class=\"line\"><span class=\"comment\"># (A)--&gt; A*2</span></span><br><span class=\"line\"><span class=\"comment\"># 分三种情况考虑，将左括号入栈，遇到右括号出站栈。</span></span><br><span class=\"line\"><span class=\"comment\"># 判断栈顶是左括号的时候，push(1)</span></span><br><span class=\"line\"><span class=\"comment\"># 判断栈顶是数字时，判断栈顶前一个是数字，累加，是左括号，累乘</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sum</span><span class=\"params\">(s)</span> -&gt; int:</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> each == <span class=\"string\">'('</span>:</span><br><span class=\"line\">            result.append(each)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> each == <span class=\"string\">')'</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result[<span class=\"number\">-1</span>] == <span class=\"string\">'('</span>:</span><br><span class=\"line\">                result[<span class=\"number\">-1</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> isinstance(result[<span class=\"number\">-1</span>], int):</span><br><span class=\"line\">                ans = result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">                result = result[:<span class=\"number\">-1</span>]</span><br><span class=\"line\">                <span class=\"keyword\">while</span> isinstance(result[<span class=\"number\">-1</span>], int):</span><br><span class=\"line\">                    result[<span class=\"number\">-1</span>] = result[<span class=\"number\">-1</span>] + ans</span><br><span class=\"line\">                    ans = result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">                    result = result[:<span class=\"number\">-1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">                result[<span class=\"number\">-1</span>] = ans * <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(sum(\"(()(()))\"))</span></span><br><span class=\"line\">print(sum(<span class=\"string\">\"(()()())\"</span>))</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-有什么要问面试官\"><a class=\"markdownIt-Anchor\" href=\"#5-有什么要问面试官\"></a> 5. 有什么要问面试官</h5>\n<p>你们主要的工作是什么：</p>\n<p>算法框架等的深度测评，未来可能会做深度学习框架的东西</p>\n<p>比较偏向底层，基本没有业务方面的内容</p>\n<hr />\n<h5 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h5>\n<p>简历真的要改一改，投岗位也不能胡乱来了，不同的方向内容真的差很多；</p>\n<p>基础知识，比如写代码的能力还是要加强，基本的算法题要多看看，掌握基本的套路；</p>\n<p>对自己的项目介绍要再多联系，要自己想明白自己做了什么。</p>\n<hr />\n<h5 id=\"彩蛋\"><a class=\"markdownIt-Anchor\" href=\"#彩蛋\"></a> 彩蛋</h5>\n<p>实验室小伙伴面试时的算法题：leetcode 754 reach a number</p>\n"},{"title":"hexo使用过中遇到的一个小问题","date":"2019-03-14T06:59:34.000Z","_content":"\n##### 问题描述\n\n新博客搭建不久，突然`hexo g`报错，\n\n<!--more-->\n\n```\n$ hexo g\n(node:14620) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.\nINFO  [hexo-math] Using engine 'mathjax'\nINFO  Start processing\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nTemplate render error: (unknown path) [Line 12, Column 47]\n  expected variable end\n    at Object._prettifyError (D:\\hexo\\node_modules\\nunjucks\\src\\lib.js:36:11)\n    at Template.render (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:542:21)\n    at Environment.renderString (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:380:17)\n    at Promise.fromCallback.cb (D:\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:62:48)\n    at tryCatcher (D:\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)\n    at Function.Promise.fromNode.Promise.fromCallback (D:\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:180:30)\n\n```\n\n\n\n删除新写的文章之后，问题消失了，\n\n仔细检查发现文章中公式里出现了两个连续的中括号“{   {”，导致了异常\n\n##### 解决方案\n\n用空格给隔开就好了\n\n","source":"_posts/hexo使用过中遇到的一个小问题.md","raw":"---\ntitle: hexo使用过中遇到的一个小问题\ndate: 2019-03-14 14:59:34\ntags: hexo\ncategories: 博客\n---\n\n##### 问题描述\n\n新博客搭建不久，突然`hexo g`报错，\n\n<!--more-->\n\n```\n$ hexo g\n(node:14620) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.\nINFO  [hexo-math] Using engine 'mathjax'\nINFO  Start processing\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nTemplate render error: (unknown path) [Line 12, Column 47]\n  expected variable end\n    at Object._prettifyError (D:\\hexo\\node_modules\\nunjucks\\src\\lib.js:36:11)\n    at Template.render (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:542:21)\n    at Environment.renderString (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:380:17)\n    at Promise.fromCallback.cb (D:\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:62:48)\n    at tryCatcher (D:\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)\n    at Function.Promise.fromNode.Promise.fromCallback (D:\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:180:30)\n\n```\n\n\n\n删除新写的文章之后，问题消失了，\n\n仔细检查发现文章中公式里出现了两个连续的中括号“{   {”，导致了异常\n\n##### 解决方案\n\n用空格给隔开就好了\n\n","slug":"hexo使用过中遇到的一个小问题","published":1,"updated":"2019-03-27T09:14:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclkz000q6y2h6m7a6vfe","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h5 id=\"问题描述\"><a class=\"markdownIt-Anchor\" href=\"#问题描述\"></a> 问题描述</h5>\n<p>新博客搭建不久，突然<code>hexo g</code>报错，</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">(node:14620) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</span><br><span class=\"line\">INFO  [hexo-math] Using engine &#39;mathjax&#39;</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">FATAL Something&#39;s wrong. Maybe you can find the solution here: http:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.html</span><br><span class=\"line\">Template render error: (unknown path) [Line 12, Column 47]</span><br><span class=\"line\">  expected variable end</span><br><span class=\"line\">    at Object._prettifyError (D:\\hexo\\node_modules\\nunjucks\\src\\lib.js:36:11)</span><br><span class=\"line\">    at Template.render (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:542:21)</span><br><span class=\"line\">    at Environment.renderString (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:380:17)</span><br><span class=\"line\">    at Promise.fromCallback.cb (D:\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:62:48)</span><br><span class=\"line\">    at tryCatcher (D:\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)</span><br><span class=\"line\">    at Function.Promise.fromNode.Promise.fromCallback (D:\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:180:30)</span><br></pre></td></tr></table></figure>\n<p>删除新写的文章之后，问题消失了，</p>\n<p>仔细检查发现文章中公式里出现了两个连续的中括号“{   {”，导致了异常</p>\n<h5 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"#解决方案\"></a> 解决方案</h5>\n<p>用空格给隔开就好了</p>\n","site":{"data":{}},"length":906,"excerpt":"<h5 id=\"问题描述\"><a class=\"markdownIt-Anchor\" href=\"#问题描述\"></a> 问题描述</h5>\n<p>新博客搭建不久，突然<code>hexo g</code>报错，</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">(node:14620) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</span><br><span class=\"line\">INFO  [hexo-math] Using engine &#39;mathjax&#39;</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">FATAL Something&#39;s wrong. Maybe you can find the solution here: http:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.html</span><br><span class=\"line\">Template render error: (unknown path) [Line 12, Column 47]</span><br><span class=\"line\">  expected variable end</span><br><span class=\"line\">    at Object._prettifyError (D:\\hexo\\node_modules\\nunjucks\\src\\lib.js:36:11)</span><br><span class=\"line\">    at Template.render (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:542:21)</span><br><span class=\"line\">    at Environment.renderString (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:380:17)</span><br><span class=\"line\">    at Promise.fromCallback.cb (D:\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:62:48)</span><br><span class=\"line\">    at tryCatcher (D:\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)</span><br><span class=\"line\">    at Function.Promise.fromNode.Promise.fromCallback (D:\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:180:30)</span><br></pre></td></tr></table></figure>\n<p>删除新写的文章之后，问题消失了，</p>\n<p>仔细检查发现文章中公式里出现了两个连续的中括号“{   {”，导致了异常</p>\n<h5 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"#解决方案\"></a> 解决方案</h5>\n<p>用空格给隔开就好了</p>"},{"title":"Leetcode-3 无重复字符的最长子串 Python","copyright":true,"date":"2019-04-02T02:32:35.000Z","_content":"\n#### 1. [题目](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/submissions/)\n>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</br>\n>示例 1:\n>输入: \"abcabcbb\"\n>输出: 3 \n>解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。</br>\n>示例 2:\n>输入: \"bbbbb\"\n>输出: 1\n>解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。</br>\n>示例 3:\n>输入: \"pwwkew\"\n>输出: 3\n>解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。\n>     请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n\n#### 2. 解题思路\n##### 2.1 朴素解法，暴力搜索\n&emsp;为了枚举给定字符串的所有子字符串，我们需要枚举它们开始和结束的索引。假设开始和结束的索引分别为 $i$ 和 $j$。那么我们有 $0 \\leq i \\lt j \\leq n $ ,$0≤i<j≤n $（这里的结束索引 j 是按惯例排除的）。因此，使用 $i$ 从0到n - 1,n−1 以及 j 从 i+1 到 n 这两个嵌套的循环，我们可以枚举出 s 的所有子字符串。\n\n&emsp;要检查一个字符串是否有重复字符，我们可以使用集合。我们遍历字符串中的所有字符，并将它们逐个放入 set 中。在放置一个字符之前，我们检查该集合是否已经包含它。如果包含，我们会返回 false。循环结束后，我们返回 true。\n\n##### 2.2 滑动窗口\n&emsp;利用python 的字典，或者java中的`Map<Character, Integer> map`\n存储每个字符出现位置的索引。\n&emsp;使用变量end来记录上次该字符出现的位置长度，删掉从该字符前一次出现，及其以前的重复出现，也可以理解成不重复字符串的开始位置；\n&emsp;使用变量m来记录不重复字符出现的最大长度；\n&emsp;each是遍历字符串的当前index\n\n``` python\nclass Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        if len(s) == 0 : return 0\n        end = 0\n        dic = {}\n        m = 0\n        for each in range(len(s)):\n            if s[each] in dic :\n                end = max(end,dic[s[each]]+1)\n            dic[s[each]] = each\n            m = max(m,each-end+1)\n            \n        return m\n```\n第二种理解[思路](https://blog.csdn.net/ieearth/article/details/79927955 )：\n&emsp;求无重复字符的最长子串的长度，从头到尾遍历字符串时（索引index），考虑到无重复字符，我们先把字符逐个放到容器set中，并更新最长子串的长度，如果遇到了重复字符，即当前遍历的字符在set中，则要从set中删除重复字符，包括这个重复字符前面的所有字符，也就是从当前子串的最左边（left）开始删除，直到删除重复字符\n\n#### 3. 总结/分类\n&emsp;字符串，滑动窗口\n\n","source":"_posts/Leetcode-3-无重复字符的最长子串-Python.md","raw":"---\ntitle: Leetcode-3 无重复字符的最长子串 Python\ncopyright: true\ndate: 2019-04-02 10:32:35\ntags: leetcode\ncategories: 学习\n---\n\n#### 1. [题目](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/submissions/)\n>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</br>\n>示例 1:\n>输入: \"abcabcbb\"\n>输出: 3 \n>解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。</br>\n>示例 2:\n>输入: \"bbbbb\"\n>输出: 1\n>解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。</br>\n>示例 3:\n>输入: \"pwwkew\"\n>输出: 3\n>解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。\n>     请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n\n#### 2. 解题思路\n##### 2.1 朴素解法，暴力搜索\n&emsp;为了枚举给定字符串的所有子字符串，我们需要枚举它们开始和结束的索引。假设开始和结束的索引分别为 $i$ 和 $j$。那么我们有 $0 \\leq i \\lt j \\leq n $ ,$0≤i<j≤n $（这里的结束索引 j 是按惯例排除的）。因此，使用 $i$ 从0到n - 1,n−1 以及 j 从 i+1 到 n 这两个嵌套的循环，我们可以枚举出 s 的所有子字符串。\n\n&emsp;要检查一个字符串是否有重复字符，我们可以使用集合。我们遍历字符串中的所有字符，并将它们逐个放入 set 中。在放置一个字符之前，我们检查该集合是否已经包含它。如果包含，我们会返回 false。循环结束后，我们返回 true。\n\n##### 2.2 滑动窗口\n&emsp;利用python 的字典，或者java中的`Map<Character, Integer> map`\n存储每个字符出现位置的索引。\n&emsp;使用变量end来记录上次该字符出现的位置长度，删掉从该字符前一次出现，及其以前的重复出现，也可以理解成不重复字符串的开始位置；\n&emsp;使用变量m来记录不重复字符出现的最大长度；\n&emsp;each是遍历字符串的当前index\n\n``` python\nclass Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        if len(s) == 0 : return 0\n        end = 0\n        dic = {}\n        m = 0\n        for each in range(len(s)):\n            if s[each] in dic :\n                end = max(end,dic[s[each]]+1)\n            dic[s[each]] = each\n            m = max(m,each-end+1)\n            \n        return m\n```\n第二种理解[思路](https://blog.csdn.net/ieearth/article/details/79927955 )：\n&emsp;求无重复字符的最长子串的长度，从头到尾遍历字符串时（索引index），考虑到无重复字符，我们先把字符逐个放到容器set中，并更新最长子串的长度，如果遇到了重复字符，即当前遍历的字符在set中，则要从set中删除重复字符，包括这个重复字符前面的所有字符，也就是从当前子串的最左边（left）开始删除，直到删除重复字符\n\n#### 3. 总结/分类\n&emsp;字符串，滑动窗口\n\n","slug":"Leetcode-3-无重复字符的最长子串-Python","published":1,"updated":"2019-04-02T02:35:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcnccll2000u6y2hd5bmgl5x","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h4 id=\"1-题目\"><a class=\"markdownIt-Anchor\" href=\"#1-题目\"></a> 1. <a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/submissions/\">题目</a></h4>\n<blockquote>\n<p>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</br><br />\n示例 1:<br />\n输入: “abcabcbb”<br />\n输出: 3<br />\n解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。</br><br />\n示例 2:<br />\n输入: “bbbbb”<br />\n输出: 1<br />\n解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。</br><br />\n示例 3:<br />\n输入: “pwwkew”<br />\n输出: 3<br />\n解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br />\n请注意，你的答案必须是 子串 的长度，“pwke” 是一个子序列，不是子串。</p>\n</blockquote>\n<h4 id=\"2-解题思路\"><a class=\"markdownIt-Anchor\" href=\"#2-解题思路\"></a> 2. 解题思路</h4>\n<h5 id=\"21-朴素解法暴力搜索\"><a class=\"markdownIt-Anchor\" href=\"#21-朴素解法暴力搜索\"></a> 2.1 朴素解法，暴力搜索</h5>\n<p> 为了枚举给定字符串的所有子字符串，我们需要枚举它们开始和结束的索引。假设开始和结束的索引分别为 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">i</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span></span></span></span>。那么我们有 $0 \\leq i \\lt j \\leq n $ ,$0≤i&lt;j≤n $（这里的结束索引 j 是按惯例排除的）。因此，使用 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">i</span></span></span></span> 从0到n - 1,n−1 以及 j 从 i+1 到 n 这两个嵌套的循环，我们可以枚举出 s 的所有子字符串。</p>\n<p> 要检查一个字符串是否有重复字符，我们可以使用集合。我们遍历字符串中的所有字符，并将它们逐个放入 set 中。在放置一个字符之前，我们检查该集合是否已经包含它。如果包含，我们会返回 false。循环结束后，我们返回 true。</p>\n<h5 id=\"22-滑动窗口\"><a class=\"markdownIt-Anchor\" href=\"#22-滑动窗口\"></a> 2.2 滑动窗口</h5>\n<p> 利用python 的字典，或者java中的<code>Map&lt;Character, Integer&gt; map</code><br />\n存储每个字符出现位置的索引。<br />\n 使用变量end来记录上次该字符出现的位置长度，删掉从该字符前一次出现，及其以前的重复出现，也可以理解成不重复字符串的开始位置；<br />\n 使用变量m来记录不重复字符出现的最大长度；<br />\n each是遍历字符串的当前index</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lengthOfLongestSubstring</span><span class=\"params\">(self, s: str)</span> -&gt; int:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(s) == <span class=\"number\">0</span> : <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        end = <span class=\"number\">0</span></span><br><span class=\"line\">        dic = &#123;&#125;</span><br><span class=\"line\">        m = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> range(len(s)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> s[each] <span class=\"keyword\">in</span> dic :</span><br><span class=\"line\">                end = max(end,dic[s[each]]+<span class=\"number\">1</span>)</span><br><span class=\"line\">            dic[s[each]] = each</span><br><span class=\"line\">            m = max(m,each-end+<span class=\"number\">1</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">return</span> m</span><br></pre></td></tr></table></figure>\n<p>第二种理解<a href=\"https://blog.csdn.net/ieearth/article/details/79927955\">思路</a>：<br />\n 求无重复字符的最长子串的长度，从头到尾遍历字符串时（索引index），考虑到无重复字符，我们先把字符逐个放到容器set中，并更新最长子串的长度，如果遇到了重复字符，即当前遍历的字符在set中，则要从set中删除重复字符，包括这个重复字符前面的所有字符，也就是从当前子串的最左边（left）开始删除，直到删除重复字符</p>\n<h4 id=\"3-总结分类\"><a class=\"markdownIt-Anchor\" href=\"#3-总结分类\"></a> 3. 总结/分类</h4>\n<p> 字符串，滑动窗口</p>\n","site":{"data":{}},"length":1085,"excerpt":"","more":"<h4 id=\"1-题目\"><a class=\"markdownIt-Anchor\" href=\"#1-题目\"></a> 1. <a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/submissions/\">题目</a></h4>\n<blockquote>\n<p>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</br><br />\n示例 1:<br />\n输入: “abcabcbb”<br />\n输出: 3<br />\n解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。</br><br />\n示例 2:<br />\n输入: “bbbbb”<br />\n输出: 1<br />\n解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。</br><br />\n示例 3:<br />\n输入: “pwwkew”<br />\n输出: 3<br />\n解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br />\n请注意，你的答案必须是 子串 的长度，“pwke” 是一个子序列，不是子串。</p>\n</blockquote>\n<h4 id=\"2-解题思路\"><a class=\"markdownIt-Anchor\" href=\"#2-解题思路\"></a> 2. 解题思路</h4>\n<h5 id=\"21-朴素解法暴力搜索\"><a class=\"markdownIt-Anchor\" href=\"#21-朴素解法暴力搜索\"></a> 2.1 朴素解法，暴力搜索</h5>\n<p> 为了枚举给定字符串的所有子字符串，我们需要枚举它们开始和结束的索引。假设开始和结束的索引分别为 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">i</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span></span></span></span>。那么我们有 $0 \\leq i \\lt j \\leq n $ ,$0≤i&lt;j≤n $（这里的结束索引 j 是按惯例排除的）。因此，使用 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">i</span></span></span></span> 从0到n - 1,n−1 以及 j 从 i+1 到 n 这两个嵌套的循环，我们可以枚举出 s 的所有子字符串。</p>\n<p> 要检查一个字符串是否有重复字符，我们可以使用集合。我们遍历字符串中的所有字符，并将它们逐个放入 set 中。在放置一个字符之前，我们检查该集合是否已经包含它。如果包含，我们会返回 false。循环结束后，我们返回 true。</p>\n<h5 id=\"22-滑动窗口\"><a class=\"markdownIt-Anchor\" href=\"#22-滑动窗口\"></a> 2.2 滑动窗口</h5>\n<p> 利用python 的字典，或者java中的<code>Map&lt;Character, Integer&gt; map</code><br />\n存储每个字符出现位置的索引。<br />\n 使用变量end来记录上次该字符出现的位置长度，删掉从该字符前一次出现，及其以前的重复出现，也可以理解成不重复字符串的开始位置；<br />\n 使用变量m来记录不重复字符出现的最大长度；<br />\n each是遍历字符串的当前index</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lengthOfLongestSubstring</span><span class=\"params\">(self, s: str)</span> -&gt; int:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(s) == <span class=\"number\">0</span> : <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        end = <span class=\"number\">0</span></span><br><span class=\"line\">        dic = &#123;&#125;</span><br><span class=\"line\">        m = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> range(len(s)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> s[each] <span class=\"keyword\">in</span> dic :</span><br><span class=\"line\">                end = max(end,dic[s[each]]+<span class=\"number\">1</span>)</span><br><span class=\"line\">            dic[s[each]] = each</span><br><span class=\"line\">            m = max(m,each-end+<span class=\"number\">1</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">return</span> m</span><br></pre></td></tr></table></figure>\n<p>第二种理解<a href=\"https://blog.csdn.net/ieearth/article/details/79927955\">思路</a>：<br />\n 求无重复字符的最长子串的长度，从头到尾遍历字符串时（索引index），考虑到无重复字符，我们先把字符逐个放到容器set中，并更新最长子串的长度，如果遇到了重复字符，即当前遍历的字符在set中，则要从set中删除重复字符，包括这个重复字符前面的所有字符，也就是从当前子串的最左边（left）开始删除，直到删除重复字符</p>\n<h4 id=\"3-总结分类\"><a class=\"markdownIt-Anchor\" href=\"#3-总结分类\"></a> 3. 总结/分类</h4>\n<p> 字符串，滑动窗口</p>\n"},{"title":"剑指offer（第二版）学习记录卡","date":"2019-03-21T02:09:14.000Z","_content":"\n----\n<!--More-->\n\n时间：2019-11-1 20:11:55\n\n实习完回了学校，虽然没有找工作的压力，但是也没有定课题，迷茫之余，断断续续把这本书做了五十几道题。\n\n觉得自己每天东一榔头西一棒槌，没有组织没有计划，野蛮生长，是成不了才的。\n\n\n\n---\n\n\n\n| 题目                     | 解题思路                                           | 知识点         | 做题时间 | 备注                         |\n| ------------------------ | -------------------------------------------------- | -------------- | -------- | ---------------------------- |\n| 题1：赋值运算符函数      |                                                    | c++基础        | 未做     |                              |\n| 题2：实现单例模式        | 考虑多线程环境                                     | 单例模式       | 待复习   |                              |\n| 题3：数组中重复的数字    | 利用hash表来解决                                   | 数组           | 待复习   | 进阶不修改数组版本           |\n| 题4：二维数组中的查找    | 从右下找到左上                                     | 数组           | 待复习   |                              |\n| 题5：替换空格            | 从后往前                                           | 字符串         |          | 我直接用了Python的replace    |\n| 题6：从尾到头打印链表    | 利用stack遍历                                      | 链表           | 待复习   |                              |\n| 题7：重建二叉树          | 先序+中序                                          | 二叉树         | 待复习   |                              |\n| 题8：二叉树的下一个节点  | 递归                                               | 二叉树         | 待复习   |                              |\n| 题9：用两个栈实现队列    |                                                    |                |          |                              |\n| 题10：fibonacci数列      | 递归                                               | 递归           | 待复习   | 自底向上，自顶向下           |\n| 题11：旋转数组的最小数字 | 1.利用二分查找2.第一个比前一面一个值小的数就是结果 | 数组，二分查找 | 19.3.21  | 二分查找的方式还需要再写一遍 |\n| 题12：矩阵中的路径       | 递归                                               | 数组，递归     | 19.3.24  |                              |\n|                          |                                                    |                |          |                              |","source":"_posts/剑指offer（第二版）学习记录卡.md","raw":"---\ntitle: 剑指offer（第二版）学习记录卡\ndate: 2019-03-21 10:09:14\ntags:  \n- 剑指offer\n- 刷题\n- 实习\ncategories: 学习\n---\n\n----\n<!--More-->\n\n时间：2019-11-1 20:11:55\n\n实习完回了学校，虽然没有找工作的压力，但是也没有定课题，迷茫之余，断断续续把这本书做了五十几道题。\n\n觉得自己每天东一榔头西一棒槌，没有组织没有计划，野蛮生长，是成不了才的。\n\n\n\n---\n\n\n\n| 题目                     | 解题思路                                           | 知识点         | 做题时间 | 备注                         |\n| ------------------------ | -------------------------------------------------- | -------------- | -------- | ---------------------------- |\n| 题1：赋值运算符函数      |                                                    | c++基础        | 未做     |                              |\n| 题2：实现单例模式        | 考虑多线程环境                                     | 单例模式       | 待复习   |                              |\n| 题3：数组中重复的数字    | 利用hash表来解决                                   | 数组           | 待复习   | 进阶不修改数组版本           |\n| 题4：二维数组中的查找    | 从右下找到左上                                     | 数组           | 待复习   |                              |\n| 题5：替换空格            | 从后往前                                           | 字符串         |          | 我直接用了Python的replace    |\n| 题6：从尾到头打印链表    | 利用stack遍历                                      | 链表           | 待复习   |                              |\n| 题7：重建二叉树          | 先序+中序                                          | 二叉树         | 待复习   |                              |\n| 题8：二叉树的下一个节点  | 递归                                               | 二叉树         | 待复习   |                              |\n| 题9：用两个栈实现队列    |                                                    |                |          |                              |\n| 题10：fibonacci数列      | 递归                                               | 递归           | 待复习   | 自底向上，自顶向下           |\n| 题11：旋转数组的最小数字 | 1.利用二分查找2.第一个比前一面一个值小的数就是结果 | 数组，二分查找 | 19.3.21  | 二分查找的方式还需要再写一遍 |\n| 题12：矩阵中的路径       | 递归                                               | 数组，递归     | 19.3.24  |                              |\n|                          |                                                    |                |          |                              |","slug":"剑指offer（第二版）学习记录卡","published":1,"updated":"2019-11-01T12:14:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcnccll4000y6y2h4o1w3guk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><hr />\n<a id=\"more\"></a>\n<p>时间：2019-11-1 20:11:55</p>\n<p>实习完回了学校，虽然没有找工作的压力，但是也没有定课题，迷茫之余，断断续续把这本书做了五十几道题。</p>\n<p>觉得自己每天东一榔头西一棒槌，没有组织没有计划，野蛮生长，是成不了才的。</p>\n<hr />\n<table>\n<thead>\n<tr>\n<th>题目</th>\n<th>解题思路</th>\n<th>知识点</th>\n<th>做题时间</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>题1：赋值运算符函数</td>\n<td></td>\n<td>c++基础</td>\n<td>未做</td>\n<td></td>\n</tr>\n<tr>\n<td>题2：实现单例模式</td>\n<td>考虑多线程环境</td>\n<td>单例模式</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题3：数组中重复的数字</td>\n<td>利用hash表来解决</td>\n<td>数组</td>\n<td>待复习</td>\n<td>进阶不修改数组版本</td>\n</tr>\n<tr>\n<td>题4：二维数组中的查找</td>\n<td>从右下找到左上</td>\n<td>数组</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题5：替换空格</td>\n<td>从后往前</td>\n<td>字符串</td>\n<td></td>\n<td>我直接用了Python的replace</td>\n</tr>\n<tr>\n<td>题6：从尾到头打印链表</td>\n<td>利用stack遍历</td>\n<td>链表</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题7：重建二叉树</td>\n<td>先序+中序</td>\n<td>二叉树</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题8：二叉树的下一个节点</td>\n<td>递归</td>\n<td>二叉树</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题9：用两个栈实现队列</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>题10：fibonacci数列</td>\n<td>递归</td>\n<td>递归</td>\n<td>待复习</td>\n<td>自底向上，自顶向下</td>\n</tr>\n<tr>\n<td>题11：旋转数组的最小数字</td>\n<td>1.利用二分查找2.第一个比前一面一个值小的数就是结果</td>\n<td>数组，二分查找</td>\n<td>19.3.21</td>\n<td>二分查找的方式还需要再写一遍</td>\n</tr>\n<tr>\n<td>题12：矩阵中的路径</td>\n<td>递归</td>\n<td>数组，递归</td>\n<td>19.3.24</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"length":449,"excerpt":"<hr />","more":"<p>时间：2019-11-1 20:11:55</p>\n<p>实习完回了学校，虽然没有找工作的压力，但是也没有定课题，迷茫之余，断断续续把这本书做了五十几道题。</p>\n<p>觉得自己每天东一榔头西一棒槌，没有组织没有计划，野蛮生长，是成不了才的。</p>\n<hr />\n<table>\n<thead>\n<tr>\n<th>题目</th>\n<th>解题思路</th>\n<th>知识点</th>\n<th>做题时间</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>题1：赋值运算符函数</td>\n<td></td>\n<td>c++基础</td>\n<td>未做</td>\n<td></td>\n</tr>\n<tr>\n<td>题2：实现单例模式</td>\n<td>考虑多线程环境</td>\n<td>单例模式</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题3：数组中重复的数字</td>\n<td>利用hash表来解决</td>\n<td>数组</td>\n<td>待复习</td>\n<td>进阶不修改数组版本</td>\n</tr>\n<tr>\n<td>题4：二维数组中的查找</td>\n<td>从右下找到左上</td>\n<td>数组</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题5：替换空格</td>\n<td>从后往前</td>\n<td>字符串</td>\n<td></td>\n<td>我直接用了Python的replace</td>\n</tr>\n<tr>\n<td>题6：从尾到头打印链表</td>\n<td>利用stack遍历</td>\n<td>链表</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题7：重建二叉树</td>\n<td>先序+中序</td>\n<td>二叉树</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题8：二叉树的下一个节点</td>\n<td>递归</td>\n<td>二叉树</td>\n<td>待复习</td>\n<td></td>\n</tr>\n<tr>\n<td>题9：用两个栈实现队列</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>题10：fibonacci数列</td>\n<td>递归</td>\n<td>递归</td>\n<td>待复习</td>\n<td>自底向上，自顶向下</td>\n</tr>\n<tr>\n<td>题11：旋转数组的最小数字</td>\n<td>1.利用二分查找2.第一个比前一面一个值小的数就是结果</td>\n<td>数组，二分查找</td>\n<td>19.3.21</td>\n<td>二分查找的方式还需要再写一遍</td>\n</tr>\n<tr>\n<td>题12：矩阵中的路径</td>\n<td>递归</td>\n<td>数组，递归</td>\n<td>19.3.24</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>"},{"title":"和导师谈话后的整理","copyright":true,"date":"2019-03-27T08:18:03.000Z","mathjax":false,"password":"test","toc":true,"_content":"\n蹲了老师一个多星期了，终于蹲到了。\n\n和老师聊要不要读博的事情。\n\n\n\n老师首先问图图：为什么想读博\n\n图图：觉得自己书还没读够，就要工作了。\n\n老师笑了。\n\n老师：\n\n* 读博需要一个短时间能把一个东西讲清楚的能力；\n* 抓住重点的能力，找到核心问题的能力\n\n* 科大人是追求卓越的，科大的校训就是永争第一；\n\n* 在实验室里，能力是各个方向的；可以是你自己能找出非常好的点子，做非常好的事情；也可以是能组织实验室的人帮你做事情；组织能力等等；\n\n* 科研精神\n  * 师兄在联想工作的案例，扒谷歌的一个框架，作为一个有研究精神的人，应该要怎么做，要思考，为什么人家这么做，谷歌模块的框架是由什么组成的；\n  * 有科研精神的人可以做任何事情，只是不愿意做而已（有这个自信）\n\n* 建模的能力（脑子清楚）\n  * 不能把自己的模型丢掉，完全用别人的模型。\n\n\n\n图图个人情况： \n\n* 本科毕业答辩给老师留下的印象不行\n* 最近的科研工作做得也不行（其实图图压根没做，所以也说明了图图其实并不热爱科研）；\n  * 一直复现别人的工作是没有意义的\n  * 原本要复现的工作就是打了折扣的工作，还没做完，说明没能力/没上心\n\n* 没对象；\n\n\n\n所以图图现在面临的问题是：\n\n| 读       | 不读                             | 备注           |\n| -------- | -------------------------------- | -------------- |\n| 图图想读 | 图图科研能力不太行，要花时间培养 | 这个主要看天赋 |\n|          | 导师时间精力有限，而学生又多     | 需要图图积极   |\n|          | 导师今年大概率没名额             | 可以操作       |\n|          | 图图没对象                       |                |\n\n","source":"_posts/和导师谈话后的整理.md","raw":"---\ntitle: 和导师谈话后的整理\ncopyright: true\ndate: 2019-03-27 16:18:03\ntags: \n- 思考\n- 闲聊\ncategories: [生活]\nmathjax: false\npassword: test\ntoc: true\n---\n\n蹲了老师一个多星期了，终于蹲到了。\n\n和老师聊要不要读博的事情。\n\n\n\n老师首先问图图：为什么想读博\n\n图图：觉得自己书还没读够，就要工作了。\n\n老师笑了。\n\n老师：\n\n* 读博需要一个短时间能把一个东西讲清楚的能力；\n* 抓住重点的能力，找到核心问题的能力\n\n* 科大人是追求卓越的，科大的校训就是永争第一；\n\n* 在实验室里，能力是各个方向的；可以是你自己能找出非常好的点子，做非常好的事情；也可以是能组织实验室的人帮你做事情；组织能力等等；\n\n* 科研精神\n  * 师兄在联想工作的案例，扒谷歌的一个框架，作为一个有研究精神的人，应该要怎么做，要思考，为什么人家这么做，谷歌模块的框架是由什么组成的；\n  * 有科研精神的人可以做任何事情，只是不愿意做而已（有这个自信）\n\n* 建模的能力（脑子清楚）\n  * 不能把自己的模型丢掉，完全用别人的模型。\n\n\n\n图图个人情况： \n\n* 本科毕业答辩给老师留下的印象不行\n* 最近的科研工作做得也不行（其实图图压根没做，所以也说明了图图其实并不热爱科研）；\n  * 一直复现别人的工作是没有意义的\n  * 原本要复现的工作就是打了折扣的工作，还没做完，说明没能力/没上心\n\n* 没对象；\n\n\n\n所以图图现在面临的问题是：\n\n| 读       | 不读                             | 备注           |\n| -------- | -------------------------------- | -------------- |\n| 图图想读 | 图图科研能力不太行，要花时间培养 | 这个主要看天赋 |\n|          | 导师时间精力有限，而学生又多     | 需要图图积极   |\n|          | 导师今年大概率没名额             | 可以操作       |\n|          | 图图没对象                       |                |\n\n","slug":"和导师谈话后的整理","published":1,"updated":"2020-07-15T03:56:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcnccll500126y2h1ou41wvl","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">请输入密码以阅读这篇私密文章。</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"72b917bd6c75dce64f0aa950c57b04402a8c80c4016d5a4159cf89f50e9f6ead\">9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daebc77ada890a2096ca17d30fc9e3ed8773cc199813d3e4e48c5c6fb3395ae0699ad1813f14667644ed4f377d78dd9df7c17f88c5bcf6b7cbd5efebecb95a094441886f47fe984846690aac0250cd679d726eaca7dc7cf590c15352d01c28bde7fd8953efb54cc33aeb8937397ff5376704be94a085090cd6b801d327bfc13f8704512f2cb865574a2bf28e72b70a9dfe3a6e6eec739a87e2cb056ad11c3f4bdc00717dc931a49235e69217ae0c881d44978b0dd3ff93677905b28c00f50a67f7d86c827cc5945d0500e9fb049a2cc591b35712ff534256efb08a754f1766d7925f2047a003fcc85bb9a278a2667438fc823cab38269b798b1e6c6bd881f9febad258ffd56cc2f4c3ccdd8b436eebee39f762296389820d88827892c5359d8551413ad08af9205950ca19432c7f1157bbcfdf934f2d2e7106f7e78ede18f6d904ed0cd17de0182eb1b5ab3feb5e8b628268cffb68a14996f552565a823310451ff95dd231ef1a8da1ed362ca1dc7e6499fa0d591b65f972a3680684c66919d54a27611a5054c260fd358e77ef54e1e2f782db9e8e8cc2566284e997af781f75ee00dc36ac8338e0e799e47bf61cbd206ffdb7fd0b56e30ecca712b89115915e9e2b200d19a232bad373c1200c23113c3cdc1b547783745227becdcd1b55bc70ba957802fea2518e54e270d5a251816281b9cd559a4182d9ce1a05786b25b34556282df4af021d5461ee83b1c76d0f709589c9d378f9b5bb2a55048a778f30bc6b2aaa159200eecab119ec8f0f701fefbe4e27a4adc9a41d02067535b6191672d08bfdae34a1e963f5dd994888b5787725495d3d21f8b9c742d359183fd0cf12a593c61df84f67d8205fe8d590e96ac3926fe4cf7bebb17215de8a34712e3e894251811d7eef804cb6a00141d8d3060b9278780a87719e2930164a7bab40e44fb175f318933d66ce5f523a29039d272f73d34fb88c1f6ca8b0027cc459fe4570ac9e9ff0d5365d3681a19b0bfef23acb86f34d4a612ff6b9f2b1deaa5ff15e9dc0c2ba602741a6bd7dded032c54ff2d31ed5c3fbecfbec2cf82289944046359a53d9c147cc9fc88767111695b591a1138c0946a0914a1e6f2097b5b8db335c8dbc13f7b4512775b5c18ce20794b23d1ad3385594e2f27093cb67e46599a01d5d6796498e7e9ef433174f18b1276b1350f94710576c2eaa6bd055b2eb364a4dcb9b5bbc2ad8caf42b6f05c8ad3bac820637f5bb505c74704e96765b0437339156acd70196e87db2221ae023b3b060a558f955bb5497d726089acdd9685c1bb63032101c886c51188d182c72d03c1be869c1585d9a2dad203b8820667e9a51d9bea2e5d0ced48651bff9da3b7c52ff76f6032b49916b57136eb3952904d8f4bf1f5ea86e0b958807084d7159a141623f3c956a73111e28da73427ef816efcb55a4b06e67ecebbdbb50b24d869ec59aecc87ab8c89a920422ed0adced3740622d70ec4e493c5837a5a7552a46978ebd540bce43346e1587113d67fdb112415ce07436b48daa78f03c4036378adb76b1a2350bf87599afa9cbace57ba20ed809cdf519f35e3d1d77fc3ed3aa3204ac5cbfd1a65e1409cbc8fcd088c0c7fa8e158f031b62bc906ff425ab7f18ccceb2f1f7b383fae13c9a2f0ff127b355e0f5550ec95477b285132f91dd28396fef317746da2bc7fa5ac40011c6ad750307b479a72ae0454d41e20cf55245cf47bb6d8ec1852e9304bd2e352a920b2ac4281e0bb7d3b2013ff379224f0414ffb34d14bd4256e6aef97a6cdf3330b9ccf46afa33bbd338f9284a9fe3df7d75ff93d51a5b34cc1534368c741f599adf14e9f8c58b3a0f858897d3a2a2ccd6cde0fde2a05dcb425a2e7702306c489a04208de4ca090a5829b50dd8dae1983f05d2dee092eae69a5b34757daa0b6b63c3c144af9e6161e44cd27fa5e4bdf8aa99686112ec1025ea42988ceaae6fd5950e00560b8c187011f1e8acd8b8ebf28264453b7df4f0f4b08f80db1ab12b9e5990ea8e2925c6c4b9b9615b7752e39634532917fc07e617b5526d87706e696732da3dbbbecea4db89c11c3de77a1312942ed8f562446435919d7b947e61048c6922115b6981811c9ee4515c58fce6b26a82cfc4022d88e6a59a2c3e91d0c20322a6276c339e5794e78eeac8f55b31ea6513cb4fbf338160d158e8eb04c50d418ac2d04357f8c11246efd4bd7c0847a9c9cb1a2df8bcbb383299c13f812280ece8f182ca1e5caf978a834994783417a4100ac5680394f44d7b9f45841f9a6f907ef169a24da7de0446234796d000defa184604f982b56d37ef0e68c9c08c5d51e9019b82b8c7b3c499d5872137716ae79481b35253918c353b6c686fac5e852cba9b605797ac2e00e01d805122576a8329fe0879960330dccf239e222b30f9c3b3723d8fe5f9f7c0a591c55a38bd26cd9ab559a00a055136c695c314697666aef96b81ef43d8454471e1d7d8d68d293508eb3484a537208f1de8247143c6a7668f1843a5f28df03f237d7961d9ddae11dada488f30e655748ad304e28178d02694718252b6288ae7dac7f9b95469bb7ee2b8b71925e26a4efb29a4b41b8c5e71d324711b3e9dc1ad1468888c5348dd6bd07dc7a46a8cf29d0d1032fbd6a83005abfc021dd46a37f1899ebf640fa963a548fec373d7336a6eea0ef2789c759f160cebe9f056e219871498ea2f564fa42d196158d006fae904252f44aae7abe02301f3963cbd04efaf5f7ff4a00c624074379425a199baff53d218c2ae64abbddc0cf4ff827581cf469ed1c3acb04e2ebacb578bdc85c757a88ac34e11b24a4ccdd1f5450b36f55012e932232d5e95b8e3f7ba78a14998c4d25b76a5a0c66214aef74e7d8db93ca7c8e8218a7c537399670b31ac7f32a0445f35d235862d31cb95e9bece79d3802a48ec9fc9423ebf805390374bad18d1f214b7868c0d8a47957e4132b32470c8b866713b95032512bd1008880800aec85b2f7023de9849718772b3d202a235cbd22069ce9dc6dbba39c635ac4acab487cde2018f339f6b9f45611808b5956593f2a8be137c41fd1236eb44731fec3f55d1dd245cb7a52d1219cc07622319a92b74528132b98a63f067b0c6b8f3c2c125d9b2142eb5a87fdba5da303bf8c416e6a830f4e170239dbae819fdb0d3f1077fd0e8f0a92cb9a63a3e420977cda55ba683af763e8fda60cf09c363f8e749d8eb5aa72c56eea59ca5b596c3bd19464bf97c3bc61793</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"length":526,"excerpt":"此文章已被加密，需要输入密码访问。","more":"此文章已被加密，需要输入密码访问。","origin":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>蹲了老师一个多星期了，终于蹲到了。</p>\n<p>和老师聊要不要读博的事情。</p>\n<p>老师首先问图图：为什么想读博</p>\n<p>图图：觉得自己书还没读够，就要工作了。</p>\n<p>老师笑了。</p>\n<p>老师：</p>\n<ul>\n<li>\n<p>读博需要一个短时间能把一个东西讲清楚的能力；</p>\n</li>\n<li>\n<p>抓住重点的能力，找到核心问题的能力</p>\n</li>\n<li>\n<p>科大人是追求卓越的，科大的校训就是永争第一；</p>\n</li>\n<li>\n<p>在实验室里，能力是各个方向的；可以是你自己能找出非常好的点子，做非常好的事情；也可以是能组织实验室的人帮你做事情；组织能力等等；</p>\n</li>\n<li>\n<p>科研精神</p>\n<ul>\n<li>师兄在联想工作的案例，扒谷歌的一个框架，作为一个有研究精神的人，应该要怎么做，要思考，为什么人家这么做，谷歌模块的框架是由什么组成的；</li>\n<li>有科研精神的人可以做任何事情，只是不愿意做而已（有这个自信）</li>\n</ul>\n</li>\n<li>\n<p>建模的能力（脑子清楚）</p>\n<ul>\n<li>不能把自己的模型丢掉，完全用别人的模型。</li>\n</ul>\n</li>\n</ul>\n<p>图图个人情况：</p>\n<ul>\n<li>\n<p>本科毕业答辩给老师留下的印象不行</p>\n</li>\n<li>\n<p>最近的科研工作做得也不行（其实图图压根没做，所以也说明了图图其实并不热爱科研）；</p>\n<ul>\n<li>一直复现别人的工作是没有意义的</li>\n<li>原本要复现的工作就是打了折扣的工作，还没做完，说明没能力/没上心</li>\n</ul>\n</li>\n<li>\n<p>没对象；</p>\n</li>\n</ul>\n<p>所以图图现在面临的问题是：</p>\n<table>\n<thead>\n<tr>\n<th>读</th>\n<th>不读</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>图图想读</td>\n<td>图图科研能力不太行，要花时间培养</td>\n<td>这个主要看天赋</td>\n</tr>\n<tr>\n<td></td>\n<td>导师时间精力有限，而学生又多</td>\n<td>需要图图积极</td>\n</tr>\n<tr>\n<td></td>\n<td>导师今年大概率没名额</td>\n<td>可以操作</td>\n</tr>\n<tr>\n<td></td>\n<td>图图没对象</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n","encrypt":true},{"title":"搭建hexo博客","date":"2019-03-13T05:52:00.000Z","toc":true,"_content":"---\n```\n动机：看到别人有，羡慕，觉得好玩，实践了一下，前后大概两小时\n```\n---\n\n\n<!--more-->\n\n####  相关软件安装\n\n> Git\n>\n> Node.js\n>\n> Hexo\n\n \n\n#### Hexo 环境配置\n\n ###### 1.Hexo主题\n\n  选一个自己喜欢的主题，我这里直接用了教程里的nexT，后面遇到喜欢的再改吧\n  [Github 主页](https://github.com/theme-next/hexo-theme-next)\n\n  ```shell\n$ cd hexo\n$ git clone https://github.com/theme-next/hexo-theme-next themes/next\n  ```\n\n\n###### 2.初始化博客\n\n 选一个空白的不需要管理员权限的文件夹，打开git bash，在终端输入下面的代码，初始化博客\n\n  ```shell\n  #建立一个博客文件夹，并初始化博客，<folder>为文件夹的名称，可以随便起名字\n  $ hexo init <folder>\n  #进入博客文件夹，<folder>为文件夹的名称\n  $ cd <folder>\n  # node.js的命令，根据博客既定的dependencies配置安装所有的依赖包\n  $ npm install\n  ```\n\n  \n\n###### 3.基本配置\n\n  比如博客名，个人介绍呀，参考了这篇文章[简书:Hexo的Next主题详细配置](https://www.jianshu.com/p/3a05351a37dc)\n\n  1.站点计数\n\n   可以直接在配置里将busuanzi的false改成true，参考[文档](https://www.jianshu.com/p/c311d31265e0)\n\n\n2.配置在线后台管理\n\n  hexo 有个插件可以在网页上对博客进行管理，但是我觉得使用起来并不流流畅，还不如使用本地markdown工具[Typora](https://typora.io/)，不过配不配和用不用又没什么直接关系。\n\n3.Hexo-admin\n\n    `$ nmp i hexo-admin --save`\n\n  这个时候，登录 <http://localhost:4000/admin> 即可查看所有文章内容，并可视化进行修改。\n\n  还可以添加配置后台账号密码，我没设置，哈哈。\n\n4.通过域名访问博客\n\n绑到了GitHub.io，具体教程可以看这里[GitHub+Hexo 搭建个人网站详细教程](https://zhuanlan.zhihu.com/p/26625249)\n不绑域名是因为买过，然后没怎么用就忘掉了。\n有机会再绑自己的域名吧\n\n5.添加评论(2019年3月14添加)\n\n也是超级方便几行代码，详细参考这个[为你的Hexo加上评论系统-Valine](https://blog.csdn.net/blue_zy/article/details/79071414)\n\n有个小bug就是，在添加appid和appkey的时候，记得删除leancloud占位符\n\n\n\n6.给博客添加豆瓣插件\n\n参考[这里](https://github.com/mythsman/hexo-douban)\n\n看到人家博客还有豆瓣读书什么的，给自己也加了一个，但是好像得时长更新一下。\n\n###### 4.小问题\n\tbusuanzi计数问题（未解决,本地依旧不太对,添加leancloud试试）\n\t主题语言设定问题，中文要使用 zh-CN\n\t无需列表换行问题（未解决，可能是不同平台的问题）\n\t数学公式无法渲染（未解决，19.3.25号了，还是解决不了，以后用图片吧 3月27号，改好了，原来是我没有找对开关，[捂脸]）","source":"_posts/搭建hexo博客.md","raw":"---\ntitle: 搭建hexo博客\ndate: 2019-03-13 13:52:00\ntags: \n- hexo\n- 搭建环境\ncategories: 博客\ntoc: true\n---\n---\n```\n动机：看到别人有，羡慕，觉得好玩，实践了一下，前后大概两小时\n```\n---\n\n\n<!--more-->\n\n####  相关软件安装\n\n> Git\n>\n> Node.js\n>\n> Hexo\n\n \n\n#### Hexo 环境配置\n\n ###### 1.Hexo主题\n\n  选一个自己喜欢的主题，我这里直接用了教程里的nexT，后面遇到喜欢的再改吧\n  [Github 主页](https://github.com/theme-next/hexo-theme-next)\n\n  ```shell\n$ cd hexo\n$ git clone https://github.com/theme-next/hexo-theme-next themes/next\n  ```\n\n\n###### 2.初始化博客\n\n 选一个空白的不需要管理员权限的文件夹，打开git bash，在终端输入下面的代码，初始化博客\n\n  ```shell\n  #建立一个博客文件夹，并初始化博客，<folder>为文件夹的名称，可以随便起名字\n  $ hexo init <folder>\n  #进入博客文件夹，<folder>为文件夹的名称\n  $ cd <folder>\n  # node.js的命令，根据博客既定的dependencies配置安装所有的依赖包\n  $ npm install\n  ```\n\n  \n\n###### 3.基本配置\n\n  比如博客名，个人介绍呀，参考了这篇文章[简书:Hexo的Next主题详细配置](https://www.jianshu.com/p/3a05351a37dc)\n\n  1.站点计数\n\n   可以直接在配置里将busuanzi的false改成true，参考[文档](https://www.jianshu.com/p/c311d31265e0)\n\n\n2.配置在线后台管理\n\n  hexo 有个插件可以在网页上对博客进行管理，但是我觉得使用起来并不流流畅，还不如使用本地markdown工具[Typora](https://typora.io/)，不过配不配和用不用又没什么直接关系。\n\n3.Hexo-admin\n\n    `$ nmp i hexo-admin --save`\n\n  这个时候，登录 <http://localhost:4000/admin> 即可查看所有文章内容，并可视化进行修改。\n\n  还可以添加配置后台账号密码，我没设置，哈哈。\n\n4.通过域名访问博客\n\n绑到了GitHub.io，具体教程可以看这里[GitHub+Hexo 搭建个人网站详细教程](https://zhuanlan.zhihu.com/p/26625249)\n不绑域名是因为买过，然后没怎么用就忘掉了。\n有机会再绑自己的域名吧\n\n5.添加评论(2019年3月14添加)\n\n也是超级方便几行代码，详细参考这个[为你的Hexo加上评论系统-Valine](https://blog.csdn.net/blue_zy/article/details/79071414)\n\n有个小bug就是，在添加appid和appkey的时候，记得删除leancloud占位符\n\n\n\n6.给博客添加豆瓣插件\n\n参考[这里](https://github.com/mythsman/hexo-douban)\n\n看到人家博客还有豆瓣读书什么的，给自己也加了一个，但是好像得时长更新一下。\n\n###### 4.小问题\n\tbusuanzi计数问题（未解决,本地依旧不太对,添加leancloud试试）\n\t主题语言设定问题，中文要使用 zh-CN\n\t无需列表换行问题（未解决，可能是不同平台的问题）\n\t数学公式无法渲染（未解决，19.3.25号了，还是解决不了，以后用图片吧 3月27号，改好了，原来是我没有找对开关，[捂脸]）","slug":"搭建hexo博客","published":1,"updated":"2019-03-27T09:13:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcnccll700146y2h8kmzgin7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><hr />\n<h2 id=\"-0-\"><a class=\"markdownIt-Anchor\" href=\"#-0-\"></a> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">动机：看到别人有，羡慕，觉得好玩，实践了一下，前后大概两小时</span><br></pre></td></tr></table></figure></h2>\n<a id=\"more\"></a>\n<h4 id=\"相关软件安装\"><a class=\"markdownIt-Anchor\" href=\"#相关软件安装\"></a> 相关软件安装</h4>\n<blockquote>\n<p>Git</p>\n<p>Node.js</p>\n<p>Hexo</p>\n</blockquote>\n<h4 id=\"hexo-环境配置\"><a class=\"markdownIt-Anchor\" href=\"#hexo-环境配置\"></a> Hexo 环境配置</h4>\n<h6 id=\"1hexo主题\"><a class=\"markdownIt-Anchor\" href=\"#1hexo主题\"></a> 1.Hexo主题</h6>\n<p>选一个自己喜欢的主题，我这里直接用了教程里的nexT，后面遇到喜欢的再改吧<br />\n<a href=\"https://github.com/theme-next/hexo-theme-next\">Github 主页</a></p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> hexo</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"2初始化博客\"><a class=\"markdownIt-Anchor\" href=\"#2初始化博客\"></a> 2.初始化博客</h6>\n<p>选一个空白的不需要管理员权限的文件夹，打开git bash，在终端输入下面的代码，初始化博客</p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">建立一个博客文件夹，并初始化博客，&lt;folder&gt;为文件夹的名称，可以随便起名字</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> hexo init &lt;folder&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">进入博客文件夹，&lt;folder&gt;为文件夹的名称</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> &lt;folder&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> node.js的命令，根据博客既定的dependencies配置安装所有的依赖包</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"3基本配置\"><a class=\"markdownIt-Anchor\" href=\"#3基本配置\"></a> 3.基本配置</h6>\n<p>比如博客名，个人介绍呀，参考了这篇文章<a href=\"https://www.jianshu.com/p/3a05351a37dc\">简书:Hexo的Next主题详细配置</a></p>\n<p>1.站点计数</p>\n<p>可以直接在配置里将busuanzi的false改成true，参考<a href=\"https://www.jianshu.com/p/c311d31265e0\">文档</a></p>\n<p>2.配置在线后台管理</p>\n<p>hexo 有个插件可以在网页上对博客进行管理，但是我觉得使用起来并不流流畅，还不如使用本地markdown工具<a href=\"https://typora.io/\">Typora</a>，不过配不配和用不用又没什么直接关系。</p>\n<p>3.Hexo-admin</p>\n<pre><code>`$ nmp i hexo-admin --save`\n</code></pre>\n<p>这个时候，登录 <a href=\"http://localhost:4000/admin\">http://localhost:4000/admin</a> 即可查看所有文章内容，并可视化进行修改。</p>\n<p>还可以添加配置后台账号密码，我没设置，哈哈。</p>\n<p>4.通过域名访问博客</p>\n<p><a href=\"http://xn--GitHub-2e8i73w3v2i.io\">绑到了GitHub.io</a>，具体教程可以看这里<a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程</a><br />\n不绑域名是因为买过，然后没怎么用就忘掉了。<br />\n有机会再绑自己的域名吧</p>\n<p>5.添加评论(2019年3月14添加)</p>\n<p>也是超级方便几行代码，详细参考这个<a href=\"https://blog.csdn.net/blue_zy/article/details/79071414\">为你的Hexo加上评论系统-Valine</a></p>\n<p>有个小bug就是，在添加appid和appkey的时候，记得删除leancloud占位符</p>\n<p>6.给博客添加豆瓣插件</p>\n<p>参考<a href=\"https://github.com/mythsman/hexo-douban\">这里</a></p>\n<p>看到人家博客还有豆瓣读书什么的，给自己也加了一个，但是好像得时长更新一下。</p>\n<h6 id=\"4小问题\"><a class=\"markdownIt-Anchor\" href=\"#4小问题\"></a> 4.小问题</h6>\n<pre><code>busuanzi计数问题（未解决,本地依旧不太对,添加leancloud试试）\n主题语言设定问题，中文要使用 zh-CN\n无需列表换行问题（未解决，可能是不同平台的问题）\n数学公式无法渲染（未解决，19.3.25号了，还是解决不了，以后用图片吧 3月27号，改好了，原来是我没有找对开关，[捂脸]）</code></pre>\n","site":{"data":{}},"length":1082,"excerpt":"<hr />\n<h2 id=\"-0-\"><a class=\"markdownIt-Anchor\" href=\"#-0-\"></a> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">动机：看到别人有，羡慕，觉得好玩，实践了一下，前后大概两小时</span><br></pre></td></tr></table></figure></h2>","more":"<h4 id=\"相关软件安装\"><a class=\"markdownIt-Anchor\" href=\"#相关软件安装\"></a> 相关软件安装</h4>\n<blockquote>\n<p>Git</p>\n<p>Node.js</p>\n<p>Hexo</p>\n</blockquote>\n<h4 id=\"hexo-环境配置\"><a class=\"markdownIt-Anchor\" href=\"#hexo-环境配置\"></a> Hexo 环境配置</h4>\n<h6 id=\"1hexo主题\"><a class=\"markdownIt-Anchor\" href=\"#1hexo主题\"></a> 1.Hexo主题</h6>\n<p>选一个自己喜欢的主题，我这里直接用了教程里的nexT，后面遇到喜欢的再改吧<br />\n<a href=\"https://github.com/theme-next/hexo-theme-next\">Github 主页</a></p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> hexo</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"2初始化博客\"><a class=\"markdownIt-Anchor\" href=\"#2初始化博客\"></a> 2.初始化博客</h6>\n<p>选一个空白的不需要管理员权限的文件夹，打开git bash，在终端输入下面的代码，初始化博客</p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">建立一个博客文件夹，并初始化博客，&lt;folder&gt;为文件夹的名称，可以随便起名字</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> hexo init &lt;folder&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">进入博客文件夹，&lt;folder&gt;为文件夹的名称</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> &lt;folder&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> node.js的命令，根据博客既定的dependencies配置安装所有的依赖包</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"3基本配置\"><a class=\"markdownIt-Anchor\" href=\"#3基本配置\"></a> 3.基本配置</h6>\n<p>比如博客名，个人介绍呀，参考了这篇文章<a href=\"https://www.jianshu.com/p/3a05351a37dc\">简书:Hexo的Next主题详细配置</a></p>\n<p>1.站点计数</p>\n<p>可以直接在配置里将busuanzi的false改成true，参考<a href=\"https://www.jianshu.com/p/c311d31265e0\">文档</a></p>\n<p>2.配置在线后台管理</p>\n<p>hexo 有个插件可以在网页上对博客进行管理，但是我觉得使用起来并不流流畅，还不如使用本地markdown工具<a href=\"https://typora.io/\">Typora</a>，不过配不配和用不用又没什么直接关系。</p>\n<p>3.Hexo-admin</p>\n<pre><code>`$ nmp i hexo-admin --save`\n</code></pre>\n<p>这个时候，登录 <a href=\"http://localhost:4000/admin\">http://localhost:4000/admin</a> 即可查看所有文章内容，并可视化进行修改。</p>\n<p>还可以添加配置后台账号密码，我没设置，哈哈。</p>\n<p>4.通过域名访问博客</p>\n<p><a href=\"http://xn--GitHub-2e8i73w3v2i.io\">绑到了GitHub.io</a>，具体教程可以看这里<a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程</a><br />\n不绑域名是因为买过，然后没怎么用就忘掉了。<br />\n有机会再绑自己的域名吧</p>\n<p>5.添加评论(2019年3月14添加)</p>\n<p>也是超级方便几行代码，详细参考这个<a href=\"https://blog.csdn.net/blue_zy/article/details/79071414\">为你的Hexo加上评论系统-Valine</a></p>\n<p>有个小bug就是，在添加appid和appkey的时候，记得删除leancloud占位符</p>\n<p>6.给博客添加豆瓣插件</p>\n<p>参考<a href=\"https://github.com/mythsman/hexo-douban\">这里</a></p>\n<p>看到人家博客还有豆瓣读书什么的，给自己也加了一个，但是好像得时长更新一下。</p>\n<h6 id=\"4小问题\"><a class=\"markdownIt-Anchor\" href=\"#4小问题\"></a> 4.小问题</h6>\n<pre><code>busuanzi计数问题（未解决,本地依旧不太对,添加leancloud试试）\n主题语言设定问题，中文要使用 zh-CN\n无需列表换行问题（未解决，可能是不同平台的问题）\n数学公式无法渲染（未解决，19.3.25号了，还是解决不了，以后用图片吧 3月27号，改好了，原来是我没有找对开关，[捂脸]）</code></pre>"},{"title":"给博客加了点趣味","categroies":["博客"],"_content":"\n---\n\n花了两天时间，本来是想换成极简风格的maupassant，折腾了大半天，还调整了界面颜色什么的，后来想添加功能，但是不会，又回到Next主题了。\n\n\n\n找到一个小哥哥的博客:[yearito](http://yearito.cn)，按照他的教程，花了一天半的时间，改成了现在的样子。\n\n\n\n还要很多问题，比如阅读次数，我还没配置好。\n\n\n\n豆瓣的书单抓不到，所以干脆只留了电影的部分。\n\n\n\n再花时间改进吧\n\n","source":"_posts/给博客加了点趣味.md","raw":"---\ntitle:  给博客加了点趣味\ntags:  hexo\ncategroies: [博客]\n---\n\n---\n\n花了两天时间，本来是想换成极简风格的maupassant，折腾了大半天，还调整了界面颜色什么的，后来想添加功能，但是不会，又回到Next主题了。\n\n\n\n找到一个小哥哥的博客:[yearito](http://yearito.cn)，按照他的教程，花了一天半的时间，改成了现在的样子。\n\n\n\n还要很多问题，比如阅读次数，我还没配置好。\n\n\n\n豆瓣的书单抓不到，所以干脆只留了电影的部分。\n\n\n\n再花时间改进吧\n\n","slug":"给博客加了点趣味","published":1,"date":"2020-07-15T05:50:38.000Z","updated":"2019-03-27T09:11:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcncclla00196y2h0e3gcsp1","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><hr />\n<p>花了两天时间，本来是想换成极简风格的maupassant，折腾了大半天，还调整了界面颜色什么的，后来想添加功能，但是不会，又回到Next主题了。</p>\n<p>找到一个小哥哥的博客:<a href=\"http://yearito.cn\">yearito</a>，按照他的教程，花了一天半的时间，改成了现在的样子。</p>\n<p>还要很多问题，比如阅读次数，我还没配置好。</p>\n<p>豆瓣的书单抓不到，所以干脆只留了电影的部分。</p>\n<p>再花时间改进吧</p>\n","site":{"data":{}},"length":166,"excerpt":"","more":"<hr />\n<p>花了两天时间，本来是想换成极简风格的maupassant，折腾了大半天，还调整了界面颜色什么的，后来想添加功能，但是不会，又回到Next主题了。</p>\n<p>找到一个小哥哥的博客:<a href=\"http://yearito.cn\">yearito</a>，按照他的教程，花了一天半的时间，改成了现在的样子。</p>\n<p>还要很多问题，比如阅读次数，我还没配置好。</p>\n<p>豆瓣的书单抓不到，所以干脆只留了电影的部分。</p>\n<p>再花时间改进吧</p>\n"},{"title":"阿里测试工程师一面（19.3.27）","copyright":true,"date":"2019-03-28T09:55:09.000Z","mathjax":false,"toc":true,"_content":"\n阿里投的是测试工程师，简历面打过一次电话。昨晚是正儿八经的一面，视频面试。\n\n* 状态: 已经回绝（2019年3月29日）\n\n##### 1 自我介绍\n\n##### 2 有实习么\n\n##### 3 项目\n​\t高性能计算：预测任务是否收敛\n​\t\n  3.1 收敛是指什么收敛\n\n​    3.2 业务/技术背景\n​    \t\n​    3.3 收敛不收敛判断条件\n\n​    3.4 是一个软件么，输入输出是什么\n​    \n​    3.5 什么叫好的结果/坏的，具体案例\n\n​    3.6 跑具体的数据？\n​    \t\n​    3.7 哪怕只是一个模型，说一个具体的案例/case\n​    \t\n​    3.8 什么数据，哪儿来的数据\n\n​    3.9 准确率怎么评估\n​    \t二分类准确率\n​    3.10 都是手工打标？真实？\n​    3.11 能不能介绍一下那些公式模型，或者说你的核心工作/责任\n​    \t\n​    3.12 再具体的详细的  核心的模型/算法  准确率怎么验证，挑一个讲一讲\n​    \t\n​    3.13 DT/LR/SVM挑一个讲讲 为什么好\n\n##### 4 主要语言是什么\n​\t4.1 java框架\n​\t\tspring 等\n​\t4.2 spring框架aop / 特性\n​\t4.3 数据库接触过么，有什么\n​\t\tmysql sqlserver\n​\t\t安卓应用mysql\n​\t4.4 数据库如何提高查询效率\n​\t4.5 mysql的缓存机制\n##### 5 有什么问题问面试官\n​\t现在部门工作\n​\t\t岗位类型：无线/搜索/算法/工具平台开发\n​\t\t\n\n","source":"_posts/阿里测试工程师一面（19-3-27）.md","raw":"---\ntitle: 阿里测试工程师一面（19.3.27）\ncopyright: true\ndate: 2019-03-28 17:55:09\ntags: \n - 面经\n - 实习\ncategories: 工作\nmathjax: false\ntoc: true\n---\n\n阿里投的是测试工程师，简历面打过一次电话。昨晚是正儿八经的一面，视频面试。\n\n* 状态: 已经回绝（2019年3月29日）\n\n##### 1 自我介绍\n\n##### 2 有实习么\n\n##### 3 项目\n​\t高性能计算：预测任务是否收敛\n​\t\n  3.1 收敛是指什么收敛\n\n​    3.2 业务/技术背景\n​    \t\n​    3.3 收敛不收敛判断条件\n\n​    3.4 是一个软件么，输入输出是什么\n​    \n​    3.5 什么叫好的结果/坏的，具体案例\n\n​    3.6 跑具体的数据？\n​    \t\n​    3.7 哪怕只是一个模型，说一个具体的案例/case\n​    \t\n​    3.8 什么数据，哪儿来的数据\n\n​    3.9 准确率怎么评估\n​    \t二分类准确率\n​    3.10 都是手工打标？真实？\n​    3.11 能不能介绍一下那些公式模型，或者说你的核心工作/责任\n​    \t\n​    3.12 再具体的详细的  核心的模型/算法  准确率怎么验证，挑一个讲一讲\n​    \t\n​    3.13 DT/LR/SVM挑一个讲讲 为什么好\n\n##### 4 主要语言是什么\n​\t4.1 java框架\n​\t\tspring 等\n​\t4.2 spring框架aop / 特性\n​\t4.3 数据库接触过么，有什么\n​\t\tmysql sqlserver\n​\t\t安卓应用mysql\n​\t4.4 数据库如何提高查询效率\n​\t4.5 mysql的缓存机制\n##### 5 有什么问题问面试官\n​\t现在部门工作\n​\t\t岗位类型：无线/搜索/算法/工具平台开发\n​\t\t\n\n","slug":"阿里测试工程师一面（19-3-27）","published":1,"updated":"2019-04-01T02:14:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcnccllb001c6y2h1jacd3hu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>阿里投的是测试工程师，简历面打过一次电话。昨晚是正儿八经的一面，视频面试。</p>\n<ul>\n<li>状态: 已经回绝（2019年3月29日）</li>\n</ul>\n<h5 id=\"1-自我介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-自我介绍\"></a> 1 自我介绍</h5>\n<h5 id=\"2-有实习么\"><a class=\"markdownIt-Anchor\" href=\"#2-有实习么\"></a> 2 有实习么</h5>\n<h5 id=\"3-项目\"><a class=\"markdownIt-Anchor\" href=\"#3-项目\"></a> 3 项目</h5>\n<p>​\t高性能计算：预测任务是否收敛<br />\n​\t<br />\n3.1 收敛是指什么收敛</p>\n<p>​    3.2 业务/技术背景<br />\n​    \t<br />\n​    3.3 收敛不收敛判断条件</p>\n<p>​    3.4 是一个软件么，输入输出是什么<br />\n​<br />\n​    3.5 什么叫好的结果/坏的，具体案例</p>\n<p>​    3.6 跑具体的数据？<br />\n​    \t<br />\n​    3.7 哪怕只是一个模型，说一个具体的案例/case<br />\n​    \t<br />\n​    3.8 什么数据，哪儿来的数据</p>\n<p>​    3.9 准确率怎么评估<br />\n​    \t二分类准确率<br />\n​    3.10 都是手工打标？真实？<br />\n​    3.11 能不能介绍一下那些公式模型，或者说你的核心工作/责任<br />\n​    \t<br />\n​    3.12 再具体的详细的  核心的模型/算法  准确率怎么验证，挑一个讲一讲<br />\n​    \t<br />\n​    3.13 DT/LR/SVM挑一个讲讲 为什么好</p>\n<h5 id=\"4-主要语言是什么\"><a class=\"markdownIt-Anchor\" href=\"#4-主要语言是什么\"></a> 4 主要语言是什么</h5>\n<p>​\t4.1 java框架<br />\n​\t\tspring 等<br />\n​\t4.2 spring框架aop / 特性<br />\n​\t4.3 数据库接触过么，有什么<br />\n​\t\tmysql sqlserver<br />\n​\t\t安卓应用mysql<br />\n​\t4.4 数据库如何提高查询效率<br />\n​\t4.5 mysql的缓存机制</p>\n<h5 id=\"5-有什么问题问面试官\"><a class=\"markdownIt-Anchor\" href=\"#5-有什么问题问面试官\"></a> 5 有什么问题问面试官</h5>\n<p>​\t现在部门工作<br />\n​\t\t岗位类型：无线/搜索/算法/工具平台开发<br />\n​</p>\n","site":{"data":{}},"length":488,"excerpt":"","more":"<p>阿里投的是测试工程师，简历面打过一次电话。昨晚是正儿八经的一面，视频面试。</p>\n<ul>\n<li>状态: 已经回绝（2019年3月29日）</li>\n</ul>\n<h5 id=\"1-自我介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-自我介绍\"></a> 1 自我介绍</h5>\n<h5 id=\"2-有实习么\"><a class=\"markdownIt-Anchor\" href=\"#2-有实习么\"></a> 2 有实习么</h5>\n<h5 id=\"3-项目\"><a class=\"markdownIt-Anchor\" href=\"#3-项目\"></a> 3 项目</h5>\n<p>​\t高性能计算：预测任务是否收敛<br />\n​\t<br />\n3.1 收敛是指什么收敛</p>\n<p>​    3.2 业务/技术背景<br />\n​    \t<br />\n​    3.3 收敛不收敛判断条件</p>\n<p>​    3.4 是一个软件么，输入输出是什么<br />\n​<br />\n​    3.5 什么叫好的结果/坏的，具体案例</p>\n<p>​    3.6 跑具体的数据？<br />\n​    \t<br />\n​    3.7 哪怕只是一个模型，说一个具体的案例/case<br />\n​    \t<br />\n​    3.8 什么数据，哪儿来的数据</p>\n<p>​    3.9 准确率怎么评估<br />\n​    \t二分类准确率<br />\n​    3.10 都是手工打标？真实？<br />\n​    3.11 能不能介绍一下那些公式模型，或者说你的核心工作/责任<br />\n​    \t<br />\n​    3.12 再具体的详细的  核心的模型/算法  准确率怎么验证，挑一个讲一讲<br />\n​    \t<br />\n​    3.13 DT/LR/SVM挑一个讲讲 为什么好</p>\n<h5 id=\"4-主要语言是什么\"><a class=\"markdownIt-Anchor\" href=\"#4-主要语言是什么\"></a> 4 主要语言是什么</h5>\n<p>​\t4.1 java框架<br />\n​\t\tspring 等<br />\n​\t4.2 spring框架aop / 特性<br />\n​\t4.3 数据库接触过么，有什么<br />\n​\t\tmysql sqlserver<br />\n​\t\t安卓应用mysql<br />\n​\t4.4 数据库如何提高查询效率<br />\n​\t4.5 mysql的缓存机制</p>\n<h5 id=\"5-有什么问题问面试官\"><a class=\"markdownIt-Anchor\" href=\"#5-有什么问题问面试官\"></a> 5 有什么问题问面试官</h5>\n<p>​\t现在部门工作<br />\n​\t\t岗位类型：无线/搜索/算法/工具平台开发<br />\n​</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckcncclki00096y2had4z6m5k","category_id":"ckcncclkc00046y2h4ti035id","_id":"ckcncclko000g6y2hbv7z5syh"},{"post_id":"ckcncclk400016y2hf39d4xx5","category_id":"ckcncclkc00046y2h4ti035id","_id":"ckcncclkq000j6y2h9h9q4xw3"},{"post_id":"ckcncclk900036y2hhxk57ga2","category_id":"ckcncclkk000b6y2h41m739n1","_id":"ckcncclks000m6y2hg2x474fw"},{"post_id":"ckcncclkp000i6y2he0s88dvt","category_id":"ckcncclkp000h6y2hcgcg607n","_id":"ckcnccll0000r6y2hen9t0i8c"},{"post_id":"ckcncclke00066y2h4vr35byo","category_id":"ckcncclkp000h6y2hcgcg607n","_id":"ckcnccll3000v6y2h149bemmt"},{"post_id":"ckcncclkl000c6y2h7igb6ey2","category_id":"ckcncclkp000h6y2hcgcg607n","_id":"ckcnccll500116y2h87ak5v64"},{"post_id":"ckcnccll2000u6y2hd5bmgl5x","category_id":"ckcncclkp000h6y2hcgcg607n","_id":"ckcnccll900156y2h8tji2b3y"},{"post_id":"ckcncclkn000f6y2h71bm58m2","category_id":"ckcncclkp000h6y2hcgcg607n","_id":"ckcnccllb001a6y2h3t1a5tq8"},{"post_id":"ckcnccll4000y6y2h4o1w3guk","category_id":"ckcncclkp000h6y2hcgcg607n","_id":"ckcnccllc001d6y2hehhm2myb"},{"post_id":"ckcnccll500126y2h1ou41wvl","category_id":"ckcncclkk000b6y2h41m739n1","_id":"ckcnccllc001f6y2h0q34423q"},{"post_id":"ckcncclkv000o6y2h4el3e504","category_id":"ckcnccll500106y2h0te67fr4","_id":"ckcncclld001i6y2hchlj31wv"},{"post_id":"ckcnccllb001c6y2h1jacd3hu","category_id":"ckcnccll500106y2h0te67fr4","_id":"ckcncclle001l6y2hbbt1457c"},{"post_id":"ckcncclkz000q6y2h6m7a6vfe","category_id":"ckcncclla00186y2h2eaigxvr","_id":"ckcncclle001n6y2h2r2u2c42"},{"post_id":"ckcnccll700146y2h8kmzgin7","category_id":"ckcncclla00186y2h2eaigxvr","_id":"ckcnccllf001p6y2h5aeh1hur"}],"PostTag":[{"post_id":"ckcncclk900036y2hhxk57ga2","tag_id":"ckcncclkg00076y2h48er1sd4","_id":"ckcncclkn000e6y2hh8rqh0n2"},{"post_id":"ckcncclke00066y2h4vr35byo","tag_id":"ckcncclkm000d6y2ha2exerf7","_id":"ckcnccll0000s6y2hau8e4o4f"},{"post_id":"ckcncclke00066y2h4vr35byo","tag_id":"ckcncclkr000k6y2hc6o59epr","_id":"ckcnccll3000w6y2hbhhn9eyp"},{"post_id":"ckcncclkv000o6y2h4el3e504","tag_id":"ckcncclkm000d6y2ha2exerf7","_id":"ckcnccll5000z6y2h1kwf66gk"},{"post_id":"ckcncclkv000o6y2h4el3e504","tag_id":"ckcncclkr000k6y2hc6o59epr","_id":"ckcnccll600136y2hd1h9btwo"},{"post_id":"ckcncclki00096y2had4z6m5k","tag_id":"ckcncclkx000p6y2h8raddkd9","_id":"ckcncclla00176y2h4hukg0sy"},{"post_id":"ckcncclkj000a6y2hd7kzdz47","tag_id":"ckcnccll3000x6y2h81jih6hw","_id":"ckcnccllb001b6y2h265cfll3"},{"post_id":"ckcncclkl000c6y2h7igb6ey2","tag_id":"ckcnccll900166y2h6y4jgcsb","_id":"ckcnccllc001g6y2h00aif60u"},{"post_id":"ckcnccllb001c6y2h1jacd3hu","tag_id":"ckcncclkm000d6y2ha2exerf7","_id":"ckcncclld001j6y2h8outatb5"},{"post_id":"ckcnccllb001c6y2h1jacd3hu","tag_id":"ckcncclkr000k6y2hc6o59epr","_id":"ckcncclle001m6y2hhbqi2qw0"},{"post_id":"ckcncclkn000f6y2h71bm58m2","tag_id":"ckcnccllc001e6y2helre9n8w","_id":"ckcnccllf001q6y2h9fvq2102"},{"post_id":"ckcncclkn000f6y2h71bm58m2","tag_id":"ckcncclld001k6y2h1er8f8w8","_id":"ckcnccllf001r6y2hgdyv2odk"},{"post_id":"ckcncclkp000i6y2he0s88dvt","tag_id":"ckcnccll900166y2h6y4jgcsb","_id":"ckcnccllf001t6y2hegln9azt"},{"post_id":"ckcncclkr000l6y2h4p5wcsgx","tag_id":"ckcnccll900166y2h6y4jgcsb","_id":"ckcnccllg001w6y2h3p3wann4"},{"post_id":"ckcncclkr000l6y2h4p5wcsgx","tag_id":"ckcnccllg001u6y2h0bwb2ot2","_id":"ckcnccllg001x6y2h2napeuan"},{"post_id":"ckcncclkz000q6y2h6m7a6vfe","tag_id":"ckcnccllg001v6y2h4cjjg58j","_id":"ckcnccllh001z6y2h5jra1n5f"},{"post_id":"ckcnccll2000u6y2hd5bmgl5x","tag_id":"ckcnccll900166y2h6y4jgcsb","_id":"ckcncclli00216y2h5w2f9y4h"},{"post_id":"ckcnccll4000y6y2h4o1w3guk","tag_id":"ckcnccllh00206y2h9zzb98zp","_id":"ckcnccllj00246y2h5ohh4zhf"},{"post_id":"ckcnccll4000y6y2h4o1w3guk","tag_id":"ckcncclli00226y2hadc9e5jy","_id":"ckcnccllj00256y2h0yiohk3o"},{"post_id":"ckcnccll4000y6y2h4o1w3guk","tag_id":"ckcncclkr000k6y2hc6o59epr","_id":"ckcnccllj00276y2hcekwd62n"},{"post_id":"ckcnccll500126y2h1ou41wvl","tag_id":"ckcnccllj00236y2hhajoh93f","_id":"ckcnccllk00296y2hdr2a699d"},{"post_id":"ckcnccll500126y2h1ou41wvl","tag_id":"ckcnccllj00266y2hf44r13yj","_id":"ckcnccllk002a6y2h5kjl885f"},{"post_id":"ckcnccll700146y2h8kmzgin7","tag_id":"ckcnccllg001v6y2h4cjjg58j","_id":"ckcncclll002d6y2h0yw89st3"},{"post_id":"ckcnccll700146y2h8kmzgin7","tag_id":"ckcnccllk002b6y2hg8pd1iyd","_id":"ckcncclll002e6y2haez1en4d"},{"post_id":"ckcncclla00196y2h0e3gcsp1","tag_id":"ckcnccllg001v6y2h4cjjg58j","_id":"ckcnccllm002f6y2hes167vsg"}],"Tag":[{"name":"总结","_id":"ckcncclkg00076y2h48er1sd4"},{"name":"面经","_id":"ckcncclkm000d6y2ha2exerf7"},{"name":"实习","_id":"ckcncclkr000k6y2hc6o59epr"},{"name":"生活","_id":"ckcncclkx000p6y2h8raddkd9"},{"name":"生活， 闲聊","_id":"ckcnccll3000x6y2h81jih6hw"},{"name":"leetcode","_id":"ckcnccll900166y2h6y4jgcsb"},{"name":"机器学习","_id":"ckcnccllc001e6y2helre9n8w"},{"name":"面试复习","_id":"ckcncclld001k6y2h1er8f8w8"},{"name":"刷题笔记","_id":"ckcnccllg001u6y2h0bwb2ot2"},{"name":"hexo","_id":"ckcnccllg001v6y2h4cjjg58j"},{"name":"剑指offer","_id":"ckcnccllh00206y2h9zzb98zp"},{"name":"刷题","_id":"ckcncclli00226y2hadc9e5jy"},{"name":"思考","_id":"ckcnccllj00236y2hhajoh93f"},{"name":"闲聊","_id":"ckcnccllj00266y2hf44r13yj"},{"name":"搭建环境","_id":"ckcnccllk002b6y2hg8pd1iyd"}]}}