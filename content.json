{"pages":[{"title":"收录精品链接","text":"设计 Iconfont: 大而全的矢量图标库 TemplateMonster: 网站模板与主题 Behance: 全球最大的设计社区 编程学习 CSS-Tricks: 优质的开发者文章，不仅仅是CSS Linux 命令手册: Linux命令查询与学习资料 工具 Send Anywhere: 远程发送文件","link":"/bookmark/index.html"},{"title":"","text":"关于我 95后程序媛，读书ing，坐标合肥，喜欢电影，做有趣的事情。 关于本站 Hola 这是图图试着玩的小空间 看到别人满满的博客也很羡慕呢 也想给自己留下的什么。 欢迎你来玩 其他工具: Hexo: 基础博客框架 Next: 基于Hexo的博客主题 LeanCloud: 数据云存储与后端支持 Valine: 文章评论组件 友情链接 yearito ：博客深度优化都是参考了这位博主","link":"/about/index.html"},{"title":"分类","text":"","link":"/categories/index.html"},{"title":"resume","text":"","link":"/resume/index.html"},{"title":"热门文章Top 10","text":"var APP_ID = 'SQW06Bm5E8mze0RqXbF4MsOR-gzGzoHsz'; var APP_KEY = 'IRsxQuHl1rFJmjrdlwHsN1iE'; //AV.initialize(APP_ID, APP_KEY); AV.init({ appId: APP_ID, appKey: APP_KEY }); var query = new AV.Query('Counter');//表名 query.descending('time'); //结果按阅读次数降序排序 query.limit(10); //最终只返回10条结果 query.find().then( response => { var content = response.reduce( (accum, {attributes}) => { accum += `热度 ${attributes.time} ℃${attributes.title}` return accum; },\"\") document.querySelector(\"#post-rank\").innerHTML = content; }) .catch( error => { console.log(error); }); #post-rank { text-align: center; } #post-rank .prefix { color: #ff4d4f; }","link":"/top/index.html"},{"title":"标签","text":"","link":"/tags/index.html"}],"posts":[{"title":"2019年阶段整理","text":"请输入密码以阅读这篇私密文章。 9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daeb4d305f1eadb1b9428ddfd79889d1e0420a5e886e56642e50c0c70fcb74bc0495c225298f6c69ce5db8aa0057411ab36de00b2314e0c95e2de93314f93f8aba2f9cd4b4ad65eaf030140791e1dd20b59224726b5d38b7887239aec043c35538135720efe71647fd059ed6fd6285e2508834ab252107c7c12af3aaf60b02777d801fd282552a4b87f50476bd26fa9d54afd026d9c02c329720fe83bb9abc33e97e128132a1a0ad665e986374bb95206c68412022b900f9687269bf568d1ea9c0b8a6f12ba23c65b32e76c8ad6bfe361d8f8173041af1b2c9d677fbcac3bea22633709afc2648f58e39e9f9362fd9f4a5687c3bfcdf9cacb956b15e15e9afdbbbea66e3e26381bcb3ef6852de732bdf75cd199af448abcab794c6293a476384632053c8a0396500041e2ac029840d45c6bdf36a353dc45ea28d4cebd7240e70a0ad22f6a36326eb88646bf3593f0e9291cb682a9d162245b9df57f25010c4907ee90cdf6d397692052ccd1872d64cfaf8b3bb32c3f622eb0dbd0b682b41c3b5acd3bc05a0791630a1a1f2597aeac7b41a190a936a26eabdffed567bf2f28490e8efd9ddb54b20f95bac7651e92f5d397de453761517fb7a7765fbe4afc4c96ece8a3587a67825aa478ef6c19c041bdb7530f40873db0a1478b2fcf110cca4af9dc4392f01dc00790ff1ce88ee04ee6ecaca45f5997a33a6250132991c06fadcba921ff69ae4a5c0f902ed7fbcfccc684a91802098d60c9b9140ca9c3d72518092b926c7c7ba8d506528b6ead63e69d9b20656ad9da5fa0cedce8847363d03162df327d074d232fabf383b7083211d59111cb23fc61a911bc5b50c274ce26aa818bb7fda4415e2057bb9c2bf5b5dfc3b9c5fc160a779d2c486812395d6266b2609ea02c65a3e7d3eb0d6f4bbd1af2870dafcf1a3883a34de917983553a1f0b61cb755406ac73c45ee8eb3d7e3298c041e38be5d7420ad42772791532f5aa0d7c0058d16b94a5892aa8b1bd1e495f51f82091c7fc9c46bdd8ae7c9d837584d7ba067b0e6b81ad293e8a54276a54776c05281debc62325b8fdc3e11d9a4cd071455aa4f223beb19b7f49aab3eb711194b3cd93dcca5438d37cd4960d57494caa83d5206ce6d4c52dfde3435b2caf973d7477664e37fa50f3e17493d3a425d8cdf2a8710e508f9790f10617dd218ad4499477d859d14f9f745274cdf76a3bd7fefb9b0eaff9b33dedf6df5a89564038d2d944c662cca366a571b2505ab61ee06ef2932c21313e6b767628d0ce19cefc62ae62b54218e2298f5331c270f0fa90636a765b3bd22b4ffcf22dfe97492fcb6a061a080190a767145b5d8c2e67a1fa379141747740321dd8ad560462d7d02a6a2195e35641a8415e08f5c6b2a6767f73e56aaf7c8338348725b7e1fa956b8bdde3a8ebfa4ed1e38a5386ec0018ef1994ee94545f04073afc7d7f1764756969f75f7be57fa525ccd37f6f479b46d1ebfc0d19ec4cd38a87b0a87b8d423684d14a7c629d7239931c1e77a58eaa88e03a98976e82bff522c94b796379106312653728adeb20cc1ae2043d2de0650d71cb0c25f5aa3d13b6f6b72bcf4d1437915e21cb5367d56f2ed812d2fd99bafe1c52069b5b324146a05499843fb6d9f968958c34c623ea016cc5887708b4f7cb70c101570e7e09f03cad97aab9b8fa8e51c50cfa0a354d2d94040b222ab7edfb1690460d6857f6abc8fe3bf0f3dba78be409b133239628a3bfc1273ca7c3021118f6b0eefe4aec1b43935a54a9d37356ea47f37b82a3faa8649a2e47fc249847d6a12003bc1c44655be5d3631f8467f787c37596faf1b7e25f561932fcb46b2fb43c9cc2f055ba16ac8f9d0e50ae1bd508a72b6e1dad8d6df0dfd277d1f1fa0c9b2343835daefb8bc139816d0c62c7a787f10b5ed2955320d3e221ce6be7ba419b6084ee364aef0e12482f8ce2ec750cf5f3c6ae974ef3fbb3b1253c5128f80434f9dc25f2b7e406a7f6452249589461154d3718f222e137b1859fedd1088c83bf813a8402ec950848443eec013154dd6ee717caebb334a5afd812d9ac6251a9eb3054c2b87e066e74950c75da68b6bb0b35e27316809944c6138bfdfa7d981f8144a8dde4cde9f03ee50c5afe9bbd3c231cd497ce84bbd304de77a7cb97834bf97155d8fd8f84b5a6ee3906762d297da79e9be32fde14b46e4e386a54f2fa3e74528825f495f6bfc450a4bb39858dc8535cf3bbf36fca361616c8b065326a90218324586be4c9e9c5ec3f156b959b46412992eb2def5d71d4074418672285158d6f7f827eac5dd72fd00688e845f9e1687dbc13779da4a3e6d8e32e4273f48f05ef544b76fadea03265eec957ca18ecbdb3218f69302872da0c228b47dcc029406862350fce0d6c858488791a4b9b30abdd09f66c8c8e8e01e6aa6d7030e08b2cfc6d720a34df6e9198d365fdd3dfbcfc4c123538167a3563dd613779b1c4b3d7cb4828bb629068e674a4e4b2cb8857487042c26d94127d87353d3edaf45a8e3c761bd1c926c35f73eabe32b1d7e57874de3ef5a8b8488dae02c55074e9f76e882bd5746cc5251e310c1adf5797b979a896e308d87de4324952f694ed12f7c506f7fa66cb7177c6a75bd048140e1c390e4aeca4e3ec2c2a8658ddbd731e39ab5dbb48f989f437063281bc358188241968e5add414dce3f27bd413944c40dd75eb5f9474188eeb7df34c1829ac934e55d8f76815fbf44d9840f6d40888b9ba34cd037d90973a68272e6fec41d14256d3cccde588e176aff2dd4a6b629e64a4ef0fa909123c316bfc9fbb8769c770ff5272d11ffa067765841a2f91b19da9cfeb96fa1967e5956572263b1b0e3142945c588fa5aef63cad031711e457bba97a049fdda3d9143e7b970f6a18b91224bcdb934d8ad96305e4aec57b7aba4af4edc17ec59cdc936b14c754425a7ed572ce7f49805d7a485a5b04623926b276a7ec086a4b3ab495370fb67933df844545d7e91278333b235f9e00ffb2e83ade64feedfc90a162c52f7fd0b04cf129806f7eb6554f877439cf8412bc590c3f085b0d45041203315ef8540536e0668ecb461785431202e45537524e9343af40c177616f25ee2fc558123cbd61d7e096fe060618186430d5d48581bcb01bbefd974ec697c9a53efbb18905f1b813d8068ace48b1b68ba36973b2e68ab4f64793393cc05fa892f252c38b360d508ea4c58a00bcbab7d62b41357d8234ef3ddbf2312aa4de6e621751f4fb1e4992676583f694a95483536358c376207a85c4f722b2a85d5569918ec6c098f8b006aeca0a1fdccd4e17123f778d1aed6190dde081c56628f522eda60297655c5f7caef7e273c5a2e8abe38ee6d675ab23a83440861b993f77d2557d31ddf46a11d428166f73ecfc06e36840acc73b8c9e6f00c6695d1e7304f98b5aa583f99d2cb5474b041a68e5afbc1079030604b8041cd1522e5c1fc8a342067a743e589fce74a5675477779b58f8df25d69b96c12e8bfb3b08176d07e9d78b1cd3cd9f35b9abe841f660a1775a5332ccb5222e92bb9cbcda7055d0c94a217540789c6523c722f27ce4ca0fa642459cf575111c4bccfa8345a4a2eff032e190d86ba0162333a6033c6935d5fe1d780ded691b277a09c4540af5abdeda44cffcddeff5cb96b7d562b1a6f7961c479dd367c7ddfd9e10735c6e852a680f0fdbc6f1d008ff84707bab0c8f3c6ddb668cfb2585c65e5d7fdf88694b889f397510ac7bc80dc61efda750b1008035317418c174ecf8a14502b1ce9213e7cb92a6e4939b707b766e30b290fd92b4a81416e85c47c876c8e131fa5039505b32f6a6c40f6a89a070897de4bed4f2cf70eaf5883f8adda7bf8d0e3130b721190815ad65ff7eac48fe1ecfdee5e1e75e7f2bc938d00ec814871035811c7a719d477ae17e678fcd1dce6115a616e42c3ccbffa616d88df7be2dc5788c081de92f33139227a3de8602e83c3bcc5074d770a76c56c205e7d5de12227f32fd059ead90de70315e9d52fe540f80f57544e811b26ca402df49e11110fc05d6fe402aea8b50444a06e21ff1cd02ec356a7dbdeed57ac7ca03111254db6b0fe05bbe66f8dbee017ad0dbb8285a58b379a7fd22acbc1a514deae51d84c64decad7004ebcff81032b21dfdd39ea3a6368420476374e4eee2c8b2630f958c","link":"/2019/11/01/2019%E5%B9%B4%E9%98%B6%E6%AE%B5%E6%95%B4%E7%90%86.html"},{"title":"2019年3月11日 暑期实习之腾讯面试","text":"1. 基本情况 2019年暑期实习提前批-腾讯安全云（内推自师姐的闺蜜） 2. 面试内容（30分钟） 自我介绍 介绍你的研究方向和项目 数据不平衡问题怎么解决的 如何降维，考虑用什么方法，为什么用这个方法 使用了什么算法， 哪一个效果好，为什么效果好 如何检测异常值，如何处理误判 如何处理过拟合问题 描述L1,L2，本质和区别 机器学习基本算法了解哪些 请介绍SVM SVM对偶问题 核函数有哪些 哪些可以成为核函数（半正定） 随机森林，gbdt，xgboost的区别与关系 深度学习算法了解哪些 描述CNN 计算卷积之后的矩阵大小，一共有多少个参数 SQL in join时如何解决数据不均衡的问题 3. 总结 首次面试，电面不考算法题。主要问项目细节和基础知识。 只争取到两天复习时间，准备得很不充分 准备不充分（自我介绍，项目介绍，项目细节要自己过几遍） 基础不扎实，卷积怎么算都不记得了 很多时候，如果面试官问到一个比较基础的问题，你没答上来，那你就跪了，所以回答之前要三思熟虑，别急着回答，好好想一想。 好好准备吧，后面多投一投，至少面个15家公司再说 Offer = 0.3心态 + 0.5实力 + 0.2运气，缺一不可 越早开始准备越好，准备的越充分越好 切忌眼高手低。前期尽量多利用小公司的面试机会来锻炼自己，积累经验。 在面试的过程中找准自己的定位，并且适当的根据面试情况及时调整自己的定位和目标，保持信心，但不能盲目自信。不管是大公司还是小公司，尽早拿到第一个offer。","link":"/2019/03/14/2019%E5%B9%B43%E6%9C%8811%E6%97%A5-%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0%E4%B9%8B%E8%85%BE%E8%AE%AF%E9%9D%A2%E8%AF%95.html"},{"title":"2020年过去一半了","text":"请输入密码以阅读这篇私密文章。 9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daeb4d305f1eadb1b9428ddfd79889d1e0420a5e886e56642e50c0c70fcb74bc0495c225298f6c69ce5db8aa0057411ab36de00b2314e0c95e2de93314f93f8aba2f9cd4b4ad65eaf030140791e1dd20b59224726b5d38b7887239aec043c35538135720efe71647fd059ed6fd6285e250881a57b28ef930476e240b036c62ee4bc64949a893e9f2bae0d6f59044cde086b2502cee1408e605078c8c3528c86e0a7752fd5db6eafa9f22c4277ee6c3477d32f6cf6fa14fb80523b826b2d41de540f337aa0d7c6250f8e040001a0b5a4c52e09b90680c747094ba67ea6860247d3753206b4b29bc5d3b3a3d4a8d51a2ae7dc5df88d847614ace846066993d9c14d251122d70731b5a18c3a8372ae1f8345dcef07e7eeb54e168b59ab1efe0938f61914676f0c21e65fc094933bd313c8c2ab6","link":"/2020/07/15/2020%E5%B9%B4%E6%96%B0%E6%96%B9%E5%90%91.html"},{"title":"2019年第一季度总结","text":"请输入密码以阅读这篇私密文章。 9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daeb4d305f1eadb1b9428ddfd79889d1e0420a5e886e56642e50c0c70fcb74bc0495c225298f6c69ce5db8aa0057411ab36de00b2314e0c95e2de93314f93f8aba2f9cd4b4ad65eaf030140791e1dd20b59224726b5d38b7887239aec043c35538135720efe71647fd059ed6fd6285e250880525ef9c7648ff207a4bfb82ac5ffd905153c7aeff92a012f371203bf1cdb45591b1493150b3f66667ae11cf5bd7c1e174628c7154c4fa00557fb0df627c5945f92c18baa2bbb737b2786d5d3261c038348408bb6643a8b1e8ad68cdb886c8ec0d5080037fd3fef4ad29a63b957799728bc92ad05f05040e157863b2c08cb4fb54b5b9857ff92498bb9586a123df440f2c88f5947b2d2488682fbbda92978efbf35e2228308a911b5dcc57c11ff45aa7b3ed28d6752519be9f7997820b9187a6995a6b42858b403eabc8698ace8124c1f231b7467d1dab1beb1537b96c6e02d4adeaa2d27b00a07751f861ce5ad46923317c98b53ab2b43b01598328e222291efbdce7962e74f5a6661f0c809337fcbccc1ef9eee764ddc879aac48d2e928a5858dd87b6b2726322d22dfe1b797c07c0ba22397a86fab1043e237a3417cba790a6cfe680b9855e8fdbf0652630eb7162830166c23420c7abb1e3f415e5074ff28d844790ec07c1ec5f63d70b839ed44ddc8910f94761bfe8f032e8f6e273773cc5e3bdca53fac8cc5aceaaa151edf21d46e35dde7964b5f8154e8c20054d1ef5fca86a34145a7415fe9c7be31ba97462cd66fc33da87818b58d7d29e7eee259558aa2a013220d6243478615656f50c5006637ab762bfa2c3e2b0ce1b2720f706388f73cb1804acdd214d5c2039572f38c8779489c903d3d2e5713cf1ef4834e960864fbad2fd07b69b692c127c0c8b0c146d4641a7dd685e4e50db66d6e79fcf25da61f8db60c714c59b690277a725c947e467ebbd98fd2a1c788a447029136745da7a14b101a71edb07da006c55ddee464e01efbf7ef4b1d5e594030ecf5e206c220a050bf948a63157ab3f4d92433767ca6e9984ac50efd6ddcd3458a504b341a3ea25ceb7c61352b62a1d1d663fe1b237ed7479e47f858baf064cf3cc2e77efc51a99d09ea2a8190327fd76f461ab5cfd0814a3187389c93cbb1619bd59cf58d88c029bc46203ec9502c0e737ab511b92859dee1429be61036f994590502cbe6ca805d92f141c46daefccdb1709a90728b82c1cf233b72c3717c2bdd597dc3d209fd073f77f66e81b5cf2ac2a14cf13ecac48c618547eed33671a06c26f26c2541dae0bd38cb999754a245b733067963ba62d05e5d2116b7ad7ee9e16ec0a14d2446818140959cc30283815d7eda9279b96416c183e24c80e237a3027027a45149360db69d467c0e4dbb6bef4cbed1647fa1a90e87681818653cbe3049991d9f66409ec989a21995b2618924f44a41278da230078b5216afee97dad2320ba6a13fce4bb8f9bf52f0f820216bce54aec7966d2f3d0fd7a109565df7ac30271f21029b512d241cc55d9b57825d330fe","link":"/2019/04/01/2019%E5%B9%B4%E7%AC%AC%E4%B8%80%E5%AD%A3%E5%BA%A6%E6%80%BB%E7%BB%93.html"},{"title":"Leetcode-2 两数相加（Add Two Numbers）","text":"1. 题目 给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。 如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。 您可以假设除了数字 0 之外，这两个数都不会以 0 开头。 示例： 输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4) 输出：7 -&gt; 0 -&gt; 8 原因：342 + 465 = 807 2. 解题思路 简单题，注意链表操作和进位即可 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def addTwoNumbers(self, l1: ListNode, l2: ListNode) -&gt; ListNode: head = ans = ListNode(0) is_carry = False while l1 != None and l2 != None: num = l1.val + l2.val if is_carry: num = num + 1 if num &gt;= 10: num = num % 10 is_carry = True else: is_carry = False ans.next = ListNode(num) ans = ans.next l1 = l1.next l2 = l2.next while l1 != None: if is_carry: if l1.val + 1 &gt;= 10: ans.next = ListNode((l1.val + 1) % 10) is_carry = True else: ans.next = ListNode(l1.val + 1) is_carry = False else: ans.next = ListNode(l1.val) l1 = l1.next ans = ans.next while l2 != None: if is_carry: if l2.val + 1 &gt;= 10: ans.next = ListNode((l2.val + 1) % 10) is_carry = True else: ans.next = ListNode(l2.val + 1) is_carry = False else: ans.next = ListNode(l2.val) l2 = l2.next ans = ans.next if is_carry: ans.next = ListNode(1) is_carry = False ans = ans.next res = [] while head != None: res.append(head.val) head = head.next # return \"\".join([\"\"+str(each) for each in res])[:-1] return res[1:] 3. 总结/分类 链表操作","link":"/2019/04/01/Leetcode-2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%EF%BC%88Add-Two-Numbers%EF%BC%89.html"},{"title":"LR 机器学习复习笔记-1","text":"1. 基本原理 逻辑斯特回归，Logistic Regression，二分类问题 算法性质：他的输出永远在0到1之间 适用情况：标签y取离散值 如何拟合参数的： 将根据参数得到的计算值映射到0-1区间 2. 推导公式 训练集：$ { ( x ^ { ( 1 ) } ,y ^ { ( 2 ) } ) , ( x ^ { ( 1 ) },y ^ { ( 2 ) } ),…,( x ^ { ( m ) },y ^ { ( m ) } ) } $ 数据范围：$ x \\in [ x_0 , x_1 , … , x_n ] ^T , y \\in { {0,1} } ​$ LR映射函数 sigmoid : $ h_\\theta(x) = \\dfrac{ 1 } { 1+e^{ - \\theta^T x} } ​$ 损失函数：Cost(hθ(x),y)=−ylog⁡(hθ(x))−(1−y)log⁡(1−hθ(x))Cost(h_\\theta(x),y) = -y \\log(h_\\theta( x ) ) - (1-y) \\log(1-h_\\theta(x) )Cost(hθ​(x),y)=−ylog(hθ​(x))−(1−y)log(1−hθ​(x)) PS:为什么不用线性模型的平方和（MSE） 答：将平方和带入 $ h_\\theta(x) $ 会得到一个非凸函数（non-convexfunction），非凸函数影响梯度随机算法寻找全局最小值 代价函数：$ J(\\theta)= \\dfrac{ 1 } { m } \\sum^m_{ i=1 } Cost(h_\\theta(x^{ (i ) } ) - y ^ { ( i ) } ) $ 代价函数与损失函数关系：个体与总体的关系 3. 代价函数代码 12345678import numpy as npdef cost(theta, X, y)： theta = np.matrix(theta) X = np.matrix(X) y = np.matrix(y) first = np.multiply(-y, np.log(sigmoid(X*theta.T))) second = np,multiply(1-y,np.log(1-sigmoid(X*theta.T))) return np.sum(first-second)/(len(X)) 4. 如何求得使代价函数最小的参数 梯度下降算法: $repeat { { \\theta_ j:= \\theta_j - \\alpha \\frac { \\partial } { \\partial_{ \\theta_j } } J (\\theta) } } ;​ $ $ Want \\min _\\theta J(\\theta) ​ $: $ repeat { { \\theta_ j:= \\theta_j - \\alpha \\frac{ 1 } { m } \\sum_{ i=1 }^m (h_\\theta( x ^ { i } ) - y^{ ( i ) } ) } x_j^ { ( i ) } $ 5. 如何理解梯度下降 参考这篇文章：深入浅出–梯度下降法及其实现 复习的时候脑子一时短路，想不明白梯度下降的原理了 6. 面试常常问到的问题 后面再补","link":"/2019/03/14/LR-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html"},{"title":"Leetcode -1 两数之和（Two Sum）","text":"1. 题目 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。 示例: 给定 nums = [2, 7, 11, 15], target = 9 因为 nums[0] + nums[1] = 2 + 7 = 9 所以返回 [0, 1] 2. 解题思路 2.1 朴素解法（暴力遍历） 通过两次循环，每次循环遍历列表，这种算法的时间复杂度是 O(n^2) 2.2 哈希存储 思路：利用hash表，key：当前值，value：索引 解题方法：遍历数组时，查询hash表中，是否存在target - nums[i]。 若有，返回当前索引和存在的key的value； 若不存在，则将当前值和索引存入hash表中 python中的字典就是天然hash表；c++中的unorder_map； Java中HashMap&lt;Integer,Integer&gt; hm = new HashMap&lt;Integer,Integer&gt;(); 代码如下： 123456789class Solution: def twoSum(self, nums: List[int], target: int) -&gt; List[int]: nums_hash = {} for each in range(len(nums)): dif = target - nums[each] if dif in nums_hash: return [nums_hash[dif], each] else: nums_hash[nums[each]] = each 3. 总结/分类 数据结构的巧妙利用","link":"/2019/04/01/Leetcode-1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%EF%BC%88Two-Sum%EF%BC%89.html"},{"title":"Leetcode-3 无重复字符的最长子串 Python","text":"1. 题目 给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。 示例 1: 输入: “abcabcbb” 输出: 3 解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。 示例 2: 输入: “bbbbb” 输出: 1 解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。 示例 3: 输入: “pwwkew” 输出: 3 解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。 请注意，你的答案必须是 子串 的长度，“pwke” 是一个子序列，不是子串。 2. 解题思路 2.1 朴素解法，暴力搜索 为了枚举给定字符串的所有子字符串，我们需要枚举它们开始和结束的索引。假设开始和结束的索引分别为 iii 和 jjj。那么我们有 $0 \\leq i \\lt j \\leq n $ ,$0≤i&lt;j≤n $（这里的结束索引 j 是按惯例排除的）。因此，使用 iii 从0到n - 1,n−1 以及 j 从 i+1 到 n 这两个嵌套的循环，我们可以枚举出 s 的所有子字符串。 要检查一个字符串是否有重复字符，我们可以使用集合。我们遍历字符串中的所有字符，并将它们逐个放入 set 中。在放置一个字符之前，我们检查该集合是否已经包含它。如果包含，我们会返回 false。循环结束后，我们返回 true。 2.2 滑动窗口 利用python 的字典，或者java中的Map&lt;Character, Integer&gt; map 存储每个字符出现位置的索引。 使用变量end来记录上次该字符出现的位置长度，删掉从该字符前一次出现，及其以前的重复出现，也可以理解成不重复字符串的开始位置； 使用变量m来记录不重复字符出现的最大长度； each是遍历字符串的当前index 12345678910111213class Solution: def lengthOfLongestSubstring(self, s: str) -&gt; int: if len(s) == 0 : return 0 end = 0 dic = {} m = 0 for each in range(len(s)): if s[each] in dic : end = max(end,dic[s[each]]+1) dic[s[each]] = each m = max(m,each-end+1) return m 第二种理解思路： 求无重复字符的最长子串的长度，从头到尾遍历字符串时（索引index），考虑到无重复字符，我们先把字符逐个放到容器set中，并更新最长子串的长度，如果遇到了重复字符，即当前遍历的字符在set中，则要从set中删除重复字符，包括这个重复字符前面的所有字符，也就是从当前子串的最左边（left）开始删除，直到删除重复字符 3. 总结/分类 字符串，滑动窗口","link":"/2019/04/02/Leetcode-3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2-Python.html"},{"title":"hexo使用过中遇到的一个小问题","text":"问题描述 新博客搭建不久，突然hexo g报错， 12345678910111213$ hexo g(node:14620) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.INFO [hexo-math] Using engine 'mathjax'INFO Start processingFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlTemplate render error: (unknown path) [Line 12, Column 47] expected variable end at Object._prettifyError (D:\\hexo\\node_modules\\nunjucks\\src\\lib.js:36:11) at Template.render (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:542:21) at Environment.renderString (D:\\hexo\\node_modules\\nunjucks\\src\\environment.js:380:17) at Promise.fromCallback.cb (D:\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:62:48) at tryCatcher (D:\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23) at Function.Promise.fromNode.Promise.fromCallback (D:\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:180:30) 删除新写的文章之后，问题消失了， 仔细检查发现文章中公式里出现了两个连续的中括号“{ {”，导致了异常 解决方案 用空格给隔开就好了","link":"/2019/03/14/hexo%E4%BD%BF%E7%94%A8%E8%BF%87%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98.html"},{"title":"leetcode - 904 水果成篮","text":"在一排树中，第 i 棵树产生 tree[i] 型的水果。 你可以从你选择的任何树开始，然后重复执行以下步骤： 把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。 移动到当前树右侧的下一棵树。如果右边没有树，就停下来。 请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。 你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。 用这个程序你能收集的水果总量是多少？ 示例 1： 输入：[1,2,1] 输出：3 解释：我们可以收集 [1,2,1]。 示例 2： 输入：[0,1,2,2] 输出：3 解释：我们可以收集 [1,2,2]. 如果我们从第一棵树开始，我们将只能收集到 [0, 1]。 示例 3： 输入：[1,2,3,2,2] 输出：4 解释：我们可以收集 [2,3,2,2]. 如果我们从第一棵树开始，我们将只能收集到 [1, 2]。 示例 4： 输入：[3,3,3,1,2,1,1,2,3,3,4] 输出：5 解释：我们可以收集 [1,2,1,1,2]. 如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 个水果。 解题思路 这题其实要求其实很简单，就是找出数组中长度最大的连续由2种元素构成的子数组，返回这个子数组的长度。但由于本题有时间限制，只是朴素的解法会出现超时的情况，需要对实现进行一定的优化。 参考花花酱的hashtable+ sliding windows 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071class Solution {public:// 朴素解法 int totalFruit(vector&lt;int&gt;&amp; tree) { int size = tree.size(); int fruit[size] = {0}; int max =0; for(int i = 0; i&lt; size;i++){ int number = 1; int type1 = -1; // 第一种水果 type1 = tree[i]; int type2 = -1; for(int j = i+1; j&lt;size ;j++){ // 第二种水果 if(tree[j]!=tree[i]){ // type2 is null if(type2 &lt; 0){ type2 = tree[j]; number++; }else{ // 出现第三种水果，跳出循环 if(tree[j] != type2){ break; }else{ number++; } } }else{ number++; } } fruit[i] = number; if(number&gt; max) max = number; } return max; } public:// by [花花酱] (https://zxi.mytechroad.com/blog/hashtable/leetcode-904-fruit-into-baskets/) int totalFruit(vector&lt;int&gt;&amp; tree) { map&lt;int, int&gt; idx; // {fruit -&gt; last_index} int ans = 0; int cur = 0; for (int i = 0; i &lt; tree.size(); ++i) { int f = tree[i]; // 取一种水果 if (!idx.count(f)) { // 返回值只有0或1 // !idx.count(f) == 1,即出现某种新水果时 if (idx.size() == 2) { // 如果已经有了两种水果，再出现第三种水果的时候 auto it1 = begin(idx); auto it2 = next(it1); if (it1-&gt;second &gt; it2-&gt;second) swap(it1, it2); // 找到之前两种水果中，下标最小的水果，开始新的窗口 cur = i - it1-&gt;second - 1; // cur存新窗口的大小 idx.erase(it1); // 删除下标较小的水果 } } // 添加新水果的下标信息 idx[f] = i; // 比较新窗口和上一个窗口的大小 ans = max(++cur, ans); } return ans; }};","link":"/2019/03/13/leetcode-904-%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE.html"},{"title":"剑指offer（第二版）学习记录卡","text":"时间：2019-11-1 20:11:55 实习完回了学校，虽然没有找工作的压力，但是也没有定课题，迷茫之余，断断续续把这本书做了五十几道题。 觉得自己每天东一榔头西一棒槌，没有组织没有计划，野蛮生长，是成不了才的。 题目 解题思路 知识点 做题时间 备注 题1：赋值运算符函数 c++基础 未做 题2：实现单例模式 考虑多线程环境 单例模式 待复习 题3：数组中重复的数字 利用hash表来解决 数组 待复习 进阶不修改数组版本 题4：二维数组中的查找 从右下找到左上 数组 待复习 题5：替换空格 从后往前 字符串 我直接用了Python的replace 题6：从尾到头打印链表 利用stack遍历 链表 待复习 题7：重建二叉树 先序+中序 二叉树 待复习 题8：二叉树的下一个节点 递归 二叉树 待复习 题9：用两个栈实现队列 题10：fibonacci数列 递归 递归 待复习 自底向上，自顶向下 题11：旋转数组的最小数字 1.利用二分查找2.第一个比前一面一个值小的数就是结果 数组，二分查找 19.3.21 二分查找的方式还需要再写一遍 题12：矩阵中的路径 递归 数组，递归 19.3.24","link":"/2019/03/21/%E5%89%91%E6%8C%87offer%EF%BC%88%E7%AC%AC%E4%BA%8C%E7%89%88%EF%BC%89%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E5%8D%A1.html"},{"title":"依图科技机器学习算法测试工程师一面（19.3.28）","text":"依图科技也算是四大视觉算法独角兽之一了，在牛客网上看到招聘信息，投递了一份简历。 3月28日上午11点视频面试。 1. 自我介绍 2. 项目细节 3. 了解java么（我错了！） ​ 3.1 请介绍JVM ​ 3.2 了解GC吗？ 4. 编程能力 ​ 4.1 写一个java多线程（我是真的不会啊，再也不敢说自己会java了） 123// {1,2,3}// {4,5,6}// 请用多线程同时读取两个队列求和，最后汇总 ​ 4.2 括号计算（没写出来，完全没懂面试官的提示，= =） 12345678910111213141516171819202122232425262728# ()--&gt;1# AB--&gt; A+B# (A)--&gt; A*2# 分三种情况考虑，将左括号入栈，遇到右括号出站栈。# 判断栈顶是左括号的时候，push(1)# 判断栈顶是数字时，判断栈顶前一个是数字，累加，是左括号，累乘def sum(s) -&gt; int: result = [] for each in s: if each == '(': result.append(each) elif each == ')': if result[-1] == '(': result[-1] = 1 elif isinstance(result[-1], int): ans = result[-1] result = result[:-1] while isinstance(result[-1], int): result[-1] = result[-1] + ans ans = result[-1] result = result[:-1] result[-1] = ans * 2 return result# print(sum(\"(()(()))\"))print(sum(\"(()()())\")) 5. 有什么要问面试官 你们主要的工作是什么： 算法框架等的深度测评，未来可能会做深度学习框架的东西 比较偏向底层，基本没有业务方面的内容 总结 简历真的要改一改，投岗位也不能胡乱来了，不同的方向内容真的差很多； 基础知识，比如写代码的能力还是要加强，基本的算法题要多看看，掌握基本的套路； 对自己的项目介绍要再多联系，要自己想明白自己做了什么。 彩蛋 实验室小伙伴面试时的算法题：leetcode 754 reach a number","link":"/2019/03/28/%E4%BE%9D%E5%9B%BE%E7%A7%91%E6%8A%80%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%B8%80%E9%9D%A2%EF%BC%8819-3-28%EF%BC%89.html"},{"title":"搭建hexo博客","text":"1动机：看到别人有，羡慕，觉得好玩，实践了一下，前后大概两小时 相关软件安装 Git Node.js Hexo Hexo 环境配置 1.Hexo主题 选一个自己喜欢的主题，我这里直接用了教程里的nexT，后面遇到喜欢的再改吧 Github 主页 12$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next 2.初始化博客 选一个空白的不需要管理员权限的文件夹，打开git bash，在终端输入下面的代码，初始化博客 123456#建立一个博客文件夹，并初始化博客，&lt;folder&gt;为文件夹的名称，可以随便起名字$ hexo init &lt;folder&gt;#进入博客文件夹，&lt;folder&gt;为文件夹的名称$ cd &lt;folder&gt;# node.js的命令，根据博客既定的dependencies配置安装所有的依赖包$ npm install 3.基本配置 比如博客名，个人介绍呀，参考了这篇文章简书:Hexo的Next主题详细配置 1.站点计数 可以直接在配置里将busuanzi的false改成true，参考文档 2.配置在线后台管理 hexo 有个插件可以在网页上对博客进行管理，但是我觉得使用起来并不流流畅，还不如使用本地markdown工具Typora，不过配不配和用不用又没什么直接关系。 3.Hexo-admin `$ nmp i hexo-admin --save` 这个时候，登录 http://localhost:4000/admin 即可查看所有文章内容，并可视化进行修改。 还可以添加配置后台账号密码，我没设置，哈哈。 4.通过域名访问博客 绑到了GitHub.io，具体教程可以看这里GitHub+Hexo 搭建个人网站详细教程 不绑域名是因为买过，然后没怎么用就忘掉了。 有机会再绑自己的域名吧 5.添加评论(2019年3月14添加) 也是超级方便几行代码，详细参考这个为你的Hexo加上评论系统-Valine 有个小bug就是，在添加appid和appkey的时候，记得删除leancloud占位符 6.给博客添加豆瓣插件 参考这里 看到人家博客还有豆瓣读书什么的，给自己也加了一个，但是好像得时长更新一下。 4.小问题 busuanzi计数问题（未解决,本地依旧不太对,添加leancloud试试） 主题语言设定问题，中文要使用 zh-CN 无需列表换行问题（未解决，可能是不同平台的问题） 数学公式无法渲染（未解决，19.3.25号了，还是解决不了，以后用图片吧 3月27号，改好了，原来是我没有找对开关，[捂脸]）","link":"/2019/03/13/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2.html"},{"title":"和导师谈话后的整理","text":"请输入密码以阅读这篇私密文章。 9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daeb4d305f1eadb1b9428ddfd79889d1e0420a5e886e56642e50c0c70fcb74bc0495c225298f6c69ce5db8aa0057411ab36de00b2314e0c95e2de93314f93f8aba2f9cd4b4ad65eaf030140791e1dd20b59224726b5d38b7887239aec043c35538135720efe71647fd059ed6fd6285e2508826e8423972912e3b5c74f02ced239128543908af5228e98df5c770d26319d3eeeeb5802dd4698c88c507f3702c3687ef8e00c76a62e7045cbf2adc4dbeba39c11dbf1f6f768b2b6f3b3f6b00203f247c6aa91daf7a626c61aeea50bbb4719a0031e319cf3d5cc42eec16cb8aee8c48c6e4a78cebb577b2a5de3bba76d00fd5092b462587c498ce59c5ec39e1a7ac855a0bcbfe54c02aa883923f4a37e04d35b9173c9478e5e4188647309b453fe1ea52b8cd19c22ccb1e734eb3eadaf8fd12b869436600d258fa290b3428136659854a48a214c89d9593bc17ea627113eb59a6950a1deab2d613532fa4ac42c1bb8c4cec60cde095724db42901b66454bf7da383639e60c457527399054a71057c1cf9d3a26fb248287d0f7a156d93eb46c337e8bcc8baf256ec058d48494df517622254c68cab8ae147670c0978ad8b1a3029a18d30288f52a4babec8a296d05b0cd1a512eb9fbdf815066b7dad1b635ce8ab82211b282429cb9e1adc52e8ab97b12f6d6b832051f9ddec1b6ae493c4adfb96d48c0675cb41a68ffe2444cc405c2981b82fdec23aa610b530679be202fff2ec370e9c9eefcf01f1604fa73cdd6e550e3113b9149668149879e369d02ad76375b1edcd87e6e049e266e4e104e01ec5b8f2d6a549ae8136a1cf7e7e61b58af233209ebc8be6bee86922e66965eacced3517ad6bd239570da5d42febc3697a758389b960520631a0e064c161cbb35c3b70a9815cecd43cc9d6020198815c1de94571364ce559eb1662ee83478c34ae88bdeb8cddfa84cf8900b3c1fc4722306b71cea157cd92fa98dd85621c2c0d1929f4fb4e678bd4eaf39d1bd2d5184868d84592617eda9717048b13d713e4caee64a3f68314a59af830f3ce65535a3fc9964101844c61962e73a04ad3c4745ce346f76c592592ea259cee6883e8ab14491da6256658406501d8a124431e7537668a6965090e20ba71b18f564688e1fb2f91347f092407f911c65aa9354c94413352315a0650eb70ff2ad9cc97f11686951b8385b7bd3ba284cd051fa0af89ac52d331834263c28bedca87d3a4d6946a5d8654d67dc5f2b5a1080244fdc1966df0aa3795bab83e13397c6ab297170aadc3abbac899920f5ff3335c965a8a0d5f9f3401b9a7962355ad109d94a97286f1887169e2d84bba34e41dd52f65b7589241d4224f337936f7be822383950996bdf8eb0902befc8ef83fa5ef1e1cba0b317a7c40fedcc7d683bf83969aa0ee55a2632c692a17a92045ec6d7a138c46784af622f5ef33382fcd7b6f3f6bd339c356d621159661c8064fe930640ad77dabac1713a49db565ece06b54f458b8f76b36ec4dca583282bde8f81aa54be9d728d1e7aa0997954bb7bcf1bc0d645b7bcd6cb58bbbf8f3f37d725777d70e0b8fa603256e76502afd01f41997ea3f49f946b2189c72cb55c0dcee13768593e1721959fb4e4dd1553d7039bb66cd5f331ade771ce47b61eba030382a60a489bf52ff4f46f2e146822189c8320581a433b6fc4d03d69378ae2b5a121e4ec41ab7ee847b29865830f0f833a2864b63221373fcb859809cba9778c543142a7b3619b756056fcf10cfb7b985dfb91147fb7867cf6cc08526fbd6b010405970887aa887a44f4ae5afd3ee381cefbb56a5cb17bda1d8fcc0a78d19c5d48d672774e4f5a183441b67e2dcb039f870fbd23e092424023cfe02976a0001c71a3325a2b26c4c93a472ba2f63037d254e11570a26abadb0d513ca6f671e638b1a255e2bc643c2b40de87ce38b4987c4cf7bd905156c0e4714040ad43fa110f0b09cd42ce49b3cf1c8a3d9efebb7501801f7a32a9ad8a31a19749c6d2f522e97d3841052bd4ad1d5e414facd26c36c3f024f0f9507f3129c927c1861a41bd779a9d380c7ee81b648782fc250d402e440736593cad6d1808abda634df8ab8ad54abc5fbdd50302bd5a3d08aa91aa022ad526bfcfd468361ba9d8b4193a1a01e6c92e3325ec066e85eb2926a3bd17320b8f2b7247774a20754369d51019355dfe6cbd66bb3eeddc9329fcdede4025b31040025627a0b5529185c781a60e98356e8de476482f53800f272de0bedab6b68ce7971fe716837ba4561e2876310b91ce4f03c827afcef1d69acee9dfa5b400045046689e686bb76feddbf9ec9118a6a0b6261035bf10633308df4ee6f55092d2a8e21d30a40ab3840b9069f2ef9d8ed565dacab019559ac61afbbc7f72fd41cf4098fe3129dc99a0d8b644264bf3f211f7224a640bea399a0159c2adf4b461f53039b42c588794a6b5f3e814e6c8aa7cd289f6500832449a35360c402ddde2470af44534c0bc6ec67e98ab835862150c83d4e33f8bfecd1e4efbdb76d3c1233dfcc39a2db9c5ff4857c64cdc5767c1e629f9a2510df75c0114ff17f247ee69c94251635565f25c71905d59822fd00cce34e495c9110946d004978f9baa0fcfa26b5f01fc8e1605076a399a514362c469d0188aaeccd4e99960ffb6af1475826f219659a76b51cf3768bf301aeef66013b64df63930f32b2ad8a2b298bd8d19a6ad7ba6698257a82f99b45fde72f2921f9bd1088f5083ac9bd9e496f1cdd71426772c4e5ce36ddf337f3e70e21d7a4c458826fb3c43dd0e4ed8553a6147aa24bcd5bd5ccd83985fbd033fd32515a94859a3ebd8082c9711f4d7b82954c421a119ed3a368a4aa2a11ba519bc457d7e8805c6cd1e72474cbdbee74fb38e0a14320e98a4db122757ff7f165f41ceefb3faf94c88d4992fbf93ace7f7f0e46781e4777edf490f263a3a28d5a6920e4e3fce7bef30683b90f288febfce385859a8de3415b74ae6745b13ca6e2db0db2e0d26739e3ecb1026125cf6de08232fe660f5f2e5c6cf6ee66bbd0ae3e2bfa5583191f0bf7e1ec39ce56a9da158f3f082381728d3d7ddb93950c631be2d79845ee0a78c8a2a1d5794bb11604e6a2bd34792796ee022f0722938cf2e27d2ffc1cfff751622c8b40f5634fedd34299d6a851ba8cbd158e785a8a362dccf69c23c9ca12864d4d1cac7c1bc9c8377f163643134af0cd6f71f3073b70ee00d198d64ef5b5e79a557f8dcd68d87391f6b15618","link":"/2019/03/27/%E5%92%8C%E5%AF%BC%E5%B8%88%E8%B0%88%E8%AF%9D%E5%90%8E%E7%9A%84%E6%95%B4%E7%90%86.html"},{"title":"给博客加了点趣味","text":"花了两天时间，本来是想换成极简风格的maupassant，折腾了大半天，还调整了界面颜色什么的，后来想添加功能，但是不会，又回到Next主题了。 找到一个小哥哥的博客:yearito，按照他的教程，花了一天半的时间，改成了现在的样子。 还要很多问题，比如阅读次数，我还没配置好。 豆瓣的书单抓不到，所以干脆只留了电影的部分。 再花时间改进吧","link":"/2019/03/27/%E7%BB%99%E5%8D%9A%E5%AE%A2%E5%8A%A0%E4%BA%86%E7%82%B9%E8%B6%A3%E5%91%B3.html"},{"title":"阿里测试工程师一面（19.3.27）","text":"阿里投的是测试工程师，简历面打过一次电话。昨晚是正儿八经的一面，视频面试。 状态: 已经回绝（2019年3月29日） 1 自我介绍 2 有实习么 3 项目 ​ 高性能计算：预测任务是否收敛 ​ 3.1 收敛是指什么收敛 ​ 3.2 业务/技术背景 ​ ​ 3.3 收敛不收敛判断条件 ​ 3.4 是一个软件么，输入输出是什么 ​ ​ 3.5 什么叫好的结果/坏的，具体案例 ​ 3.6 跑具体的数据？ ​ ​ 3.7 哪怕只是一个模型，说一个具体的案例/case ​ ​ 3.8 什么数据，哪儿来的数据 ​ 3.9 准确率怎么评估 ​ 二分类准确率 ​ 3.10 都是手工打标？真实？ ​ 3.11 能不能介绍一下那些公式模型，或者说你的核心工作/责任 ​ ​ 3.12 再具体的详细的 核心的模型/算法 准确率怎么验证，挑一个讲一讲 ​ ​ 3.13 DT/LR/SVM挑一个讲讲 为什么好 4 主要语言是什么 ​ 4.1 java框架 ​ spring 等 ​ 4.2 spring框架aop / 特性 ​ 4.3 数据库接触过么，有什么 ​ mysql sqlserver ​ 安卓应用mysql ​ 4.4 数据库如何提高查询效率 ​ 4.5 mysql的缓存机制 5 有什么问题问面试官 ​ 现在部门工作 ​ 岗位类型：无线/搜索/算法/工具平台开发 ​","link":"/2019/03/28/%E9%98%BF%E9%87%8C%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%B8%80%E9%9D%A2%EF%BC%8819-3-27%EF%BC%89.html"}],"tags":[{"name":"生活","slug":"生活","link":"/tags/%E7%94%9F%E6%B4%BB/"},{"name":"面经","slug":"面经","link":"/tags/%E9%9D%A2%E7%BB%8F/"},{"name":"实习","slug":"实习","link":"/tags/%E5%AE%9E%E4%B9%A0/"},{"name":"生活， 闲聊","slug":"生活，-闲聊","link":"/tags/%E7%94%9F%E6%B4%BB%EF%BC%8C-%E9%97%B2%E8%81%8A/"},{"name":"总结","slug":"总结","link":"/tags/%E6%80%BB%E7%BB%93/"},{"name":"leetcode","slug":"leetcode","link":"/tags/leetcode/"},{"name":"机器学习","slug":"机器学习","link":"/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"},{"name":"面试复习","slug":"面试复习","link":"/tags/%E9%9D%A2%E8%AF%95%E5%A4%8D%E4%B9%A0/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"刷题笔记","slug":"刷题笔记","link":"/tags/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"},{"name":"剑指offer","slug":"剑指offer","link":"/tags/%E5%89%91%E6%8C%87offer/"},{"name":"刷题","slug":"刷题","link":"/tags/%E5%88%B7%E9%A2%98/"},{"name":"搭建环境","slug":"搭建环境","link":"/tags/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83/"},{"name":"思考","slug":"思考","link":"/tags/%E6%80%9D%E8%80%83/"},{"name":"闲聊","slug":"闲聊","link":"/tags/%E9%97%B2%E8%81%8A/"}],"categories":[{"name":"聊天","slug":"聊天","link":"/categories/%E8%81%8A%E5%A4%A9/"},{"name":"学习","slug":"学习","link":"/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"生活","slug":"生活","link":"/categories/%E7%94%9F%E6%B4%BB/"},{"name":"博客","slug":"博客","link":"/categories/%E5%8D%9A%E5%AE%A2/"},{"name":"工作","slug":"工作","link":"/categories/%E5%B7%A5%E4%BD%9C/"}]}